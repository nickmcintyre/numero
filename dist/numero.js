/*! For license information please see numero.js.LICENSE.txt */
var num;(()=>{var e={948:(e,t,n)=>{var r=n(140),a=n(980),i=n(730),s=n(405),o=n(26),u=n(865),c=n(721);c.alea=r,c.xor128=a,c.xorwow=i,c.xorshift7=s,c.xor4096=o,c.tychei=u,e.exports=c},140:function(e,t,n){var r;!function(e,a,i){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},980:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},26:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},405:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},730:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},721:(e,t,n)=>{var r;!function(a,i){var s,o=this,u=256,c=i.pow(u,6),l=i.pow(2,52),p=2*l,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(i.random=e,t):e})(b,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<u;)s[a]=a++;for(a=0;a<u;a++)s[a]=s[i=d&i+e[a%n]+(t=s[a])],s[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,s=r.S;e--;)t=s[a=d&a+1],n=n*u+s[d&(s[a]=s[i=d&i+t])+(s[i]=t)];return r.i=a,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(i.seedrandom=h,y(i.random(),a),e.exports){e.exports=h;try{s=n(914)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},129:(e,t,n)=>{var r=n(626),a=n(477),i=n(868),s=n(197),o=n(954),u=n(408),c=n(662);c.alea=r,c.xor128=a,c.xorwow=i,c.xorshift7=s,c.xor4096=o,c.tychei=u,e.exports=c},626:function(e,t,n){var r;!function(e,a,i){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},408:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},954:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},197:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},868:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},662:(e,t,n)=>{var r;!function(a,i){var s,o=this,u=256,c=i.pow(u,6),l=i.pow(2,52),p=2*l,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(i.random=e,t):e})(b,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<u;)s[a]=a++;for(a=0;a<u;a++)s[a]=s[i=d&i+e[a%n]+(t=s[a])],s[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,s=r.S;e--;)t=s[a=d&a+1],n=n*u+s[d&(s[a]=s[i=d&i+t])+(s[i]=t)];return r.i=a,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(i.seedrandom=h,y(i.random(),a),e.exports){e.exports=h;try{s=n(778)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},684:function(e,t){var n;!function(r){"use strict";var a=function(e){return.5*(Math.exp(e)+Math.exp(-e))},i=function(e){return.5*(Math.exp(e)-Math.exp(-e))},s=function(){throw SyntaxError("Invalid Param")};function o(e,t){var n=Math.abs(e),r=Math.abs(t);return 0===e?Math.log(r):0===t?Math.log(n):n<3e3&&r<3e3?.5*Math.log(e*e+t*t):Math.log(e/Math.cos(Math.atan2(t,e)))}function u(e,t){if(!(this instanceof u))return new u(e,t);var n=function(e,t){var n={re:0,im:0};if(null==e)n.re=n.im=0;else if(void 0!==t)n.re=e,n.im=t;else switch(typeof e){case"object":if("im"in e&&"re"in e)n.re=e.re,n.im=e.im;else if("abs"in e&&"arg"in e){if(!Number.isFinite(e.abs)&&Number.isFinite(e.arg))return u.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if("r"in e&&"phi"in e){if(!Number.isFinite(e.r)&&Number.isFinite(e.phi))return u.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else 2===e.length?(n.re=e[0],n.im=e[1]):s();break;case"string":n.im=n.re=0;var r=e.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),a=1,i=0;null===r&&s();for(var o=0;o<r.length;o++){var c=r[o];" "===c||"\t"===c||"\n"===c||("+"===c?a++:"-"===c?i++:"i"===c||"I"===c?(a+i===0&&s()," "===r[o+1]||isNaN(r[o+1])?n.im+=parseFloat((i%2?"-":"")+"1"):(n.im+=parseFloat((i%2?"-":"")+r[o+1]),o++),a=i=0):((a+i===0||isNaN(c))&&s(),"i"===r[o+1]||"I"===r[o+1]?(n.im+=parseFloat((i%2?"-":"")+c),o++):n.re+=parseFloat((i%2?"-":"")+c),a=i=0))}a+i>0&&s();break;case"number":n.im=0,n.re=e;break;default:s()}return isNaN(n.re)||isNaN(n.im),n}(e,t);this.re=n.re,this.im=n.im}u.prototype={re:0,im:0,sign:function(){var e=this.abs();return new u(this.re/e,this.im/e)},add:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re+n.re,this.im+n.im)},sub:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re-n.re,this.im-n.im)},mul:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isZero()||this.isZero()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:0===n.im&&0===this.im?new u(this.re*n.re,0):new u(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){var n=new u(e,t);if(this.isZero()&&n.isZero()||this.isInfinite()&&n.isInfinite())return u.NAN;if(this.isInfinite()||n.isZero())return u.INFINITY;if(this.isZero()||n.isInfinite())return u.ZERO;e=this.re,t=this.im;var r,a,i=n.re,s=n.im;return 0===s?new u(e/i,t/i):Math.abs(i)<Math.abs(s)?new u((e*(a=i/s)+t)/(r=i*a+s),(t*a-e)/r):new u((e+t*(a=s/i))/(r=s*a+i),(t-e*a)/r)},pow:function(e,t){var n=new u(e,t);if(e=this.re,t=this.im,n.isZero())return u.ONE;if(0===n.im){if(0===t&&e>0)return new u(Math.pow(e,n.re),0);if(0===e)switch((n.re%4+4)%4){case 0:return new u(Math.pow(t,n.re),0);case 1:return new u(0,Math.pow(t,n.re));case 2:return new u(-Math.pow(t,n.re),0);case 3:return new u(0,-Math.pow(t,n.re))}}if(0===e&&0===t&&n.re>0&&n.im>=0)return u.ZERO;var r=Math.atan2(t,e),a=o(e,t);return e=Math.exp(n.re*a-n.im*r),t=n.im*a+n.re*r,new u(e*Math.cos(t),e*Math.sin(t))},sqrt:function(){var e,t,n=this.re,r=this.im,a=this.abs();if(n>=0){if(0===r)return new u(Math.sqrt(n),0);e=.5*Math.sqrt(2*(a+n))}else e=Math.abs(r)/Math.sqrt(2*(a-n));return t=n<=0?.5*Math.sqrt(2*(a-n)):Math.abs(r)/Math.sqrt(2*(a+n)),new u(e,r<0?-t:t)},exp:function(){var e=Math.exp(this.re);return this.im,new u(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){var e=this.re,t=this.im;return new u(Math.expm1(e)*Math.cos(t)+function(e){var t=Math.PI/4;if(-t>e||e>t)return Math.cos(e)-1;var n=e*e;return n*(n*(n*(n*(n*(n*(n*(n/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-.5)}(t),Math.exp(e)*Math.sin(t))},log:function(){var e=this.re,t=this.im;return new u(o(e,t),Math.atan2(t,e))},abs:function(){return e=this.re,t=this.im,n=Math.abs(e),r=Math.abs(t),n<3e3&&r<3e3?Math.sqrt(n*n+r*r):(n<r?(n=r,r=e/t):r=t/e,n*Math.sqrt(1+r*r));var e,t,n,r},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var e=this.re,t=this.im;return new u(Math.sin(e)*a(t),Math.cos(e)*i(t))},cos:function(){var e=this.re,t=this.im;return new u(Math.cos(e)*a(t),-Math.sin(e)*i(t))},tan:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)+a(t);return new u(Math.sin(e)/n,i(t)/n)},cot:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)-a(t);return new u(-Math.sin(e)/n,i(t)/n)},sec:function(){var e=this.re,t=this.im,n=.5*a(2*t)+.5*Math.cos(2*e);return new u(Math.cos(e)*a(t)/n,Math.sin(e)*i(t)/n)},csc:function(){var e=this.re,t=this.im,n=.5*a(2*t)-.5*Math.cos(2*e);return new u(Math.sin(e)*a(t)/n,-Math.cos(e)*i(t)/n)},asin:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(r.im,-r.re)},acos:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(Math.PI/2-r.im,r.re)},atan:function(){var e=this.re,t=this.im;if(0===e){if(1===t)return new u(0,1/0);if(-1===t)return new u(0,-1/0)}var n=e*e+(1-t)*(1-t),r=new u((1-t*t-e*e)/n,-2*e/n).log();return new u(-.5*r.im,.5*r.re)},acot:function(){var e=this.re,t=this.im;if(0===t)return new u(Math.atan2(1,e),0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atan():new u(0!==e?e/0:0,0!==t?-t/0:0).atan()},asec:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acos():new u(0!==e?e/0:0,0!==t?-t/0:0).acos()},acsc:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(Math.PI/2,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asin():new u(0!==e?e/0:0,0!==t?-t/0:0).asin()},sinh:function(){var e=this.re,t=this.im;return new u(i(e)*Math.cos(t),a(e)*Math.sin(t))},cosh:function(){var e=this.re,t=this.im;return new u(a(e)*Math.cos(t),i(e)*Math.sin(t))},tanh:function(){var e=2*this.re,t=2*this.im,n=a(e)+Math.cos(t);return new u(i(e)/n,Math.sin(t)/n)},coth:function(){var e=2*this.re,t=2*this.im,n=a(e)-Math.cos(t);return new u(i(e)/n,-Math.sin(t)/n)},csch:function(){var e=this.re,t=this.im,n=Math.cos(2*t)-a(2*e);return new u(-2*i(e)*Math.cos(t)/n,2*a(e)*Math.sin(t)/n)},sech:function(){var e=this.re,t=this.im,n=Math.cos(2*t)+a(2*e);return new u(2*a(e)*Math.cos(t)/n,-2*i(e)*Math.sin(t)/n)},asinh:function(){var e=this.im;this.im=-this.re,this.re=e;var t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){var e=this.acos();if(e.im<=0){var t=e.re;e.re=-e.im,e.im=t}else t=e.im,e.im=-e.re,e.re=t;return e},atanh:function(){var e=this.re,t=this.im,n=e>1&&0===t,r=1-e,a=1+e,i=r*r+t*t,s=0!==i?new u((a*r-t*t)/i,(t*r+a*t)/i):new u(-1!==e?e/0:0,0!==t?t/0:0),c=s.re;return s.re=o(s.re,s.im)/2,s.im=Math.atan2(s.im,c)/2,n&&(s.im=-s.im),s},acoth:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,Math.PI/2);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atanh():new u(0!==e?e/0:0,0!==t?-t/0:0).atanh()},acsch:function(){var e=this.re,t=this.im;if(0===t)return new u(0!==e?Math.log(e+Math.sqrt(e*e+1)):1/0,0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asinh():new u(0!==e?e/0:0,0!==t?-t/0:0).asinh()},asech:function(){var e=this.re,t=this.im;if(this.isZero())return u.INFINITY;var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acosh():new u(0!==e?e/0:0,0!==t?-t/0:0).acosh()},inverse:function(){if(this.isZero())return u.INFINITY;if(this.isInfinite())return u.ZERO;var e=this.re,t=this.im,n=e*e+t*t;return new u(e/n,-t/n)},conjugate:function(){return new u(this.re,-this.im)},neg:function(){return new u(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new u(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new u(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new u(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){var n=new u(e,t);return Math.abs(n.re-this.re)<=u.EPSILON&&Math.abs(n.im-this.im)<=u.EPSILON},clone:function(){return new u(this.re,this.im)},toString:function(){var e=this.re,t=this.im,n="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(e)<u.EPSILON&&(e=0),Math.abs(t)<u.EPSILON&&(t=0),0===t?n+e:(0!==e?(n+=e,n+=" ",t<0?(t=-t,n+="-"):n+="+",n+=" "):t<0&&(t=-t,n+="-"),1!==t&&(n+=t),n+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return 0===this.im&&0===this.re},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},u.ZERO=new u(0,0),u.ONE=new u(1,0),u.I=new u(0,1),u.PI=new u(Math.PI,0),u.E=new u(Math.E,0),u.INFINITY=new u(1/0,1/0),u.NAN=new u(NaN,NaN),u.EPSILON=1e-15,void 0===(n=function(){return u}.apply(t,[]))||(e.exports=n)}()},776:function(e,t,n){var r;!function(a){"use strict";var i,s,o,u=9e15,c=1e9,l="0123456789abcdef",p="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",d="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",h={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},f=!0,m="[DecimalError] ",g=m+"Invalid argument: ",y=m+"Precision limit exceeded",x=m+"crypto unavailable",b="[object Decimal]",v=Math.floor,w=Math.pow,N=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,S=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,k=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,I=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,E=1e7,C=p.length-1,T=d.length-1,D={toStringTag:b};function A(e){var t,n,r,a=e.length-1,i="",s=e[0];if(a>0){for(i+=s,t=1;t<a;t++)(n=7-(r=e[t]+"").length)&&(i+=U(n)),i+=r;(n=7-(r=(s=e[t])+"").length)&&(i+=U(n))}else if(0===s)return"0";for(;s%10==0;)s/=10;return i+s}function M(e,t,n){if(e!==~~e||e<t||e>n)throw Error(g+e)}function $(e,t,n,r){var a,i,s,o;for(i=e[0];i>=10;i/=10)--t;return--t<0?(t+=7,a=0):(a=Math.ceil((t+1)/7),t%=7),i=w(10,7-t),o=e[a]%i|0,null==r?t<3?(0==t?o=o/100|0:1==t&&(o=o/10|0),s=n<4&&99999==o||n>3&&49999==o||5e4==o||0==o):s=(n<4&&o+1==i||n>3&&o+1==i/2)&&(e[a+1]/i/100|0)==w(10,t-2)-1||(o==i/2||0==o)&&0==(e[a+1]/i/100|0):t<4?(0==t?o=o/1e3|0:1==t?o=o/100|0:2==t&&(o=o/10|0),s=(r||n<4)&&9999==o||!r&&n>3&&4999==o):s=((r||n<4)&&o+1==i||!r&&n>3&&o+1==i/2)&&(e[a+1]/i/1e3|0)==w(10,t-3)-1,s}function O(e,t,n){for(var r,a,i=[0],s=0,o=e.length;s<o;){for(a=i.length;a--;)i[a]*=t;for(i[0]+=l.indexOf(e.charAt(s++)),r=0;r<i.length;r++)i[r]>n-1&&(void 0===i[r+1]&&(i[r+1]=0),i[r+1]+=i[r]/n|0,i[r]%=n)}return i.reverse()}D.absoluteValue=D.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),_(e)},D.ceil=function(){return _(new this.constructor(this),this.e+1,2)},D.clampedTo=D.clamp=function(e,t){var n=this,r=n.constructor;if(e=new r(e),t=new r(t),!e.s||!t.s)return new r(NaN);if(e.gt(t))throw Error(g+t);return n.cmp(e)<0?e:n.cmp(t)>0?t:new r(n)},D.comparedTo=D.cmp=function(e){var t,n,r,a,i=this,s=i.d,o=(e=new i.constructor(e)).d,u=i.s,c=e.s;if(!s||!o)return u&&c?u!==c?u:s===o?0:!s^u<0?1:-1:NaN;if(!s[0]||!o[0])return s[0]?u:o[0]?-c:0;if(u!==c)return u;if(i.e!==e.e)return i.e>e.e^u<0?1:-1;for(t=0,n=(r=s.length)<(a=o.length)?r:a;t<n;++t)if(s[t]!==o[t])return s[t]>o[t]^u<0?1:-1;return r===a?0:r>a^u<0?1:-1},D.cosine=D.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,a;if(t.isZero())return t;(r=t.d.length)<32?a=(1/Y(4,n=Math.ceil(r/3))).toString():(n=16,a="2.3283064365386962890625e-10"),e.precision+=n,t=Z(e,1,t.times(a),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,J(r,n)),r.precision=e,r.rounding=t,_(2==o||3==o?n.neg():n,e,t,!0)):new r(1):new r(NaN)},D.cubeRoot=D.cbrt=function(){var e,t,n,r,a,i,s,o,u,c,l=this,p=l.constructor;if(!l.isFinite()||l.isZero())return new p(l);for(f=!1,(i=l.s*w(l.s*l,1/3))&&Math.abs(i)!=1/0?r=new p(i.toString()):(n=A(l.d),(i=((e=l.e)-n.length+1)%3)&&(n+=1==i||-2==i?"0":"00"),i=w(n,1/3),e=v((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=i==1/0?"5e"+e:(n=i.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=l.s),s=(e=p.precision)+3;;)if(c=(u=(o=r).times(o).times(o)).plus(l),r=R(c.plus(l).times(o),c.plus(u),s+2,1),A(o.d).slice(0,s)===(n=A(r.d)).slice(0,s)){if("9999"!=(n=n.slice(s-3,s+1))&&(a||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(_(r,e+1,1),t=!r.times(r).times(r).eq(l));break}if(!a&&(_(o,e+1,0),o.times(o).times(o).eq(l))){r=o;break}s+=4,a=1}return f=!0,_(r,e,p.rounding,t)},D.decimalPlaces=D.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-v(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},D.dividedBy=D.div=function(e){return R(this,new this.constructor(e))},D.dividedToIntegerBy=D.divToInt=function(e){var t=this.constructor;return _(R(this,new t(e),0,1,1),t.precision,t.rounding)},D.equals=D.eq=function(e){return 0===this.cmp(e)},D.floor=function(){return _(new this.constructor(this),this.e+1,3)},D.greaterThan=D.gt=function(e){return this.cmp(e)>0},D.greaterThanOrEqualTo=D.gte=function(e){var t=this.cmp(e);return 1==t||0===t},D.hyperbolicCosine=D.cosh=function(){var e,t,n,r,a,i=this,s=i.constructor,o=new s(1);if(!i.isFinite())return new s(i.s?1/0:NaN);if(i.isZero())return o;n=s.precision,r=s.rounding,s.precision=n+Math.max(i.e,i.sd())+4,s.rounding=1,(a=i.d.length)<32?t=(1/Y(4,e=Math.ceil(a/3))).toString():(e=16,t="2.3283064365386962890625e-10"),i=Z(s,1,i.times(t),new s(1),!0);for(var u,c=e,l=new s(8);c--;)u=i.times(i),i=o.minus(u.times(l.minus(u.times(l))));return _(i,s.precision=n,s.rounding=r,!0)},D.hyperbolicSine=D.sinh=function(){var e,t,n,r,a=this,i=a.constructor;if(!a.isFinite()||a.isZero())return new i(a);if(t=i.precision,n=i.rounding,i.precision=t+Math.max(a.e,a.sd())+4,i.rounding=1,(r=a.d.length)<3)a=Z(i,2,a,a,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,a=Z(i,2,a=a.times(1/Y(5,e)),a,!0);for(var s,o=new i(5),u=new i(16),c=new i(20);e--;)s=a.times(a),a=a.times(o.plus(s.times(u.times(s).plus(c))))}return i.precision=t,i.rounding=n,_(a,t,n,!0)},D.hyperbolicTangent=D.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,R(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},D.inverseCosine=D.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),a=n.precision,i=n.rounding;return-1!==r?0===r?t.isNeg()?L(n,a,i):new n(0):new n(NaN):t.isZero()?L(n,a+4,i).times(.5):(n.precision=a+6,n.rounding=1,t=t.asin(),e=L(n,a+4,i).times(.5),n.precision=a,n.rounding=i,e.minus(t))},D.inverseHyperbolicCosine=D.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,f=!1,n=n.times(n).minus(1).sqrt().plus(n),f=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},D.inverseHyperbolicSine=D.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,f=!1,n=n.times(n).plus(1).sqrt().plus(n),f=!0,r.precision=e,r.rounding=t,n.ln())},D.inverseHyperbolicTangent=D.atanh=function(){var e,t,n,r,a=this,i=a.constructor;return a.isFinite()?a.e>=0?new i(a.abs().eq(1)?a.s/0:a.isZero()?a:NaN):(e=i.precision,t=i.rounding,r=a.sd(),Math.max(r,e)<2*-a.e-1?_(new i(a),e,t,!0):(i.precision=n=r-a.e,a=R(a.plus(1),new i(1).minus(a),n+e,1),i.precision=e+4,i.rounding=1,a=a.ln(),i.precision=e,i.rounding=t,a.times(.5))):new i(NaN)},D.inverseSine=D.asin=function(){var e,t,n,r,a=this,i=a.constructor;return a.isZero()?new i(a):(t=a.abs().cmp(1),n=i.precision,r=i.rounding,-1!==t?0===t?((e=L(i,n+4,r).times(.5)).s=a.s,e):new i(NaN):(i.precision=n+6,i.rounding=1,a=a.div(new i(1).minus(a.times(a)).sqrt().plus(1)).atan(),i.precision=n,i.rounding=r,a.times(2)))},D.inverseTangent=D.atan=function(){var e,t,n,r,a,i,s,o,u,c=this,l=c.constructor,p=l.precision,d=l.rounding;if(c.isFinite()){if(c.isZero())return new l(c);if(c.abs().eq(1)&&p+4<=T)return(s=L(l,p+4,d).times(.25)).s=c.s,s}else{if(!c.s)return new l(NaN);if(p+4<=T)return(s=L(l,p+4,d).times(.5)).s=c.s,s}for(l.precision=o=p+10,l.rounding=1,e=n=Math.min(28,o/7+2|0);e;--e)c=c.div(c.times(c).plus(1).sqrt().plus(1));for(f=!1,t=Math.ceil(o/7),r=1,u=c.times(c),s=new l(c),a=c;-1!==e;)if(a=a.times(u),i=s.minus(a.div(r+=2)),a=a.times(u),void 0!==(s=i.plus(a.div(r+=2))).d[t])for(e=t;s.d[e]===i.d[e]&&e--;);return n&&(s=s.times(2<<n-1)),f=!0,_(s,l.precision=p,l.rounding=d,!0)},D.isFinite=function(){return!!this.d},D.isInteger=D.isInt=function(){return!!this.d&&v(this.e/7)>this.d.length-2},D.isNaN=function(){return!this.s},D.isNegative=D.isNeg=function(){return this.s<0},D.isPositive=D.isPos=function(){return this.s>0},D.isZero=function(){return!!this.d&&0===this.d[0]},D.lessThan=D.lt=function(e){return this.cmp(e)<0},D.lessThanOrEqualTo=D.lte=function(e){return this.cmp(e)<1},D.logarithm=D.log=function(e){var t,n,r,a,i,s,o,u,c=this,l=c.constructor,p=l.precision,d=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=c.d,c.s<0||!n||!n[0]||c.eq(1))return new l(n&&!n[0]?-1/0:1!=c.s?NaN:n?0:1/0);if(t)if(n.length>1)i=!0;else{for(a=n[0];a%10==0;)a/=10;i=1!==a}if(f=!1,s=G(c,o=p+5),r=t?B(l,o+10):G(e,o),$((u=R(s,r,o,1)).d,a=p,d))do{if(s=G(c,o+=10),r=t?B(l,o+10):G(e,o),u=R(s,r,o,1),!i){+A(u.d).slice(a+1,a+15)+1==1e14&&(u=_(u,p+1,0));break}}while($(u.d,a+=10,d));return f=!0,_(u,p,d)},D.minus=D.sub=function(e){var t,n,r,a,i,s,o,u,c,l,p,d,h=this,m=h.constructor;if(e=new m(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new m(e.d||h.s!==e.s?h:NaN):e=new m(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(c=h.d,d=e.d,o=m.precision,u=m.rounding,!c[0]||!d[0]){if(d[0])e.s=-e.s;else{if(!c[0])return new m(3===u?-0:0);e=new m(h)}return f?_(e,o,u):e}if(n=v(e.e/7),l=v(h.e/7),c=c.slice(),i=l-n){for((p=i<0)?(t=c,i=-i,s=d.length):(t=d,n=l,s=c.length),i>(r=Math.max(Math.ceil(o/7),s)+2)&&(i=r,t.length=1),t.reverse(),r=i;r--;)t.push(0);t.reverse()}else{for((p=(r=c.length)<(s=d.length))&&(s=r),r=0;r<s;r++)if(c[r]!=d[r]){p=c[r]<d[r];break}i=0}for(p&&(t=c,c=d,d=t,e.s=-e.s),s=c.length,r=d.length-s;r>0;--r)c[s++]=0;for(r=d.length;r>i;){if(c[--r]<d[r]){for(a=r;a&&0===c[--a];)c[a]=E-1;--c[a],c[r]+=E}c[r]-=d[r]}for(;0===c[--s];)c.pop();for(;0===c[0];c.shift())--n;return c[0]?(e.d=c,e.e=z(c,n),f?_(e,o,u):e):new m(3===u?-0:0)},D.modulo=D.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?_(new r(n),r.precision,r.rounding):(f=!1,9==r.modulo?(t=R(n,e.abs(),0,3,1)).s*=e.s:t=R(n,e,0,r.modulo,1),t=t.times(e),f=!0,n.minus(t))},D.naturalExponential=D.exp=function(){return j(this)},D.naturalLogarithm=D.ln=function(){return G(this)},D.negated=D.neg=function(){var e=new this.constructor(this);return e.s=-e.s,_(e)},D.plus=D.add=function(e){var t,n,r,a,i,s,o,u,c,l,p=this,d=p.constructor;if(e=new d(e),!p.d||!e.d)return p.s&&e.s?p.d||(e=new d(e.d||p.s===e.s?p:NaN)):e=new d(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(c=p.d,l=e.d,o=d.precision,u=d.rounding,!c[0]||!l[0])return l[0]||(e=new d(p)),f?_(e,o,u):e;if(i=v(p.e/7),r=v(e.e/7),c=c.slice(),a=i-r){for(a<0?(n=c,a=-a,s=l.length):(n=l,r=i,s=c.length),a>(s=(i=Math.ceil(o/7))>s?i+1:s+1)&&(a=s,n.length=1),n.reverse();a--;)n.push(0);n.reverse()}for((s=c.length)-(a=l.length)<0&&(a=s,n=l,l=c,c=n),t=0;a;)t=(c[--a]=c[a]+l[a]+t)/E|0,c[a]%=E;for(t&&(c.unshift(t),++r),s=c.length;0==c[--s];)c.pop();return e.d=c,e.e=z(c,r),f?_(e,o,u):e},D.precision=D.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(g+e);return n.d?(t=P(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},D.round=function(){var e=this,t=e.constructor;return _(new t(e),e.e+1,t.rounding)},D.sine=D.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return t.isZero()?t:Z(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=Z(e,2,t=t.times(1/Y(5,n)),t);for(var a,i=new e(5),s=new e(16),o=new e(20);n--;)a=t.times(t),t=t.times(i.plus(a.times(s.times(a).minus(o))));return t}(r,J(r,n)),r.precision=e,r.rounding=t,_(o>2?n.neg():n,e,t,!0)):new r(NaN)},D.squareRoot=D.sqrt=function(){var e,t,n,r,a,i,s=this,o=s.d,u=s.e,c=s.s,l=s.constructor;if(1!==c||!o||!o[0])return new l(!c||c<0&&(!o||o[0])?NaN:o?s:1/0);for(f=!1,0==(c=Math.sqrt(+s))||c==1/0?(((t=A(o)).length+u)%2==0&&(t+="0"),c=Math.sqrt(t),u=v((u+1)/2)-(u<0||u%2),r=new l(t=c==1/0?"5e"+u:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+u)):r=new l(c.toString()),n=(u=l.precision)+3;;)if(r=(i=r).plus(R(s,i,n+2,1)).times(.5),A(i.d).slice(0,n)===(t=A(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(a||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(_(r,u+1,1),e=!r.times(r).eq(s));break}if(!a&&(_(i,u+1,0),i.times(i).eq(s))){r=i;break}n+=4,a=1}return f=!0,_(r,u,l.rounding,e)},D.tangent=D.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=R(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,_(2==o||4==o?n.neg():n,e,t,!0)):new r(NaN)},D.times=D.mul=function(e){var t,n,r,a,i,s,o,u,c,l=this,p=l.constructor,d=l.d,h=(e=new p(e)).d;if(e.s*=l.s,!(d&&d[0]&&h&&h[0]))return new p(!e.s||d&&!d[0]&&!h||h&&!h[0]&&!d?NaN:d&&h?0*e.s:e.s/0);for(n=v(l.e/7)+v(e.e/7),(u=d.length)<(c=h.length)&&(i=d,d=h,h=i,s=u,u=c,c=s),i=[],r=s=u+c;r--;)i.push(0);for(r=c;--r>=0;){for(t=0,a=u+r;a>r;)o=i[a]+h[r]*d[a-r-1]+t,i[a--]=o%E|0,t=o/E|0;i[a]=(i[a]+t)%E|0}for(;!i[--s];)i.pop();return t?++n:i.shift(),e.d=i,e.e=z(i,n),f?_(e,p.precision,p.rounding):e},D.toBinary=function(e,t){return Q(this,2,e,t)},D.toDecimalPlaces=D.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(M(e,0,c),void 0===t?t=r.rounding:M(t,0,8),_(n,e+n.e+1,t))},D.toExponential=function(e,t){var n,r=this,a=r.constructor;return void 0===e?n=F(r,!0):(M(e,0,c),void 0===t?t=a.rounding:M(t,0,8),n=F(r=_(new a(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},D.toFixed=function(e,t){var n,r,a=this,i=a.constructor;return void 0===e?n=F(a):(M(e,0,c),void 0===t?t=i.rounding:M(t,0,8),n=F(r=_(new i(a),e+a.e+1,t),!1,e+r.e+1)),a.isNeg()&&!a.isZero()?"-"+n:n},D.toFraction=function(e){var t,n,r,a,i,s,o,u,c,l,p,d,h=this,m=h.d,y=h.constructor;if(!m)return new y(h);if(c=n=new y(1),r=u=new y(0),s=(i=(t=new y(r)).e=P(m)-h.e-1)%7,t.d[0]=w(10,s<0?7+s:s),null==e)e=i>0?t:c;else{if(!(o=new y(e)).isInt()||o.lt(c))throw Error(g+o);e=o.gt(t)?i>0?t:c:o}for(f=!1,o=new y(A(m)),l=y.precision,y.precision=i=7*m.length*2;p=R(o,t,0,1,1),1!=(a=n.plus(p.times(r))).cmp(e);)n=r,r=a,a=c,c=u.plus(p.times(a)),u=a,a=t,t=o.minus(p.times(a)),o=a;return a=R(e.minus(n),r,0,1,1),u=u.plus(a.times(c)),n=n.plus(a.times(r)),u.s=c.s=h.s,d=R(c,r,i,1).minus(h).abs().cmp(R(u,n,i,1).minus(h).abs())<1?[c,r]:[u,n],y.precision=l,f=!0,d},D.toHexadecimal=D.toHex=function(e,t){return Q(this,16,e,t)},D.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:M(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(f=!1,n=R(n,e,0,t,1).times(e),f=!0,_(n)):(e.s=n.s,n=e),n},D.toNumber=function(){return+this},D.toOctal=function(e,t){return Q(this,8,e,t)},D.toPower=D.pow=function(e){var t,n,r,a,i,s,o=this,u=o.constructor,c=+(e=new u(e));if(!(o.d&&e.d&&o.d[0]&&e.d[0]))return new u(w(+o,c));if((o=new u(o)).eq(1))return o;if(r=u.precision,i=u.rounding,e.eq(1))return _(o,r,i);if((t=v(e.e/7))>=e.d.length-1&&(n=c<0?-c:c)<=9007199254740991)return a=q(u,o,n,r),e.s<0?new u(1).div(a):_(a,r,i);if((s=o.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(s=1),0==o.e&&1==o.d[0]&&1==o.d.length)return o.s=s,o}return(t=0!=(n=w(+o,c))&&isFinite(n)?new u(n+"").e:v(c*(Math.log("0."+A(o.d))/Math.LN10+o.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?s/0:0):(f=!1,u.rounding=o.s=1,n=Math.min(12,(t+"").length),(a=j(e.times(G(o,r+n)),r)).d&&$((a=_(a,r+5,1)).d,r,i)&&(t=r+10,+A((a=_(j(e.times(G(o,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(a=_(a,r+1,0))),a.s=s,f=!0,u.rounding=i,_(a,r,i))},D.toPrecision=function(e,t){var n,r=this,a=r.constructor;return void 0===e?n=F(r,r.e<=a.toExpNeg||r.e>=a.toExpPos):(M(e,1,c),void 0===t?t=a.rounding:M(t,0,8),n=F(r=_(new a(r),e,t),e<=r.e||r.e<=a.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},D.toSignificantDigits=D.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(M(e,1,c),void 0===t?t=n.rounding:M(t,0,8)),_(new n(this),e,t)},D.toString=function(){var e=this,t=e.constructor,n=F(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},D.truncated=D.trunc=function(){return _(new this.constructor(this),this.e+1,1)},D.valueOf=D.toJSON=function(){var e=this,t=e.constructor,n=F(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var R=function(){function e(e,t,n){var r,a=0,i=e.length;for(e=e.slice();i--;)r=e[i]*t+a,e[i]=r%n|0,a=r/n|0;return a&&e.unshift(a),e}function t(e,t,n,r){var a,i;if(n!=r)i=n>r?1:-1;else for(a=i=0;a<n;a++)if(e[a]!=t[a]){i=e[a]>t[a]?1:-1;break}return i}function n(e,t,n,r){for(var a=0;n--;)e[n]-=a,a=e[n]<t[n]?1:0,e[n]=a*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,a,i,o,u,c){var l,p,d,h,f,m,g,y,x,b,w,N,S,k,I,C,T,D,A,M,$=r.constructor,O=r.s==a.s?1:-1,R=r.d,F=a.d;if(!(R&&R[0]&&F&&F[0]))return new $(r.s&&a.s&&(R?!F||R[0]!=F[0]:F)?R&&0==R[0]||!F?0*O:O/0:NaN);for(c?(f=1,p=r.e-a.e):(c=E,f=7,p=v(r.e/f)-v(a.e/f)),A=F.length,T=R.length,b=(x=new $(O)).d=[],d=0;F[d]==(R[d]||0);d++);if(F[d]>(R[d]||0)&&p--,null==i?(k=i=$.precision,o=$.rounding):k=u?i+(r.e-a.e)+1:i,k<0)b.push(1),m=!0;else{if(k=k/f+2|0,d=0,1==A){for(h=0,F=F[0],k++;(d<T||h)&&k--;d++)I=h*c+(R[d]||0),b[d]=I/F|0,h=I%F|0;m=h||d<T}else{for((h=c/(F[0]+1)|0)>1&&(F=e(F,h,c),R=e(R,h,c),A=F.length,T=R.length),C=A,N=(w=R.slice(0,A)).length;N<A;)w[N++]=0;(M=F.slice()).unshift(0),D=F[0],F[1]>=c/2&&++D;do{h=0,(l=t(F,w,A,N))<0?(S=w[0],A!=N&&(S=S*c+(w[1]||0)),(h=S/D|0)>1?(h>=c&&(h=c-1),1==(l=t(g=e(F,h,c),w,y=g.length,N=w.length))&&(h--,n(g,A<y?M:F,y,c))):(0==h&&(l=h=1),g=F.slice()),(y=g.length)<N&&g.unshift(0),n(w,g,N,c),-1==l&&(l=t(F,w,A,N=w.length))<1&&(h++,n(w,A<N?M:F,N,c)),N=w.length):0===l&&(h++,w=[0]),b[d++]=h,l&&w[0]?w[N++]=R[C]||0:(w=[R[C]],N=1)}while((C++<T||void 0!==w[0])&&k--);m=void 0!==w[0]}b[0]||b.shift()}if(1==f)x.e=p,s=m;else{for(d=1,h=b[0];h>=10;h/=10)d++;x.e=d+p*f-1,_(x,u?i+x.e+1:i,o,m)}return x}}();function _(e,t,n,r){var a,i,s,o,u,c,l,p,d,h=e.constructor;e:if(null!=t){if(!(p=e.d))return e;for(a=1,o=p[0];o>=10;o/=10)a++;if((i=t-a)<0)i+=7,s=t,u=(l=p[d=0])/w(10,a-s-1)%10|0;else if((d=Math.ceil((i+1)/7))>=(o=p.length)){if(!r)break e;for(;o++<=d;)p.push(0);l=u=0,a=1,s=(i%=7)-7+1}else{for(l=o=p[d],a=1;o>=10;o/=10)a++;u=(s=(i%=7)-7+a)<0?0:l/w(10,a-s-1)%10|0}if(r=r||t<0||void 0!==p[d+1]||(s<0?l:l%w(10,a-s-1)),c=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):u>5||5==u&&(4==n||r||6==n&&(i>0?s>0?l/w(10,a-s):0:p[d-1])%10&1||n==(e.s<0?8:7)),t<1||!p[0])return p.length=0,c?(t-=e.e+1,p[0]=w(10,(7-t%7)%7),e.e=-t||0):p[0]=e.e=0,e;if(0==i?(p.length=d,o=1,d--):(p.length=d+1,o=w(10,7-i),p[d]=s>0?(l/w(10,a-s)%w(10,s)|0)*o:0),c)for(;;){if(0==d){for(i=1,s=p[0];s>=10;s/=10)i++;for(s=p[0]+=o,o=1;s>=10;s/=10)o++;i!=o&&(e.e++,p[0]==E&&(p[0]=1));break}if(p[d]+=o,p[d]!=E)break;p[d--]=0,o=1}for(i=p.length;0===p[--i];)p.pop()}return f&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function F(e,t,n){if(!e.isFinite())return H(e);var r,a=e.e,i=A(e.d),s=i.length;return t?(n&&(r=n-s)>0?i=i.charAt(0)+"."+i.slice(1)+U(r):s>1&&(i=i.charAt(0)+"."+i.slice(1)),i=i+(e.e<0?"e":"e+")+e.e):a<0?(i="0."+U(-a-1)+i,n&&(r=n-s)>0&&(i+=U(r))):a>=s?(i+=U(a+1-s),n&&(r=n-a-1)>0&&(i=i+"."+U(r))):((r=a+1)<s&&(i=i.slice(0,r)+"."+i.slice(r)),n&&(r=n-s)>0&&(a+1===s&&(i+="."),i+=U(r))),i}function z(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function B(e,t,n){if(t>C)throw f=!0,n&&(e.precision=n),Error(y);return _(new e(p),t,1,!0)}function L(e,t,n){if(t>T)throw Error(y);return _(new e(d),t,n,!0)}function P(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function U(e){for(var t="";e--;)t+="0";return t}function q(e,t,n,r){var a,i=new e(1),s=Math.ceil(r/7+4);for(f=!1;;){if(n%2&&ee((i=i.times(t)).d,s)&&(a=!0),0===(n=v(n/2))){n=i.d.length-1,a&&0===i.d[n]&&++i.d[n];break}ee((t=t.times(t)).d,s)}return f=!0,i}function W(e){return 1&e.d[e.d.length-1]}function V(e,t,n){for(var r,a=new e(t[0]),i=0;++i<t.length;){if(!(r=new e(t[i])).s){a=r;break}a[n](r)&&(a=r)}return a}function j(e,t){var n,r,a,i,s,o,u,c=0,l=0,p=0,d=e.constructor,h=d.rounding,m=d.precision;if(!e.d||!e.d[0]||e.e>17)return new d(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(f=!1,u=m):u=t,o=new d(.03125);e.e>-2;)e=e.times(o),p+=5;for(u+=r=Math.log(w(2,p))/Math.LN10*2+5|0,n=i=s=new d(1),d.precision=u;;){if(i=_(i.times(e),u,1),n=n.times(++l),A((o=s.plus(R(i,n,u,1))).d).slice(0,u)===A(s.d).slice(0,u)){for(a=p;a--;)s=_(s.times(s),u,1);if(null!=t)return d.precision=m,s;if(!(c<3&&$(s.d,u-r,h,c)))return _(s,d.precision=m,h,f=!0);d.precision=u+=10,n=i=o=new d(1),l=0,c++}s=o}}function G(e,t){var n,r,a,i,s,o,u,c,l,p,d,h=1,m=e,g=m.d,y=m.constructor,x=y.rounding,b=y.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new y(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(null==t?(f=!1,l=b):l=t,y.precision=l+=10,r=(n=A(g)).charAt(0),!(Math.abs(i=m.e)<15e14))return c=B(y,l+2,b).times(i+""),m=G(new y(r+"."+n.slice(1)),l-10).plus(c),y.precision=b,null==t?_(m,b,x,f=!0):m;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=A((m=m.times(e)).d)).charAt(0),h++;for(i=m.e,r>1?(m=new y("0."+n),i++):m=new y(r+"."+n.slice(1)),p=m,u=s=m=R(m.minus(1),m.plus(1),l,1),d=_(m.times(m),l,1),a=3;;){if(s=_(s.times(d),l,1),A((c=u.plus(R(s,new y(a),l,1))).d).slice(0,l)===A(u.d).slice(0,l)){if(u=u.times(2),0!==i&&(u=u.plus(B(y,l+2,b).times(i+""))),u=R(u,new y(h),l,1),null!=t)return y.precision=b,u;if(!$(u.d,l-10,x,o))return _(u,y.precision=b,x,f=!0);y.precision=l+=10,c=s=m=R(p.minus(1),p.plus(1),l,1),d=_(m.times(m),l,1),a=o=1}u=c,a+=2}}function H(e){return String(e.s*e.s/0)}function K(e,t){var n,r,a;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(a=t.length;48===t.charCodeAt(a-1);--a);if(t=t.slice(r,a)){if(a-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<a){for(r&&e.d.push(+t.slice(0,r)),a-=7;r<a;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=a;for(;r--;)t+="0";e.d.push(+t),f&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function X(e,t){var n,r,a,s,o,u,c,l,p;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),I.test(t))return K(e,t)}else if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(S.test(t))n=16,t=t.toLowerCase();else if(N.test(t))n=2;else{if(!k.test(t))throw Error(g+t);n=8}for((s=t.search(/p/i))>0?(c=+t.slice(s+1),t=t.substring(2,s)):t=t.slice(2),o=(s=t.indexOf("."))>=0,r=e.constructor,o&&(s=(u=(t=t.replace(".","")).length)-s,a=q(r,new r(n),s,2*s)),s=p=(l=O(t,n,E)).length-1;0===l[s];--s)l.pop();return s<0?new r(0*e.s):(e.e=z(l,p),e.d=l,f=!1,o&&(e=R(e,a,4*u)),c&&(e=e.times(Math.abs(c)<54?w(2,c):i.pow(2,c))),f=!0,e)}function Z(e,t,n,r,a){var i,s,o,u,c=e.precision,l=Math.ceil(c/7);for(f=!1,u=n.times(n),o=new e(r);;){if(s=R(o.times(u),new e(t++*t++),c,1),o=a?r.plus(s):r.minus(s),r=R(s.times(u),new e(t++*t++),c,1),void 0!==(s=o.plus(r)).d[l]){for(i=l;s.d[i]===o.d[i]&&i--;);if(-1==i)break}i=o,o=r,r=s,s=i}return f=!0,s.d.length=l+1,s}function Y(e,t){for(var n=e;--t;)n*=e;return n}function J(e,t){var n,r=t.s<0,a=L(e,e.precision,1),i=a.times(.5);if((t=t.abs()).lte(i))return o=r?4:1,t;if((n=t.divToInt(a)).isZero())o=r?3:2;else{if((t=t.minus(n.times(a))).lte(i))return o=W(n)?r?2:3:r?4:1,t;o=W(n)?r?1:4:r?3:2}return t.minus(a).abs()}function Q(e,t,n,r){var a,i,o,u,p,d,h,f,m,g=e.constructor,y=void 0!==n;if(y?(M(n,1,c),void 0===r?r=g.rounding:M(r,0,8)):(n=g.precision,r=g.rounding),e.isFinite()){for(y?(a=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):a=t,(o=(h=F(e)).indexOf("."))>=0&&(h=h.replace(".",""),(m=new g(1)).e=h.length-o,m.d=O(F(m),10,a),m.e=m.d.length),i=p=(f=O(h,10,a)).length;0==f[--p];)f.pop();if(f[0]){if(o<0?i--:((e=new g(e)).d=f,e.e=i,f=(e=R(e,m,n,r,0,a)).d,i=e.e,d=s),o=f[n],u=a/2,d=d||void 0!==f[n+1],d=r<4?(void 0!==o||d)&&(0===r||r===(e.s<0?3:2)):o>u||o===u&&(4===r||d||6===r&&1&f[n-1]||r===(e.s<0?8:7)),f.length=n,d)for(;++f[--n]>a-1;)f[n]=0,n||(++i,f.unshift(1));for(p=f.length;!f[p-1];--p);for(o=0,h="";o<p;o++)h+=l.charAt(f[o]);if(y){if(p>1)if(16==t||8==t){for(o=16==t?4:3,--p;p%o;p++)h+="0";for(p=(f=O(h,a,t)).length;!f[p-1];--p);for(o=1,h="1.";o<p;o++)h+=l.charAt(f[o])}else h=h.charAt(0)+"."+h.slice(1);h=h+(i<0?"p":"p+")+i}else if(i<0){for(;++i;)h="0"+h;h="0."+h}else if(++i>p)for(i-=p;i--;)h+="0";else i<p&&(h=h.slice(0,i)+"."+h.slice(i))}else h=y?"0p+0":"0";h=(16==t?"0x":2==t?"0b":8==t?"0o":"")+h}else h=H(e);return e.s<0?"-"+h:h}function ee(e,t){if(e.length>t)return e.length=t,!0}function te(e){return new this(e).abs()}function ne(e){return new this(e).acos()}function re(e){return new this(e).acosh()}function ae(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function se(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ue(e){return new this(e).atanh()}function ce(e,t){e=new this(e),t=new this(t);var n,r=this.precision,a=this.rounding,i=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?L(this,r,a):new this(0)).s=e.s:!e.d||t.isZero()?(n=L(this,i,1).times(.5)).s=e.s:t.s<0?(this.precision=i,this.rounding=1,n=this.atan(R(e,t,i,1)),t=L(this,i,1),this.precision=r,this.rounding=a,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(R(e,t,i,1)):(n=L(this,i,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function le(e){return new this(e).cbrt()}function pe(e){return _(e=new this(e),e.e+1,2)}function de(e,t,n){return new this(e).clamp(t,n)}function he(e){if(!e||"object"!=typeof e)throw Error(m+"Object expected");var t,n,r,a=!0===e.defaults,i=["precision",1,c,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9];for(t=0;t<i.length;t+=3)if(n=i[t],a&&(this[n]=h[n]),void 0!==(r=e[n])){if(!(v(r)===r&&r>=i[t+1]&&r<=i[t+2]))throw Error(g+n+": "+r);this[n]=r}if(n="crypto",a&&(this[n]=h[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(g+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(x);this[n]=!0}else this[n]=!1}return this}function fe(e){return new this(e).cos()}function me(e){return new this(e).cosh()}function ge(e,t){return new this(e).div(t)}function ye(e){return new this(e).exp()}function xe(e){return _(e=new this(e),e.e+1,3)}function be(){var e,t,n=new this(0);for(f=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return f=!0,new this(1/0);n=t}return f=!0,n.sqrt()}function ve(e){return e instanceof i||e&&e.toStringTag===b||!1}function we(e){return new this(e).ln()}function Ne(e,t){return new this(e).log(t)}function Se(e){return new this(e).log(2)}function ke(e){return new this(e).log(10)}function Ie(){return V(this,arguments,"lt")}function Ee(){return V(this,arguments,"gt")}function Ce(e,t){return new this(e).mod(t)}function Te(e,t){return new this(e).mul(t)}function De(e,t){return new this(e).pow(t)}function Ae(e){var t,n,r,a,i=0,s=new this(1),o=[];if(void 0===e?e=this.precision:M(e,1,c),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));i<r;)(a=t[i])>=429e7?t[i]=crypto.getRandomValues(new Uint32Array(1))[0]:o[i++]=a%1e7;else{if(!crypto.randomBytes)throw Error(x);for(t=crypto.randomBytes(r*=4);i<r;)(a=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,i):(o.push(a%1e7),i+=4);i=r/4}else for(;i<r;)o[i++]=1e7*Math.random()|0;for(e%=7,(r=o[--i])&&e&&(a=w(10,7-e),o[i]=(r/a|0)*a);0===o[i];i--)o.pop();if(i<0)n=0,o=[0];else{for(n=-1;0===o[0];n-=7)o.shift();for(r=1,a=o[0];a>=10;a/=10)r++;r<7&&(n-=7-r)}return s.e=n,s.d=o,s}function Me(e){return _(e=new this(e),e.e+1,this.rounding)}function $e(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Oe(e){return new this(e).sin()}function Re(e){return new this(e).sinh()}function _e(e){return new this(e).sqrt()}function Fe(e,t){return new this(e).sub(t)}function ze(){var e=0,t=arguments,n=new this(t[e]);for(f=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return f=!0,_(n,this.precision,this.rounding)}function Be(e){return new this(e).tan()}function Le(e){return new this(e).tanh()}function Pe(e){return _(e=new this(e),e.e+1,1)}(i=function e(t){var n,r,a;function i(e){var t,n,r,a=this;if(!(a instanceof i))return new i(e);if(a.constructor=i,ve(e))return a.s=e.s,void(f?!e.d||e.e>i.maxE?(a.e=NaN,a.d=null):e.e<i.minE?(a.e=0,a.d=[0]):(a.e=e.e,a.d=e.d.slice()):(a.e=e.e,a.d=e.d?e.d.slice():e.d));if("number"==(r=typeof e)){if(0===e)return a.s=1/e<0?-1:1,a.e=0,void(a.d=[0]);if(e<0?(e=-e,a.s=-1):a.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(f?t>i.maxE?(a.e=NaN,a.d=null):t<i.minE?(a.e=0,a.d=[0]):(a.e=t,a.d=[e]):(a.e=t,a.d=[e]))}return 0*e!=0?(e||(a.s=NaN),a.e=NaN,void(a.d=null)):K(a,e.toString())}if("string"!==r)throw Error(g+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),a.s=-1):(43===n&&(e=e.slice(1)),a.s=1),I.test(e)?K(a,e):X(a,e)}if(i.prototype=D,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=he,i.clone=e,i.isDecimal=ve,i.abs=te,i.acos=ne,i.acosh=re,i.add=ae,i.asin=ie,i.asinh=se,i.atan=oe,i.atanh=ue,i.atan2=ce,i.cbrt=le,i.ceil=pe,i.clamp=de,i.cos=fe,i.cosh=me,i.div=ge,i.exp=ye,i.floor=xe,i.hypot=be,i.ln=we,i.log=Ne,i.log10=ke,i.log2=Se,i.max=Ie,i.min=Ee,i.mod=Ce,i.mul=Te,i.pow=De,i.random=Ae,i.round=Me,i.sign=$e,i.sin=Oe,i.sinh=Re,i.sqrt=_e,i.sub=Fe,i.sum=ze,i.tan=Be,i.tanh=Le,i.trunc=Pe,void 0===t&&(t={}),t&&!0!==t.defaults)for(a=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<a.length;)t.hasOwnProperty(r=a[n++])||(t[r]=this[r]);return i.config(t),i}(h)).prototype.constructor=i,i.default=i.Decimal=i,p=new i(p),d=new i(d),void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}()},928:e=>{"use strict";var t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},n={"{":"\\{","}":"\\}","\\":"\\textbackslash{}","#":"\\#",$:"\\$","%":"\\%","&":"\\&","^":"\\textasciicircum{}",_:"\\_","~":"\\textasciitilde{}"},r={"–":"\\--","—":"\\---"," ":"~","\t":"\\qquad{}","\r\n":"\\newline{}","\n":"\\newline{}"},a=function(e,n){return t({},e,n)};e.exports=function(e){for(var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=i.preserveFormatting,o=void 0!==s&&s,u=i.escapeMapFn,c=void 0===u?a:u,l=String(e),p="",d=c(t({},n),o?t({},r):{}),h=Object.keys(d),f=function(){var e=!1;h.forEach((function(t,n){e||l.length>=t.length&&l.slice(0,t.length)===t&&(p+=d[h[n]],l=l.slice(t.length,l.length),e=!0)})),e||(p+=l.slice(0,1),l=l.slice(1,l.length))};l;)f();return p}},201:function(e,t){var n;!function(r){"use strict";var a={s:1,n:0,d:1};function i(e){function t(){var t=Error.apply(this,arguments);t.name=this.name=e,this.stack=t.stack,this.message=t.message}function n(){}return n.prototype=Error.prototype,t.prototype=new n,t}var s=h.DivisionByZero=i("DivisionByZero"),o=h.InvalidParameter=i("InvalidParameter");function u(e,t){return isNaN(e=parseInt(e,10))&&c(),e*t}function c(){throw new o}function l(e){for(var t={},n=e,r=2,a=4;a<=n;){for(;n%r==0;)n/=r,t[r]=(t[r]||0)+1;a+=1+2*r++}return n!==e?n>1&&(t[n]=(t[n]||0)+1):t[e]=(t[e]||0)+1,t}var p=function(e,t){var n,r=0,i=1,o=1,l=0,p=0,d=0,h=1,f=1,m=0,g=1,y=1,x=1,b=1e7;if(null==e);else if(void 0!==t)o=(r=e)*(i=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(r=e.n,i=e.d,"s"in e&&(r*=e.s)):0 in e?(r=e[0],1 in e&&(i=e[1])):c(),o=r*i;break;case"number":if(e<0&&(o=e,e=-e),e%1==0)r=e;else if(e>0){for(e>=1&&(e/=f=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));g<=b&&x<=b;){if(e===(n=(m+y)/(g+x))){g+x<=b?(r=m+y,i=g+x):x>g?(r=y,i=x):(r=m,i=g);break}e>n?(m+=y,g+=x):(y+=m,x+=g),g>b?(r=y,i=x):(r=m,i=g)}r*=f}else(isNaN(e)||isNaN(t))&&(i=r=NaN);break;case"string":if(null===(g=e.match(/\d+|./g))&&c(),"-"===g[m]?(o=-1,m++):"+"===g[m]&&m++,g.length===m+1?p=u(g[m++],o):"."===g[m+1]||"."===g[m]?("."!==g[m]&&(l=u(g[m++],o)),(1+ ++m===g.length||"("===g[m+1]&&")"===g[m+3]||"'"===g[m+1]&&"'"===g[m+3])&&(p=u(g[m],o),h=Math.pow(10,g[m].length),m++),("("===g[m]&&")"===g[m+2]||"'"===g[m]&&"'"===g[m+2])&&(d=u(g[m+1],o),f=Math.pow(10,g[m+1].length)-1,m+=3)):"/"===g[m+1]||":"===g[m+1]?(p=u(g[m],o),h=u(g[m+2],1),m+=3):"/"===g[m+3]&&" "===g[m+1]&&(l=u(g[m],o),p=u(g[m+2],o),h=u(g[m+4],1),m+=5),g.length<=m){o=r=d+(i=h*f)*l+f*p;break}default:c()}if(0===i)throw new s;a.s=o<0?-1:1,a.n=Math.abs(r),a.d=Math.abs(i)};function d(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function h(e,t){if(!(this instanceof h))return new h(e,t);p(e,t),e=d(a.d,a.n),this.s=a.s,this.n=a.n/e,this.d=a.d/e}h.prototype={s:1,n:0,d:1,abs:function(){return new h(this.n,this.d)},neg:function(){return new h(-this.s*this.n,this.d)},add:function(e,t){return p(e,t),new h(this.s*this.n*a.d+a.s*this.d*a.n,this.d*a.d)},sub:function(e,t){return p(e,t),new h(this.s*this.n*a.d-a.s*this.d*a.n,this.d*a.d)},mul:function(e,t){return p(e,t),new h(this.s*a.s*this.n*a.n,this.d*a.d)},div:function(e,t){return p(e,t),new h(this.s*a.s*this.n*a.d,this.d*a.n)},clone:function(){return new h(this)},mod:function(e,t){return isNaN(this.n)||isNaN(this.d)?new h(NaN):void 0===e?new h(this.s*this.n%this.d,1):(p(e,t),0===a.n&&0===this.d&&h(0,0),new h(this.s*(a.d*this.n)%(a.n*this.d),a.d*this.d))},gcd:function(e,t){return p(e,t),new h(d(a.n,this.n)*d(a.d,this.d),a.d*this.d)},lcm:function(e,t){return p(e,t),0===a.n&&0===this.n?new h:new h(a.n*this.n,d(a.n,this.n)*d(a.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new h(NaN):new h(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new h(NaN):new h(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new h(NaN):new h(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return new h(this.s*this.d,this.n)},pow:function(e,t){if(p(e,t),1===a.d)return a.s<0?new h(Math.pow(this.s*this.d,a.n),Math.pow(this.n,a.n)):new h(Math.pow(this.s*this.n,a.n),Math.pow(this.d,a.n));if(this.s<0)return null;var n=l(this.n),r=l(this.d),i=1,s=1;for(var o in n)if("1"!==o){if("0"===o){i=0;break}if(n[o]*=a.n,n[o]%a.d!=0)return null;n[o]/=a.d,i*=Math.pow(o,n[o])}for(var o in r)if("1"!==o){if(r[o]*=a.n,r[o]%a.d!=0)return null;r[o]/=a.d,s*=Math.pow(o,r[o])}return a.s<0?new h(s,i):new h(i,s)},equals:function(e,t){return p(e,t),this.s*this.n*a.d==a.s*a.n*this.d},compare:function(e,t){p(e,t);var n=this.s*this.n*a.d-a.s*a.n*this.d;return(0<n)-(n<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;var t=this.abs().toContinued();function n(e){return 1===e.length?new h(e[0]):n(e.slice(1)).inverse().add(e[0])}e=e||.001;for(var r=0;r<t.length;r++){var a=n(t.slice(0,r+1));if(a.sub(this.abs()).abs().valueOf()<e)return a.mul(this.s)}return this},divisible:function(e,t){return p(e,t),!(!(a.n*this.d)||this.n*a.d%(a.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,n="",r=this.n,a=this.d;return this.s<0&&(n+="-"),1===a?n+=r:(e&&(t=Math.floor(r/a))>0&&(n+=t,n+=" ",r%=a),n+=r,n+="/",n+=a),n},toLatex:function(e){var t,n="",r=this.n,a=this.d;return this.s<0&&(n+="-"),1===a?n+=r:(e&&(t=Math.floor(r/a))>0&&(n+=t,r%=a),n+="\\frac{",n+=r,n+="}{",n+=a,n+="}"),n},toContinued:function(){var e,t=this.n,n=this.d,r=[];if(isNaN(t)||isNaN(n))return r;do{r.push(Math.floor(t/n)),e=t%n,t=n,n=e}while(1!==t);return r},toString:function(e){var t=this.n,n=this.d;if(isNaN(t)||isNaN(n))return"NaN";e=e||15;var r=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var n=10%t,r=1;1!==n;r++)if(n=10*n%t,r>2e3)return 0;return r}(0,n),a=function(e,t,n){for(var r=1,a=function(e,t,n){for(var r=1;t>0;e=e*e%n,t>>=1)1&t&&(r=r*e%n);return r}(10,n,t),i=0;i<300;i++){if(r===a)return i;r=10*r%t,a=10*a%t}return 0}(0,n,r),i=-1===this.s?"-":"";if(i+=t/n|0,t%=n,(t*=10)&&(i+="."),r){for(var s=a;s--;)i+=t/n|0,t%=n,t*=10;for(i+="(",s=r;s--;)i+=t/n|0,t%=n,t*=10;i+=")"}else for(s=e;t&&s--;)i+=t/n|0,t%=n,t*=10;return i}},void 0===(n=function(){return h}.apply(t,[]))||(e.exports=n)}()},228:e=>{e.exports=function e(t,n){"use strict";var r,a,i=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,s=/(^[ ]*|[ ]*$)/g,o=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,u=/^0x[0-9a-f]+$/i,c=/^0/,l=function(t){return e.insensitive&&(""+t).toLowerCase()||""+t},p=l(t).replace(s,"")||"",d=l(n).replace(s,"")||"",h=p.replace(i,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),f=d.replace(i,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),m=parseInt(p.match(u),16)||1!==h.length&&p.match(o)&&Date.parse(p),g=parseInt(d.match(u),16)||m&&d.match(o)&&Date.parse(d)||null;if(g){if(m<g)return-1;if(m>g)return 1}for(var y=0,x=Math.max(h.length,f.length);y<x;y++){if(r=!(h[y]||"").match(c)&&parseFloat(h[y])||h[y]||0,a=!(f[y]||"").match(c)&&parseFloat(f[y])||f[y]||0,isNaN(r)!==isNaN(a))return isNaN(r)?1:-1;if(typeof r!=typeof a&&(r+="",a+=""),r<a)return-1;if(r>a)return 1}return 0}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},i={};function s(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),s&&(i[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),s&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return N}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=s,n.fromNumber=o,n.fromBits=u;var c=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return l(e.substring(1),t,n).neg();for(var a=o(c(n,8)),i=g,s=0;s<e.length;s+=8){var u=Math.min(8,e.length-s),p=parseInt(e.substring(s,s+u),n);if(u<8){var d=o(c(n,u));i=i.mul(d).add(o(p))}else i=(i=i.mul(a)).add(o(p))}return i.unsigned=t,i}function p(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?l(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=p;var d=4294967296,h=d*d,f=h/2,m=s(1<<24),g=s(0);n.ZERO=g;var y=s(0,!0);n.UZERO=y;var x=s(1);n.ONE=x;var b=s(1,!0);n.UONE=b;var v=s(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var N=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=N;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var k=n.prototype;k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},k.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(c(e,6),this.unsigned),i=this,s="";;){var u=i.div(a),l=(i.sub(u.mul(a)).toInt()>>>0).toString(e);if((i=u).isZero())return l+s;for(;l.length<6;)l="0"+l;s=""+l+s}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},k.isZero=function(){return 0===this.high&&0===this.low},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return 1==(1&this.low)},k.isEven=function(){return 0==(1&this.low)},k.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},k.eq=k.equals,k.notEquals=function(e){return!this.eq(e)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(e){return this.comp(e)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(e){return this.comp(e)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(e){return this.comp(e)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(e){return this.comp(e)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},k.neg=k.negate,k.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,i=65535&this.low,s=e.high>>>16,o=65535&e.high,c=e.low>>>16,l=0,d=0,h=0,f=0;return h+=(f+=i+(65535&e.low))>>>16,d+=(h+=a+c)>>>16,l+=(d+=n+o)>>>16,l+=t+s,u((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},k.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},k.sub=k.subtract,k.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,i=this.low>>>16,s=65535&this.low,c=e.high>>>16,l=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,y=0,x=0,b=0;return x+=(b+=s*h)>>>16,y+=(x+=i*h)>>>16,x&=65535,y+=(x+=s*d)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=i*d)>>>16,y&=65535,f+=(y+=s*l)>>>16,f+=n*h+a*d+i*l+s*c,u((x&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},k.mul=k.multiply,k.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,a,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;i=y}else{if(this.eq(S))return e.eq(x)||e.eq(v)?S:e.eq(S)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(a=this.sub(e.mul(n)),i=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),l=s<=48?1:c(2,s-48),d=o(n),h=d.mul(e);h.isNegative()||h.gt(a);)h=(d=o(n-=l,this.unsigned)).mul(e);d.isZero()&&(d=x),i=i.add(d),a=a.sub(h)}return i},k.div=k.divide,k.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return u(~this.low,~this.high,this.unsigned)},k.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},k.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},k.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},k.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},k.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},k.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},676:(e,t,n)=>{var r=n(522),a=n(520),i=n(478),s=n(775),o=n(709),u=n(515),c=n(566);c.alea=r,c.xor128=a,c.xorwow=i,c.xorshift7=s,c.xor4096=o,c.tychei=u,e.exports=c},522:function(e,t,n){var r;!function(e,a,i){function s(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},515:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},520:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},709:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},775:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},478:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},566:function(e,t,n){var r;!function(a,i,s){var o,u=256,c=s.pow(u,6),l=s.pow(2,52),p=2*l,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,x(i)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(b,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<u;)s[a]=a++;for(a=0;a<u;a++)s[a]=s[i=d&i+e[a%n]+(t=s[a])],s[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,s=r.S;e--;)t=s[a=d&a+1],n=n*u+s[d&(s[a]=s[i=d&i+t])+(s[i]=t)];return r.i=a,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(y(s.random(),i),e.exports){e.exports=h;try{o=n(7)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},377:(e,t,n)=>{var r=n(832),a=n(652),i=n(801),s=n(30),o=n(618),u=n(49),c=n(971);c.alea=r,c.xor128=a,c.xorwow=i,c.xorshift7=s,c.xor4096=o,c.tychei=u,e.exports=c},832:function(e,t,n){var r;!function(e,a,i){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,i){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,i){var s,o=(0,eval)("this"),u=256,c=i.pow(u,6),l=i.pow(2,52),p=2*l,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(i.random=e,t):e})(b,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<u;)s[a]=a++;for(a=0;a<u;a++)s[a]=s[i=d&i+e[a%n]+(t=s[a])],s[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,s=r.S;e--;)t=s[a=d&a+1],n=n*u+s[d&(s[a]=s[i=d&i+t])+(s[i]=t)];return r.i=a,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(i.seedrandom=h,y(i.random(),a),e.exports){e.exports=h;try{s=n(42)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},279:e=>{function t(){}t.prototype={on:function(e,t,n){var r=this.e||(this.e={});return(r[e]||(r[e]=[])).push({fn:t,ctx:n}),this},once:function(e,t,n){var r=this;function a(){r.off(e,a),t.apply(n,arguments)}return a._=t,this.on(e,a,n)},emit:function(e){for(var t=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice(),r=0,a=n.length;r<a;r++)n[r].fn.apply(n[r].ctx,t);return this},off:function(e,t){var n=this.e||(this.e={}),r=n[e],a=[];if(r&&t)for(var i=0,s=r.length;i<s;i++)r[i].fn!==t&&r[i].fn._!==t&&a.push(r[i]);return a.length?n[e]=a:delete n[e],this}},e.exports=t,e.exports.TinyEmitter=t},287:function(e,t){"use strict";var n,r;n=function(){function e(){return!0}function t(){return!1}function n(){}return function r(){var a=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e&&null!==e&&e.constructor===Object}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],i={name:"any",test:e},s=[],o=[],u={types:a,conversions:o,ignore:s};function c(e){var t=L(u.types,(function(t){return t.name===e}));if(t)return t;if("any"===e)return i;var n=L(u.types,(function(t){return t.name.toLowerCase()===e.toLowerCase()}));throw new TypeError('Unknown type "'+e+'"'+(n?'. Did you mean "'+n.name+'"?':""))}function l(e){return e===i?999:u.types.indexOf(e)}function p(e){var t=L(u.types,(function(t){return t.test(e)}));if(t)return t.name;throw new TypeError("Value has unknown type. Value: "+e)}function d(e){return e.map((function(e){var t=e.types.map(v);return(e.restParam?"...":"")+t.join("|")})).join(",")}function h(e,t){var n=0===e.indexOf("..."),r=(n?e.length>3?e.slice(3):"any":e).split("|").map($).filter(O).filter(M),a=function(e,t){var n={};return e.forEach((function(e){-1!==t.indexOf(e.from)||-1===t.indexOf(e.to)||n[e.from]||(n[e.from]=e)})),Object.keys(n).map((function(e){return n[e]}))}(t,r),i=r.map((function(e){var t=c(e);return{name:e,typeIndex:l(t),test:t.test,conversion:null,conversionIndex:-1}})),s=a.map((function(e){var n=c(e.from);return{name:e.from,typeIndex:l(n),test:n.test,conversion:e,conversionIndex:t.indexOf(e)}}));return{types:i.concat(s),restParam:n}}function f(e){var t=F(e);return!!t&&t.restParam}function m(e){return e.types.some((function(e){return null!=e.conversion}))}function g(t){if(t&&0!==t.types.length){if(1===t.types.length)return c(t.types[0].name).test;if(2===t.types.length){var n=c(t.types[0].name).test,r=c(t.types[1].name).test;return function(e){return n(e)||r(e)}}var a=t.types.map((function(e){return c(e.name).test}));return function(e){for(var t=0;t<a.length;t++)if(a[t](e))return!0;return!1}}return e}function y(e){var t,n,r,a;if(f(e)){var i=(t=(a=e,a.slice(0,a.length-1)).map(g)).length,s=g(F(e));return function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return function(e){for(var t=i;t<e.length;t++)if(!s(e[t]))return!1;return!0}(e)&&e.length>=i+1}}return 0===e.length?function(e){return 0===e.length}:1===e.length?(n=g(e[0]),function(e){return n(e[0])&&1===e.length}):2===e.length?(n=g(e[0]),r=g(e[1]),function(e){return n(e[0])&&r(e[1])&&2===e.length}):(t=e.map(g),function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return e.length===t.length})}function x(e,t){return t<e.params.length?e.params[t]:f(e.params)?F(e.params):null}function b(e,t,n){var r=x(e,t);return(r?n?r.types.filter(w):r.types:[]).map(v)}function v(e){return e.name}function w(e){return null===e.conversion||void 0===e.conversion}function N(e,t){var n=function(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=!0;return Object.keys(t)}(P(e,(function(e){return b(e,t,!1)})));return-1!==n.indexOf("any")?["any"]:n}function S(e,t,n){var r,a,i,s=e||"unnamed",o=n;for(i=0;i<t.length;i++){var u=o.filter((function(e){var n=g(x(e,i));return(i<e.params.length||f(e.params))&&n(t[i])}));if(0===u.length){if((a=N(o,i)).length>0){var c=p(t[i]);return(r=new TypeError("Unexpected type of argument in function "+s+" (expected: "+a.join(" or ")+", actual: "+c+", index: "+i+")")).data={category:"wrongType",fn:s,index:i,actual:c,expected:a},r}}else o=u}var l=o.map((function(e){return f(e.params)?1/0:e.params.length}));if(t.length<Math.min.apply(null,l))return a=N(o,i),(r=new TypeError("Too few arguments in function "+s+" (expected: "+a.join(" or ")+", index: "+t.length+")")).data={category:"tooFewArgs",fn:s,index:t.length,expected:a},r;var d=Math.max.apply(null,l);return t.length>d?((r=new TypeError("Too many arguments in function "+s+" (expected: "+d+", actual: "+t.length+")")).data={category:"tooManyArgs",fn:s,index:t.length,expectedLength:d},r):((r=new TypeError('Arguments of type "'+t.join(", ")+'" do not match any of the defined signatures of function '+s+".")).data={category:"mismatch",actual:t.map(p)},r)}function k(e){for(var t=999,n=0;n<e.types.length;n++)w(e.types[n])&&(t=Math.min(t,e.types[n].typeIndex));return t}function I(e){for(var t=999,n=0;n<e.types.length;n++)w(e.types[n])||(t=Math.min(t,e.types[n].conversionIndex));return t}function E(e,t){var n;return 0!=(n=e.restParam-t.restParam)||0!=(n=m(e)-m(t))||0!=(n=k(e)-k(t))?n:I(e)-I(t)}function C(e,t){var n,r,a=Math.min(e.params.length,t.params.length);if(0!=(r=e.params.some(m)-t.params.some(m)))return r;for(n=0;n<a;n++)if(0!=(r=m(e.params[n])-m(t.params[n])))return r;for(n=0;n<a;n++)if(0!==(r=E(e.params[n],t.params[n])))return r;return e.params.length-t.params.length}function T(e){var t,n,r,a,i=[],s=[];switch(e.types.forEach((function(e){e.conversion&&(i.push(c(e.conversion.from).test),s.push(e.conversion.convert))})),s.length){case 0:return function(e){return e};case 1:return t=i[0],r=s[0],function(e){return t(e)?r(e):e};case 2:return t=i[0],n=i[1],r=s[0],a=s[1],function(e){return t(e)?r(e):n(e)?a(e):e};default:return function(e){for(var t=0;t<s.length;t++)if(i[t](e))return s[t](e);return e}}}function D(e,t){return function e(n,r,a){if(r<n.length){var i,s=n[r],o=t?s.types.filter(w):s.types;if(s.restParam){var u=o.filter(w);i=u.length<o.length?[u,o]:[o]}else i=o.map((function(e){return[e]}));return P(i,(function(t){return e(n,r+1,a.concat([t]))}))}return[a.map((function(e,t){return{types:e,restParam:t===n.length-1&&f(n)}}))]}(e,0,[])}function A(e,r){if(0===Object.keys(r).length)throw new SyntaxError("No signatures provided");var a=[];Object.keys(r).map((function(e){return function(e,t,n){var r=[];return""!==e.trim()&&(r=e.split(",").map($).map((function(e,t,r){var a=h(e,n);if(a.restParam&&t!==r.length-1)throw new SyntaxError('Unexpected rest parameter "'+e+'": only allowed for the last parameter');return a}))),r.some(_)?null:{params:r,fn:t}}(e,r[e],u.conversions)})).filter(R).forEach((function(e){var t=L(a,(function(t){return function(e,t){for(var n=Math.max(e.params.length,t.params.length),r=0;r<n;r++)if(!B(b(e,r,!0),b(t,r,!0)))return!1;var a=e.params.length,i=t.params.length,s=f(e.params),o=f(t.params);return s?o?a===i:i>=a:o?a>=i:a===i}(t,e)}));if(t)throw new TypeError('Conflicting signatures "'+d(t.params)+'" and "'+d(e.params)+'".');a.push(e)}));var i=P(a,(function(e){return(e?D(e.params,!1):[]).map((function(t){return{params:t,fn:e.fn}}))})).filter(R);i.sort(C);var s=i[0]&&i[0].params.length<=2&&!f(i[0].params),o=i[1]&&i[1].params.length<=2&&!f(i[1].params),c=i[2]&&i[2].params.length<=2&&!f(i[2].params),l=i[3]&&i[3].params.length<=2&&!f(i[3].params),p=i[4]&&i[4].params.length<=2&&!f(i[4].params),x=i[5]&&i[5].params.length<=2&&!f(i[5].params),v=s&&o&&c&&l&&p&&x,w=i.map((function(e){return y(e.params)})),N=s?g(i[0].params[0]):t,k=o?g(i[1].params[0]):t,I=c?g(i[2].params[0]):t,E=l?g(i[3].params[0]):t,A=p?g(i[4].params[0]):t,M=x?g(i[5].params[0]):t,O=s?g(i[0].params[1]):t,F=o?g(i[1].params[1]):t,U=c?g(i[2].params[1]):t,q=l?g(i[3].params[1]):t,W=p?g(i[4].params[1]):t,V=x?g(i[5].params[1]):t,j=i.map((function(e){return function(e,t){var n=t;if(e.some(m)){var r=f(e),a=e.map(T);n=function(){for(var e=[],n=r?arguments.length-1:arguments.length,i=0;i<n;i++)e[i]=a[i](arguments[i]);return r&&(e[n]=arguments[n].map(a[n])),t.apply(this,e)}}var i=n;if(f(e)){var s=e.length-1;i=function(){return n.apply(this,z(arguments,0,s).concat([z(arguments,s)]))}}return i}(e.params,e.fn)})),G=s?j[0]:n,H=o?j[1]:n,K=c?j[2]:n,X=l?j[3]:n,Z=p?j[4]:n,Y=x?j[5]:n,J=s?i[0].params.length:-1,Q=o?i[1].params.length:-1,ee=c?i[2].params.length:-1,te=l?i[3].params.length:-1,ne=p?i[4].params.length:-1,re=x?i[5].params.length:-1,ae=v?6:0,ie=i.length,se=function(){for(var t=ae;t<ie;t++)if(w[t](arguments))return j[t].apply(this,arguments);throw S(e,arguments,i)},oe=function e(t,n){return arguments.length===J&&N(t)&&O(n)?G.apply(e,arguments):arguments.length===Q&&k(t)&&F(n)?H.apply(e,arguments):arguments.length===ee&&I(t)&&U(n)?K.apply(e,arguments):arguments.length===te&&E(t)&&q(n)?X.apply(e,arguments):arguments.length===ne&&A(t)&&W(n)?Z.apply(e,arguments):arguments.length===re&&M(t)&&V(n)?Y.apply(e,arguments):se.apply(e,arguments)};try{Object.defineProperty(oe,"name",{value:e})}catch(e){}return oe.signatures=function(e){var t={};return e.forEach((function(e){e.params.some(m)||D(e.params,!0).forEach((function(n){t[d(n)]=e.fn}))})),t}(i),oe}function M(e){return-1===u.ignore.indexOf(e)}function $(e){return e.trim()}function O(e){return!!e}function R(e){return null!==e}function _(e){return 0===e.types.length}function F(e){return e[e.length-1]}function z(e,t,n){return Array.prototype.slice.call(e,t,n)}function B(e,t){for(var n=0;n<e.length;n++)if(r=t,a=e[n],-1!==r.indexOf(a))return!0;var r,a;return!1}function L(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}function P(e,t){return Array.prototype.concat.apply([],e.map(t))}function U(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(("object"==typeof r.signatures||"string"==typeof r.signature)&&""!==r.name)if(""===t)t=r.name;else if(t!==r.name){var a=new Error("Function names do not match (expected: "+t+", actual: "+r.name+")");throw a.data={actual:r.name,expected:t},a}}return t}function q(e){var t,n={};function r(e,r){if(n.hasOwnProperty(e)&&r!==n[e])throw(t=new Error('Signature "'+e+'" is defined twice')).data={signature:e},t}for(var a=0;a<e.length;a++){var i=e[a];if("object"==typeof i.signatures)for(var s in i.signatures)i.signatures.hasOwnProperty(s)&&(r(s,i.signatures[s]),n[s]=i.signatures[s]);else{if("string"!=typeof i.signature)throw(t=new TypeError("Function is no typed-function (index: "+a+")")).data={index:a},t;r(i.signature,i),n[i.signature]=i}}return n}return(u=A("typed",{"string, Object":A,Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);return A(U(t),e)},"...Function":function(e){return A(U(e),q(e))},"string, ...Function":function(e,t){return A(e,q(t))}})).create=r,u.types=a,u.conversions=o,u.ignore=s,u.convert=function(e,t){var n=p(e);if(t===n)return e;for(var r=0;r<u.conversions.length;r++){var a=u.conversions[r];if(a.from===n&&a.to===t)return a.convert(e)}throw new Error("Cannot convert from "+n+" to "+t)},u.find=function(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var n;if("string"==typeof t){n=t.split(",");for(var r=0;r<n.length;r++)n[r]=n[r].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");n=t}var a=n.join(","),i=e.signatures[a];if(i)return i;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+n.join(", ")+"))")},u.addType=function(e,t){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");if(!1!==t)for(var n=0;n<u.types.length;n++)if("Object"===u.types[n].name)return void u.types.splice(n,0,e);u.types.push(e)},u.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");u.conversions.push(e)},u}()},void 0===(r=n.apply(t,[]))||(e.exports=r)},914:()=>{},410:()=>{},628:()=>{},778:()=>{},601:()=>{},792:()=>{},977:()=>{},7:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};(()=>{"use strict";n.r(r),n.d(r,{Tensor:()=>bae,Turtle:()=>lae,abs:()=>Eae,acos:()=>Pae,add:()=>wae,asin:()=>Uae,atan:()=>qae,atan2:()=>Wae,average:()=>Cie,axes:()=>_ie,basePlot:()=>Fie,ceil:()=>Cae,compile:()=>dae,complex:()=>Hae,concat:()=>sie,constrain:()=>Tae,copy:()=>Kae,cos:()=>Vae,derivative:()=>hae,dispose:()=>bie,div:()=>kae,dot:()=>Iae,endScope:()=>yie,evaluate:()=>fae,exp:()=>Dae,eye:()=>Xae,fft:()=>hie,figure:()=>Rie,fill:()=>Zae,flatten:()=>rie,floor:()=>Aae,fromImage:()=>wie,getBackend:()=>Gie,keep:()=>xie,linspace:()=>Yae,log:()=>Mae,math:()=>H,max:()=>$ae,mean:()=>Eie,memory:()=>fie,min:()=>Oae,mod:()=>Rae,mult:()=>Sae,ones:()=>Jae,pad:()=>aie,parse:()=>mae,percentile:()=>kie,plot:()=>zie,pow:()=>_ae,ptp:()=>Sie,quantile:()=>Iie,random:()=>Qae,randomGaussian:()=>eie,range:()=>tie,reshape:()=>iie,reverse:()=>oie,round:()=>Fae,scatter:()=>Bie,sd:()=>Tie,setBackend:()=>jie,simplify:()=>gae,sin:()=>jae,slice:()=>uie,sort:()=>die,split:()=>cie,sq:()=>zae,sqrt:()=>Bae,stack:()=>lie,startScope:()=>gie,sub:()=>Nae,sum:()=>Lae,tan:()=>Gae,tf:()=>j,tidy:()=>mie,toImage:()=>Nie,unstack:()=>pie,variance:()=>Die,zeros:()=>nie});var e={};n.r(e),n.d(e,{arraysEqual:()=>pe,assert:()=>ie,assertNonNegativeIntegerDimensions:()=>Ue,assertNonNull:()=>oe,assertShapesMatch:()=>se,bytesFromStringArray:()=>Te,bytesPerElement:()=>Ce,checkConversionForErrors:()=>Se,clamp:()=>Q,computeStrides:()=>_e,createScalarValue:()=>Ma,createShuffledIndices:()=>me,decodeString:()=>Fa,distSquared:()=>ae,encodeString:()=>_a,fetch:()=>Ra,fingerPrint64:()=>Aa,flatten:()=>ue,getArrayFromDType:()=>Ne,getTypedArrayFromDType:()=>we,hasEncodingLoss:()=>Ie,hexToLong:()=>ba,indexToLoc:()=>We,inferDtype:()=>$e,inferFromImplicitShape:()=>xe,isBoolean:()=>Ae,isFunction:()=>Oe,isInt:()=>de,isNumber:()=>Me,isPromise:()=>Ve,isScalarShape:()=>le,isString:()=>De,isTypedArray:()=>Ee,isValidDtype:()=>ke,locToIndex:()=>qe,makeOnesTypedArray:()=>Be,makeZerosNestedTypedArray:()=>Pe,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Re,nearestLargerEven:()=>ee,now:()=>Oa,parseAxisParam:()=>be,randUniform:()=>re,repeatedTry:()=>ye,rightPad:()=>ge,shuffle:()=>Y,shuffleCombo:()=>J,sizeFromShape:()=>ce,sizeToSquarishShape:()=>fe,squeezeShape:()=>ve,sum:()=>ne,swap:()=>te,tanh:()=>he,toNestedArray:()=>ze,toTypedArray:()=>$a});var t={};n.r(t),n.d(t,{assertTypesMatch:()=>oi,getTensorsInContainer:()=>ci,isTensorInList:()=>ui,makeTypesMatch:()=>si});var a={};n.r(a),n.d(a,{isBrowser:()=>vi,isMobile:()=>bi,mockIsMobile:()=>xi});var i={};n.r(i),n.d(i,{browserFiles:()=>Os,browserHTTPRequest:()=>qs,concatenateArrayBuffers:()=>Bi,copyModel:()=>Ns,decodeWeights:()=>Ri,encodeWeights:()=>Oi,fromMemory:()=>js,getLoadHandlers:()=>Ki,getModelArtifactsForJSON:()=>Ui,getModelArtifactsInfoForJSON:()=>qi,getSaveHandlers:()=>Hi,http:()=>Us,isHTTPScheme:()=>Ls,listModels:()=>vs,loadWeights:()=>Fs,moveModel:()=>Ss,registerLoadRouter:()=>Gi,registerSaveRouter:()=>ji,removeModel:()=>ws,weightsLoaderFactory:()=>zs,withSaveHandler:()=>Gs});var s={};n.r(s),n.d(s,{confusionMatrix:()=>Zs});var o={};n.r(o),n.d(o,{assertAndGetBroadcastShape:()=>Qs,getBroadcastDims:()=>Ys,getReductionAxes:()=>Js});var u={};n.r(u),n.d(u,{fromPixels:()=>io,fromPixelsAsync:()=>ro,toPixels:()=>ao});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>so});var l={};n.r(l),n.d(l,{calculateShapes:()=>co,validateInput:()=>uo,validateUpdateShape:()=>oo});var p={};n.r(p),n.d(p,{assertParamsValid:()=>lo,computeFlatOffset:()=>ko,computeOutShape:()=>ho,getNormalizedAxes:()=>yo,isSliceContinous:()=>So,maskToAxes:()=>po,parseSliceParams:()=>Io,sliceInfo:()=>Eo,startForAxis:()=>wo,startIndicesWithElidedDims:()=>xo,stopForAxis:()=>No,stopIndicesWithElidedDims:()=>bo,stridesForAxis:()=>vo,stridesWithElidedDims:()=>fo});var d={};n.r(d),n.d(d,{Serializable:()=>To,SerializationMap:()=>Do,registerClass:()=>Ao});var h={};n.r(h),n.d(h,{TEST_EPSILON_FLOAT16:()=>Mo,encodeStrings:()=>Uo,expectArrayBuffersEqual:()=>Po,expectArraysClose:()=>$o,expectArraysEqual:()=>Fo,expectNumbersClose:()=>zo,expectPromiseToFail:()=>_o,expectValuesInRange:()=>Lo,testEpsilon:()=>Oo});var f={};n.r(f),n.d(f,{conv2d:()=>Dd,depthwiseConv2d:()=>$d,matMul:()=>Od});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>Mf,computeOutShape:()=>Af,segOpComputeOptimalWindowSize:()=>Df});var g={};n.r(g),n.d(g,{ERF_A1:()=>Xh,ERF_A2:()=>Zh,ERF_A3:()=>Yh,ERF_A4:()=>Jh,ERF_A5:()=>Qh,ERF_P:()=>Kh,PARALLELIZE_THRESHOLD:()=>Bh,SELU_SCALE:()=>Hh,SELU_SCALEALPHA:()=>Gh,applyActivation:()=>Cd,assertAndGetBroadcastShape:()=>Qs,assertAxesAreInnerMostDims:()=>Ml,assertParamsConsistent:()=>Fh,assignToTypedArray:()=>sf,axesAreInnerMostDims:()=>Cl,calculateShapes:()=>co,checkEinsumDimSizes:()=>df,checkPadOnDimRoundingMode:()=>lc,combineLocations:()=>Tl,complexWithEvenIndex:()=>nf,complexWithOddIndex:()=>rf,computeConv2DInfo:()=>ec,computeConv3DInfo:()=>tc,computeDefaultPad:()=>nc,computeDilation2DInfo:()=>Yu,computeOptimalWindowSize:()=>Lh,computeOutAndReduceShapes:()=>Dl,computeOutShape:()=>zh,computePool2DInfo:()=>Ju,computePool3DInfo:()=>Qu,convertConv2DDataFormat:()=>cc,decodeEinsumEquation:()=>lf,eitherStridesOrDilationsAreOne:()=>uc,expandShapeToKeepDim:()=>Al,exponent:()=>uf,exponents:()=>of,fromStringArrayToUint8:()=>Of,fromUint8ToStringArray:()=>$f,getAxesPermutation:()=>$l,getBroadcastDims:()=>Ys,getComplexWithIndex:()=>af,getEinsumComputePath:()=>hf,getEinsumPermutation:()=>pf,getFusedBiasGradient:()=>Ed,getFusedDyActivation:()=>Id,getImageCenter:()=>Ph,getInnerMostAxes:()=>Rl,getPermuted:()=>qh,getReductionAxes:()=>Js,getReshaped:()=>Uh,getReshapedPermuted:()=>Wh,getSliceBeginCoords:()=>Vh,getSliceSize:()=>jh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>yf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Nf,getSparseReshapeInputOutputMismatchErrorMessage:()=>kf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Sf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>vf,getSparseReshapeNegativeOutputDimErrorMessage:()=>wf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Tf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>If,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Ef,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Cf,getUndoAxesPermutation:()=>Ol,isIdentityPermutation:()=>ff,log:()=>ia,mergeRealAndImagArrays:()=>ef,prepareAndValidate:()=>so,prepareSplitSize:()=>gf,segment_util:()=>m,shouldFuse:()=>Td,slice_util:()=>p,splitRealAndImagArrays:()=>tf,tupleValuesAreOne:()=>oc,upcastType:()=>ai,validateInput:()=>uo,validateUpdateShape:()=>oo,warn:()=>aa});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>Gd,nonMaxSuppressionV4Impl:()=>Hd,nonMaxSuppressionV5Impl:()=>Kd,whereImpl:()=>pd});var x={};n.r(x),n.d(x,{maxNorm:()=>Fg,minMaxNorm:()=>Lg,nonNeg:()=>Bg,unitNorm:()=>zg});var b={};n.r(b),n.d(b,{constant:()=>jy,glorotNormal:()=>Jy,glorotUniform:()=>Yy,heNormal:()=>Qy,heUniform:()=>ex,identity:()=>Xy,leCunNormal:()=>tx,leCunUniform:()=>nx,ones:()=>Vy,orthogonal:()=>rx,randomNormal:()=>Hy,randomUniform:()=>Gy,truncatedNormal:()=>Ky,varianceScaling:()=>Zy,zeros:()=>Wy});var v={};n.r(v),n.d(v,{Layer:()=>wx,RNN:()=>Wv,RNNCell:()=>Vv,activation:()=>lN,add:()=>bN,alphaDropout:()=>cS,average:()=>vN,averagePooling1d:()=>DN,averagePooling2d:()=>$N,averagePooling3d:()=>_N,avgPool1d:()=>AN,avgPool2d:()=>ON,avgPool3d:()=>FN,avgPooling1d:()=>MN,avgPooling2d:()=>RN,avgPooling3d:()=>zN,batchNormalization:()=>EN,bidirectional:()=>tS,concatenate:()=>wN,conv1d:()=>tN,conv2d:()=>nN,conv2dTranspose:()=>rN,conv3d:()=>aN,conv3dTranspose:()=>iN,convLstm2d:()=>YN,convLstm2dCell:()=>JN,cropping2D:()=>oN,dense:()=>pN,depthwiseConv2d:()=>cN,dot:()=>IN,dropout:()=>dN,elu:()=>Xw,embedding:()=>xN,flatten:()=>fN,gaussianDropout:()=>uS,gaussianNoise:()=>oS,globalAveragePooling1d:()=>BN,globalAveragePooling2d:()=>LN,globalMaxPool1d:()=>rS,globalMaxPool2d:()=>aS,globalMaxPooling1d:()=>PN,globalMaxPooling2d:()=>UN,gru:()=>jN,gruCell:()=>GN,input:()=>Vb,inputLayer:()=>Kw,layerNormalization:()=>CN,leakyReLU:()=>Yw,lstm:()=>HN,lstmCell:()=>KN,masking:()=>lS,maxPool1d:()=>iS,maxPool2d:()=>sS,maxPooling1d:()=>qN,maxPooling2d:()=>WN,maxPooling3d:()=>VN,maximum:()=>NN,minimum:()=>SN,multiply:()=>kN,permute:()=>yN,prelu:()=>Jw,reLU:()=>Zw,repeatVector:()=>mN,reshape:()=>gN,rnn:()=>QN,separableConv2d:()=>sN,simpleRNN:()=>XN,simpleRNNCell:()=>ZN,softmax:()=>Qw,spatialDropout1d:()=>hN,stackedRNNCells:()=>eS,thresholdedReLU:()=>eN,timeDistributed:()=>nS,upSampling2d:()=>uN,zeroPadding2d:()=>TN});var w={};n.r(w),n.d(w,{MAPE:()=>wS,MSE:()=>kS,binaryAccuracy:()=>pS,binaryCrossentropy:()=>dS,categoricalAccuracy:()=>fS,categoricalCrossentropy:()=>mS,cosineProximity:()=>xS,mape:()=>NS,meanAbsoluteError:()=>bS,meanAbsolutePercentageError:()=>vS,meanSquaredError:()=>SS,mse:()=>IS,precision:()=>gS,recall:()=>yS,sparseCategoricalAccuracy:()=>hS});var N={};n.r(N),n.d(N,{modelFromJSON:()=>Lb});var S={};n.r(S),n.d(S,{l1:()=>CS,l1l2:()=>ES,l2:()=>TS});var k={};n.r(k),n.d(k,{json:()=>HS});var I={};n.r(I),n.d(I,{json:()=>KS});var E={};n.r(E),n.d(E,{json:()=>XS});var C={};n.r(C),n.d(C,{json:()=>ZS});var T={};n.r(T),n.d(T,{json:()=>YS});var D={};n.r(D),n.d(D,{json:()=>JS});var A={};n.r(A),n.d(A,{json:()=>QS});var M={};n.r(M),n.d(M,{json:()=>ek});var $={};n.r($),n.d($,{json:()=>tk});var O={};n.r(O),n.d(O,{json:()=>nk});var R={};n.r(R),n.d(R,{json:()=>rk});var _={};n.r(_),n.d(_,{json:()=>ak});var F={};n.r(F),n.d(F,{json:()=>ik});var z={};n.r(z),n.d(z,{json:()=>sk});var B={};n.r(B),n.d(B,{json:()=>ok});var L={};n.r(L),n.d(L,{json:()=>uk});var P={};n.r(P),n.d(P,{json:()=>ck});var U={};n.r(U),n.d(U,{json:()=>lk});var q={};n.r(q),n.d(q,{json:()=>pk});var W={};n.r(W),n.d(W,{CSVDataset:()=>LI,Dataset:()=>CI,FileDataSource:()=>YI,TextLineDataset:()=>$I,URLDataSource:()=>JI,array:()=>DI,csv:()=>QI,func:()=>eE,generator:()=>tE,microphone:()=>rE,version_data:()=>aE,webcam:()=>nE,zip:()=>AI});var V={};n.r(V),n.d(V,{addImpl:()=>BE,bincountImpl:()=>AC,bincountReduceImpl:()=>MC,ceilImpl:()=>RC,concatImpl:()=>PC,equalImpl:()=>NT,expImpl:()=>OT,expm1Impl:()=>BT,floorImpl:()=>tD,gatherNdImpl:()=>cD,gatherV2Impl:()=>pD,greaterEqualImpl:()=>gD,greaterImpl:()=>hD,lessEqualImpl:()=>DD,lessImpl:()=>ED,linSpaceImpl:()=>$D,logImpl:()=>RD,maxImpl:()=>XD,maximumImpl:()=>JD,minimumImpl:()=>uA,multiplyImpl:()=>fT,negImpl:()=>bA,notEqualImpl:()=>CA,prodImpl:()=>PA,rangeImpl:()=>qA,rsqrtImpl:()=>eM,sigmoidImpl:()=>IE,simpleAbsImpl:()=>HE,sliceImpl:()=>EC,sparseFillEmptyRowsImpl:()=>vM,sparseReshapeImpl:()=>NM,sparseSegmentReductionImpl:()=>kM,sqrtImpl:()=>DM,squaredDifferenceImpl:()=>OM,stridedSliceImpl:()=>BM,stringNGramsImpl:()=>UM,stringSplitImpl:()=>VM,stringToHashBucketFastImpl:()=>GM,subImpl:()=>VT,tileImpl:()=>YM,topKImpl:()=>t$,transposeImpl:()=>eC,uniqueImpl:()=>u$});var j={};n.r(j),n.d(j,{Abs:()=>Je,Acos:()=>Qe,Acosh:()=>et,AdadeltaOptimizer:()=>Eu,AdagradOptimizer:()=>Tu,AdamOptimizer:()=>Mu,AdamaxOptimizer:()=>Ru,Add:()=>tt,AddN:()=>nt,All:()=>rt,Any:()=>at,ArgMax:()=>it,ArgMin:()=>st,Asin:()=>ot,Asinh:()=>ut,Atan:()=>ct,Atan2:()=>pt,Atanh:()=>lt,AvgPool:()=>dt,AvgPool3D:()=>ft,AvgPool3DGrad:()=>mt,AvgPoolGrad:()=>ht,BatchMatMul:()=>gt,BatchToSpaceND:()=>yt,Bincount:()=>xt,BroadcastArgs:()=>vt,BroadcastTo:()=>bt,Callback:()=>DS,CallbackList:()=>Dx,Cast:()=>wt,Ceil:()=>Nt,ClipByValue:()=>St,Complex:()=>kt,ComplexAbs:()=>It,Concat:()=>Et,Conv2D:()=>Ct,Conv2DBackpropFilter:()=>Tt,Conv2DBackpropInput:()=>Dt,Conv3D:()=>At,Conv3DBackpropFilterV2:()=>Mt,Conv3DBackpropInputV2:()=>$t,Cos:()=>Ot,Cosh:()=>Rt,CropAndResize:()=>Ft,Cumsum:()=>_t,CustomCallback:()=>$x,DataStorage:()=>K,DenseBincount:()=>zt,DepthToSpace:()=>Bt,DepthwiseConv2dNative:()=>Lt,DepthwiseConv2dNativeBackpropFilter:()=>Pt,DepthwiseConv2dNativeBackpropInput:()=>Ut,Diag:()=>qt,Dilation2D:()=>Wt,Dilation2DBackpropFilter:()=>jt,Dilation2DBackpropInput:()=>Vt,ENV:()=>Xe,EarlyStopping:()=>$S,Einsum:()=>Ht,Elu:()=>Kt,EluGrad:()=>Xt,Environment:()=>je,Equal:()=>Yt,Erf:()=>Zt,Exp:()=>Jt,ExpandDims:()=>Qt,Expm1:()=>en,FFT:()=>tn,Fill:()=>nn,FlipLeftRight:()=>rn,Floor:()=>an,FloorDiv:()=>sn,FromPixels:()=>Qr,FusedBatchNorm:()=>on,FusedConv2D:()=>na,FusedDepthwiseConv2D:()=>ra,GatherNd:()=>cn,GatherV2:()=>un,GraphModel:()=>Kk,Greater:()=>ln,GreaterEqual:()=>pn,History:()=>Mx,IFFT:()=>hn,Identity:()=>dn,Imag:()=>fn,InputSpec:()=>gx,IsFinite:()=>mn,IsInf:()=>gn,IsNan:()=>yn,KernelBackend:()=>X,LRN:()=>Tn,LRNGrad:()=>Dn,LayerVariable:()=>hx,LayersModel:()=>zb,LeakyRelu:()=>xn,Less:()=>bn,LessEqual:()=>vn,LinSpace:()=>wn,Log:()=>Nn,Log1p:()=>Sn,LogSoftmax:()=>Cn,LogicalAnd:()=>kn,LogicalNot:()=>In,LogicalOr:()=>En,Max:()=>An,MaxPool:()=>$n,MaxPool3D:()=>Rn,MaxPool3DGrad:()=>_n,MaxPoolGrad:()=>On,MaxPoolWithArgmax:()=>Fn,Maximum:()=>Mn,Mean:()=>zn,Min:()=>Bn,Minimum:()=>Ln,MirrorPad:()=>Pn,Mod:()=>Un,MomentumOptimizer:()=>Fu,Multinomial:()=>qn,Multiply:()=>Wn,Neg:()=>Vn,NonMaxSuppressionV3:()=>Gn,NonMaxSuppressionV4:()=>Hn,NonMaxSuppressionV5:()=>Kn,NotEqual:()=>jn,OP_SCOPE_SUFFIX:()=>Ci,OneHot:()=>Zn,OnesLike:()=>Xn,Optimizer:()=>Iu,OptimizerConstructors:()=>Bu,Pack:()=>Yn,PadV2:()=>Jn,Pool:()=>Qn,Pow:()=>er,Prelu:()=>tr,Prod:()=>nr,RMSPropOptimizer:()=>zu,RNN:()=>Wv,Range:()=>rr,Rank:()=>Ja,Real:()=>ar,RealDiv:()=>Gt,Reciprocal:()=>ir,Reduction:()=>ch,Relu:()=>sr,Relu6:()=>dr,Reshape:()=>or,ResizeBilinear:()=>lr,ResizeBilinearGrad:()=>pr,ResizeNearestNeighbor:()=>ur,ResizeNearestNeighborGrad:()=>cr,Reverse:()=>hr,RotateWithOffset:()=>ea,Round:()=>fr,Rsqrt:()=>mr,SGDOptimizer:()=>_u,ScatterNd:()=>gr,Select:()=>yr,Selu:()=>xr,Sequential:()=>Pb,Sigmoid:()=>Sr,Sign:()=>Nr,Sin:()=>vr,Sinh:()=>wr,Slice:()=>br,Softmax:()=>Dr,Softplus:()=>kr,SpaceToBatchND:()=>Cr,SparseFillEmptyRows:()=>Ar,SparseReshape:()=>Mr,SparseSegmentMean:()=>$r,SparseSegmentSum:()=>Or,SparseToDense:()=>Rr,SplitV:()=>Tr,Sqrt:()=>Ir,Square:()=>Fr,SquaredDifference:()=>_r,Step:()=>Jr,StridedSlice:()=>zr,StringNGrams:()=>Br,StringSplit:()=>Lr,StringToHashBucketFast:()=>Pr,Sub:()=>Ur,Sum:()=>Er,SymbolicTensor:()=>yx,Tan:()=>qr,Tanh:()=>Wr,Tensor:()=>Xa,TensorBuffer:()=>ja,Tile:()=>Vr,TopK:()=>jr,Transform:()=>Gr,Transpose:()=>Hr,Unique:()=>Kr,Unpack:()=>Xr,UnsortedSegmentSum:()=>Zr,Variable:()=>Ya,ZerosLike:()=>Yr,_FusedMatMul:()=>ta,abs:()=>$u,acos:()=>Lu,acosh:()=>Pu,add:()=>lu,addN:()=>Uu,all:()=>qu,any:()=>Wu,argMax:()=>Vu,argMin:()=>ju,asin:()=>Gu,asinh:()=>Hu,atan:()=>Ku,atan2:()=>Xu,atanh:()=>Zu,avgPool:()=>dc,avgPool3d:()=>hc,backend:()=>uu,backend_util:()=>g,basicLSTMCell:()=>xc,batchNorm:()=>vc,batchNorm2d:()=>wc,batchNorm3d:()=>Nc,batchNorm4d:()=>Sc,batchToSpaceND:()=>bc,bincount:()=>kc,booleanMaskAsync:()=>hd,broadcastArgs:()=>Ic,broadcastTo:()=>Ec,broadcast_util:()=>o,browser:()=>u,buffer:()=>Es,callbacks:()=>OS,cast:()=>Cs,ceil:()=>Cc,clipByValue:()=>Tc,clone:()=>Ts,complex:()=>Di,concat:()=>fc,concat1d:()=>Dc,concat2d:()=>Ac,concat3d:()=>Mc,concat4d:()=>$c,constraints:()=>x,conv1d:()=>Rc,conv2d:()=>Oc,conv2dTranspose:()=>Fc,conv3d:()=>zc,conv3dTranspose:()=>Lc,copyRegisteredKernels:()=>ma,cos:()=>Pc,cosh:()=>Uc,cosineWindow:()=>Nd,cumsum:()=>qc,customGrad:()=>Nu,data:()=>W,denseBincount:()=>Wc,deprecationWarn:()=>Go,depthToSpace:()=>Vc,depthwiseConv2d:()=>jc,deregisterOp:()=>LS,device_util:()=>a,diag:()=>Gc,dilation2d:()=>Hc,disableDeprecationWarnings:()=>jo,dispose:()=>Jo,disposeVariables:()=>Ho,div:()=>du,divNoNan:()=>Zc,dot:()=>Yc,dropout:()=>vd,einsum:()=>Jc,elu:()=>Qc,enableDebugMode:()=>Vo,enableProdMode:()=>Wo,enclosingPowerOfTwo:()=>wd,engine:()=>Ko,env:()=>He,equal:()=>Kc,erf:()=>el,exp:()=>tl,expandDims:()=>nl,expm1:()=>rl,eye:()=>il,fft:()=>Wp,fill:()=>Cu,findBackend:()=>iu,findBackendFactory:()=>su,floor:()=>sl,floorDiv:()=>pu,fused:()=>f,gather:()=>ol,gatherND:()=>bd,gather_util:()=>c,getBackend:()=>ru,getGradient:()=>ca,getKernel:()=>ua,getKernelsForBackend:()=>la,grad:()=>yu,grads:()=>xu,greater:()=>ul,greaterEqual:()=>cl,ifft:()=>Vp,imag:()=>ll,image:()=>Th,inTopKAsync:()=>Sd,initializers:()=>b,input:()=>Vb,io:()=>i,irfft:()=>jp,isFinite:()=>pl,isInf:()=>dl,isNaN:()=>hl,keep:()=>Qo,kernel_impls:()=>y,layers:()=>v,leakyRelu:()=>fl,less:()=>ml,lessEqual:()=>gl,linalg:()=>Dh,linspace:()=>yl,loadGraphModel:()=>Xk,loadLayersModel:()=>Wb,localResponseNormalization:()=>xl,log:()=>bl,log1p:()=>vl,logSigmoid:()=>Sl,logSoftmax:()=>El,logSumExp:()=>_l,logicalAnd:()=>Fl,logicalNot:()=>zl,logicalOr:()=>Bl,logicalXor:()=>Ll,losses:()=>Ah,matMul:()=>Hs,math:()=>s,max:()=>kl,maxPool:()=>Pl,maxPool3d:()=>Ul,maxPoolWithArgmax:()=>ql,maximum:()=>Ou,mean:()=>Wl,memory:()=>Xo,meshgrid:()=>Gl,metrics:()=>w,min:()=>Hl,minimum:()=>Kl,mirrorPad:()=>Xl,mod:()=>Zl,model:()=>Ub,models:()=>N,moments:()=>Yl,movingAverage:()=>gd,mul:()=>hu,multiRNNCell:()=>Jl,multinomial:()=>Ql,neg:()=>wl,nextFrame:()=>_h,norm:()=>md,notEqual:()=>ep,oneHot:()=>Ks,ones:()=>jl,onesLike:()=>tp,op:()=>Ti,outerProduct:()=>np,pad:()=>rp,pad1d:()=>ap,pad2d:()=>ip,pad3d:()=>sp,pad4d:()=>op,pool:()=>cp,pow:()=>Du,prelu:()=>lp,print:()=>Ds,prod:()=>pp,profile:()=>Zo,rand:()=>dp,randomGamma:()=>yp,randomNormal:()=>xp,randomUniform:()=>bp,range:()=>vp,ready:()=>nu,real:()=>wp,reciprocal:()=>Np,registerBackend:()=>ou,registerCallbackConstructor:()=>jb,registerGradient:()=>da,registerKernel:()=>pa,registerOp:()=>zS,regularizers:()=>S,relu:()=>Sp,relu6:()=>kp,removeBackend:()=>au,reshape:()=>pc,reverse:()=>Ip,reverse1d:()=>Ep,reverse2d:()=>Cp,reverse3d:()=>Tp,reverse4d:()=>Dp,rfft:()=>Hp,round:()=>Ap,rsqrt:()=>Mp,scalar:()=>ku,scatterND:()=>yd,scatter_util:()=>l,selu:()=>$p,separableConv2d:()=>Op,sequential:()=>qb,serialization:()=>d,setBackend:()=>tu,setPlatform:()=>cu,setdiff1dAsync:()=>Rp,sigmoid:()=>mc,sign:()=>_p,signal:()=>Ch,sin:()=>Fp,sinh:()=>zp,slice:()=>gc,slice1d:()=>Bp,slice2d:()=>Lp,slice3d:()=>Pp,slice4d:()=>Up,slice_util:()=>p,softmax:()=>qp,softplus:()=>Nl,spaceToBatchND:()=>up,sparse:()=>Mh,sparseToDense:()=>xd,spectral:()=>Eh,split:()=>Gp,sqrt:()=>fu,square:()=>mu,squaredDifference:()=>Kp,squeeze:()=>Xp,stack:()=>Zp,step:()=>Yp,stridedSlice:()=>Jp,string:()=>$h,sub:()=>Au,sum:()=>Il,sumOutType:()=>ii,tan:()=>Qp,tanh:()=>yc,tensor:()=>Mi,tensor1d:()=>ed,tensor2d:()=>td,tensor3d:()=>eo,tensor4d:()=>nd,tensor5d:()=>rd,tensor6d:()=>ad,tensor_util:()=>t,test_util:()=>h,tidy:()=>Yo,tile:()=>al,time:()=>eu,topk:()=>id,train:()=>Oh,transpose:()=>Xs,truncatedNormal:()=>sd,unique:()=>od,unregisterGradient:()=>fa,unregisterKernel:()=>ha,unsortedSegmentSum:()=>ud,unstack:()=>cd,upcastType:()=>ai,util:()=>e,valueAndGrad:()=>bu,valueAndGrads:()=>vu,variable:()=>ld,variableGrads:()=>wu,version:()=>tU,version_converter:()=>Zk,version_core:()=>qo,version_layers:()=>db,where:()=>Xc,whereAsync:()=>dd,zeros:()=>Vl,zerosLike:()=>gu});var G={};n.r(G),n.d(G,{createAbs:()=>Vj,createAccessorNode:()=>w6,createAcos:()=>Gj,createAcosh:()=>MK,createAcot:()=>pG,createAcoth:()=>cX,createAcsc:()=>hG,createAcsch:()=>OK,createAdd:()=>DY,createAddScalar:()=>mG,createAnd:()=>cZ,createApply:()=>_K,createApplyTransform:()=>n7,createArg:()=>gG,createArrayNode:()=>l6,createAsec:()=>BK,createAsech:()=>xG,createAsin:()=>PJ,createAsinh:()=>bG,createAssignmentNode:()=>N6,createAtan:()=>vG,createAtan2:()=>$Y,createAtanh:()=>NG,createAtomicMass:()=>LW,createAvogadro:()=>PW,createBellNumbers:()=>WQ,createBigNumberClass:()=>uq,createBignumber:()=>SG,createBin:()=>LK,createBitAnd:()=>pZ,createBitNot:()=>UG,createBitOr:()=>RY,createBitXor:()=>hZ,createBlockNode:()=>p6,createBohrMagneton:()=>bW,createBohrRadius:()=>IW,createBoltzmann:()=>UW,createBoolean:()=>WG,createCatalan:()=>FY,createCbrt:()=>mZ,createCeil:()=>UJ,createChain:()=>y6,createChainClass:()=>G5,createClassicalElectronRadius:()=>EW,createClone:()=>jG,createColumn:()=>WJ,createColumnTransform:()=>f7,createCombinations:()=>XG,createCombinationsWithRep:()=>UK,createCompare:()=>yZ,createCompareNatural:()=>LY,createCompareText:()=>bZ,createCompile:()=>A6,createComplex:()=>YG,createComplexClass:()=>$q,createComposition:()=>jJ,createConcat:()=>wZ,createConcatTransform:()=>u7,createConditionalNode:()=>d6,createConductanceQuantum:()=>vW,createConj:()=>QG,createConstantNode:()=>h6,createCos:()=>WK,createCosh:()=>tH,createCot:()=>lX,createCoth:()=>rH,createCoulomb:()=>yW,createCount:()=>kZ,createCreateUnit:()=>NQ,createCross:()=>HJ,createCsc:()=>aH,createCsch:()=>jK,createCtranspose:()=>EZ,createCube:()=>sH,createDeepEqual:()=>UY,createDenseMatrixClass:()=>GV,createDerivative:()=>q6,createDet:()=>HQ,createDeuteronMass:()=>$W,createDiag:()=>TZ,createDiff:()=>WY,createDiffTransform:()=>i7,createDistance:()=>XJ,createDivide:()=>e0,createDivideScalar:()=>AZ,createDot:()=>VY,createDotDivide:()=>$Z,createDotMultiply:()=>YJ,createDotPow:()=>kQ,createE:()=>Yq,createEfimovFactor:()=>BW,createEigs:()=>f0,createElectricConstant:()=>mW,createElectronMass:()=>CW,createElementaryCharge:()=>xW,createEqual:()=>RZ,createEqualScalar:()=>cH,createEqualText:()=>GY,createErf:()=>lH,createEvaluate:()=>$6,createExp:()=>gH,createExpm:()=>n0,createExpm1:()=>xH,createFactorial:()=>EQ,createFalse:()=>jq,createFaraday:()=>qW,createFermiCoupling:()=>TW,createFibonacciHeapClass:()=>JJ,createFilter:()=>bH,createFilterTransform:()=>Y6,createFineStructure:()=>DW,createFirstRadiation:()=>WW,createFix:()=>QJ,createFlatten:()=>FZ,createFloor:()=>HY,createForEach:()=>NH,createForEachTransform:()=>Q6,createFormat:()=>IH,createFraction:()=>pX,createFractionClass:()=>cV,createFunctionAssignmentNode:()=>x6,createFunctionNode:()=>E6,createGamma:()=>aQ,createGasConstant:()=>jW,createGcd:()=>BZ,createGetMatrixDataType:()=>CH,createGravitationConstant:()=>pW,createGravity:()=>eV,createHartreeEnergy:()=>AW,createHasNumericValue:()=>PZ,createHelp:()=>H6,createHelpClass:()=>O6,createHex:()=>TH,createHypot:()=>qZ,createI:()=>iW,createIdentity:()=>XY,createIm:()=>DH,createImmutableDenseMatrixClass:()=>WZ,createIndex:()=>sQ,createIndexClass:()=>VZ,createIndexNode:()=>S6,createIndexTransform:()=>s7,createInfinity:()=>Hq,createIntersect:()=>CQ,createInv:()=>KQ,createInverseConductanceQuantum:()=>wW,createInvmod:()=>YY,createIsInteger:()=>MH,createIsNaN:()=>HK,createIsNegative:()=>BH,createIsNumeric:()=>hX,createIsPositive:()=>PH,createIsPrime:()=>XK,createIsZero:()=>qH,createKldivergence:()=>a0,createKlitzing:()=>kW,createKron:()=>GZ,createLN10:()=>eW,createLN2:()=>Qq,createLOG10E:()=>nW,createLOG2E:()=>tW,createLarger:()=>QY,createLargerEq:()=>KZ,createLcm:()=>oQ,createLeftShift:()=>YZ,createLog:()=>eJ,createLog10:()=>VH,createLog1p:()=>LQ,createLog2:()=>GH,createLoschmidt:()=>VW,createLsolve:()=>eY,createLsolveAll:()=>nJ,createLup:()=>VQ,createLusolve:()=>YQ,createMad:()=>b0,createMagneticConstant:()=>fW,createMagneticFluxQuantum:()=>NW,createMap:()=>HH,createMapTransform:()=>e7,createMatrix:()=>mX,createMatrixClass:()=>lV,createMatrixFromColumns:()=>nY,createMatrixFromFunction:()=>yX,createMatrixFromRows:()=>aJ,createMax:()=>uQ,createMaxTransform:()=>c7,createMean:()=>s0,createMeanTransform:()=>m7,createMedian:()=>u0,createMin:()=>rY,createMinTransform:()=>l7,createMod:()=>IX,createMode:()=>iY,createMolarMass:()=>JW,createMolarMassC12:()=>QW,createMolarPlanckConstant:()=>GW,createMolarVolume:()=>HW,createMultinomial:()=>y0,createMultiply:()=>sJ,createMultiplyScalar:()=>XH,createNaN:()=>Kq,createNeutronMass:()=>OW,createNode:()=>K5,createNorm:()=>N0,createNot:()=>tK,createNthRoot:()=>DX,createNthRoots:()=>oY,createNuclearMagneton:()=>SW,createNull:()=>Gq,createNumber:()=>nK,createNumeric:()=>OX,createObjectNode:()=>X5,createOct:()=>rK,createOnes:()=>uY,createOperatorNode:()=>o6,createOr:()=>RX,createParenthesisNode:()=>u6,createParse:()=>T6,createParser:()=>F6,createParserClass:()=>R6,createPartitionSelect:()=>lY,createPermutations:()=>DQ,createPhi:()=>Jq,createPi:()=>Xq,createPickRandom:()=>uK,createPlanckCharge:()=>aV,createPlanckConstant:()=>dW,createPlanckLength:()=>tV,createPlanckMass:()=>nV,createPlanckTemperature:()=>iV,createPlanckTime:()=>rV,createPow:()=>oJ,createPrint:()=>lK,createProd:()=>zX,createProtonMass:()=>MW,createQr:()=>uJ,createQuantileSeq:()=>cQ,createQuantumOfCirculation:()=>RW,createRandom:()=>fK,createRandomInt:()=>YK,createRange:()=>lJ,createRangeClass:()=>pV,createRangeNode:()=>f6,createRangeTransform:()=>p7,createRationalize:()=>X6,createRe:()=>mK,createReducedPlanckConstant:()=>hW,createRelationalNode:()=>c6,createReplacer:()=>HV,createReshape:()=>LX,createResize:()=>dY,createResultSet:()=>dV,createReviver:()=>m6,createRightArithShift:()=>dJ,createRightLogShift:()=>fY,createRotate:()=>T0,createRotationMatrix:()=>I0,createRound:()=>vY,createRow:()=>hJ,createRowTransform:()=>d7,createRydberg:()=>_W,createSQRT1_2:()=>rW,createSQRT2:()=>aW,createSackurTetrode:()=>KW,createSec:()=>gK,createSech:()=>QK,createSecondRadiation:()=>XW,createSetCartesian:()=>mJ,createSetDifference:()=>pQ,createSetDistinct:()=>yJ,createSetIntersect:()=>$Q,createSetIsSubset:()=>bJ,createSetMultiplicity:()=>hQ,createSetPowerset:()=>wJ,createSetSize:()=>GQ,createSetSymDifference:()=>mQ,createSetUnion:()=>RQ,createSign:()=>xK,createSimplify:()=>U6,createSin:()=>bK,createSinh:()=>tX,createSize:()=>UX,createSlu:()=>RJ,createSmaller:()=>VX,createSmallerEq:()=>SY,createSort:()=>yQ,createSpaClass:()=>_Q,createSparse:()=>rX,createSparseMatrixClass:()=>vK,createSpeedOfLight:()=>lW,createSplitUnit:()=>NK,createSqrt:()=>aX,createSqrtm:()=>QQ,createSquare:()=>kK,createSqueeze:()=>GX,createStd:()=>d0,createStdTransform:()=>x7,createStefanBoltzmann:()=>ZW,createStirlingS2:()=>UQ,createString:()=>EK,createSubset:()=>KX,createSubsetTransform:()=>o7,createSubtract:()=>tZ,createSum:()=>_J,createSumTransform:()=>h7,createSymbolNode:()=>k6,createTan:()=>CK,createTanh:()=>iX,createTau:()=>Zq,createThomsonCrossSection:()=>FW,createTo:()=>rZ,createTrace:()=>FJ,createTranspose:()=>aZ,createTrue:()=>Vq,createTypeOf:()=>DK,createTyped:()=>uj,createUnaryMinus:()=>oX,createUnaryPlus:()=>Wj,createUnequal:()=>IY,createUnitClass:()=>vQ,createUnitFunction:()=>zQ,createUppercaseE:()=>oW,createUppercasePi:()=>sW,createUsolve:()=>CY,createUsolveAll:()=>BJ,createVacuumImpedance:()=>gW,createVariance:()=>p0,createVarianceTransform:()=>y7,createVersion:()=>uW,createWeakMixingAngle:()=>zW,createWienDisplacement:()=>YW,createXgcd:()=>sZ,createXor:()=>TY,createZeros:()=>uZ});var H={};n.r(H),n.d(H,{AccessorNode:()=>F7,AccessorNodeDependencies:()=>c9,ArgumentsError:()=>pY,ArrayNode:()=>T7,ArrayNodeDependencies:()=>I9,AssignmentNode:()=>z7,AssignmentNodeDependencies:()=>A9,BigNumber:()=>D0,BigNumberDependencies:()=>Y7,BlockNode:()=>D7,BlockNodeDependencies:()=>y8,Chain:()=>N7,ChainDependencies:()=>k8,Complex:()=>A0,ComplexDependencies:()=>J7,ConditionalNode:()=>A7,ConditionalNodeDependencies:()=>P8,ConstantNode:()=>M7,ConstantNodeDependencies:()=>U8,DenseMatrix:()=>Z0,DenseMatrixDependencies:()=>e9,DimensionError:()=>wV,EDependencies:()=>Qre,FibonacciHeap:()=>l4,FibonacciHeapDependencies:()=>Nee,Fraction:()=>R0,FractionDependencies:()=>t9,FunctionAssignmentNode:()=>_7,FunctionAssignmentNodeDependencies:()=>q8,FunctionNode:()=>P7,FunctionNodeDependencies:()=>V8,Help:()=>V7,HelpDependencies:()=>Nte,ImmutableDenseMatrix:()=>u3,ImmutableDenseMatrixDependencies:()=>D8,Index:()=>c3,IndexDependencies:()=>A8,IndexError:()=>NV,IndexNode:()=>B7,IndexNodeDependencies:()=>G8,InfinityDependencies:()=>Dte,LN10:()=>z0,LN10Dependencies:()=>qte,LN2:()=>J0,LN2Dependencies:()=>Wte,LOG10E:()=>B0,LOG10EDependencies:()=>Vte,LOG2E:()=>P1,LOG2EDependencies:()=>jte,Matrix:()=>L0,MatrixDependencies:()=>Q7,NaNDependencies:()=>Sne,Node:()=>S7,NodeDependencies:()=>a9,ObjectNode:()=>k7,ObjectNodeDependencies:()=>H8,OperatorNode:()=>I7,OperatorNodeDependencies:()=>K8,PIDependencies:()=>eae,ParenthesisNode:()=>E7,ParenthesisNodeDependencies:()=>X8,Parser:()=>j7,ParserDependencies:()=>One,Range:()=>W0,RangeDependencies:()=>j8,RangeNode:()=>$7,RangeNodeDependencies:()=>Z8,RelationalNode:()=>C7,RelationalNodeDependencies:()=>Y8,ResultSet:()=>V0,ResultSetDependencies:()=>g8,SQRT1_2:()=>j0,SQRT1_2Dependencies:()=>pre,SQRT2:()=>t1,SQRT2Dependencies:()=>dre,Spa:()=>t5,SpaDependencies:()=>See,SparseMatrix:()=>t2,SparseMatrixDependencies:()=>s9,SymbolNode:()=>L7,SymbolNodeDependencies:()=>W8,Unit:()=>w4,UnitDependencies:()=>t8,_Infinity:()=>F0,_NaN:()=>P0,_false:()=>$0,_null:()=>U0,_true:()=>K0,abs:()=>i1,absDependencies:()=>r9,acos:()=>s1,acosDependencies:()=>l9,acosh:()=>o2,acoshDependencies:()=>p9,acot:()=>o1,acotDependencies:()=>d9,acoth:()=>k2,acothDependencies:()=>h9,acsc:()=>u1,acscDependencies:()=>f9,acsch:()=>u2,acschDependencies:()=>m9,add:()=>C3,addDependencies:()=>y9,addScalar:()=>c1,addScalarDependencies:()=>g9,all:()=>oae,and:()=>j2,andDependencies:()=>v9,apply:()=>c2,applyDependencies:()=>N9,applyTransformDependencies:()=>S9,arg:()=>l1,argDependencies:()=>k9,asec:()=>l2,asecDependencies:()=>E9,asech:()=>p1,asechDependencies:()=>C9,asin:()=>r4,asinDependencies:()=>T9,asinh:()=>d1,asinhDependencies:()=>D9,atan:()=>h1,atan2:()=>T3,atan2Dependencies:()=>$9,atanDependencies:()=>M9,atanh:()=>f1,atanhDependencies:()=>O9,atomicMass:()=>k4,atomicMassDependencies:()=>n8,avogadro:()=>a5,avogadroDependencies:()=>r8,bellNumbers:()=>b5,bellNumbersDependencies:()=>l8,bignumber:()=>m1,bignumberDependencies:()=>R9,bin:()=>p2,binDependencies:()=>p8,bitAnd:()=>G2,bitAndDependencies:()=>d8,bitNot:()=>g1,bitNotDependencies:()=>h8,bitOr:()=>D3,bitOrDependencies:()=>f8,bitXor:()=>H2,bitXorDependencies:()=>m8,bohrMagneton:()=>I4,bohrMagnetonDependencies:()=>x8,bohrRadius:()=>i5,bohrRadiusDependencies:()=>b8,boltzmann:()=>E4,boltzmannDependencies:()=>v8,boolean:()=>y1,booleanDependencies:()=>w8,catalan:()=>A3,catalanDependencies:()=>N8,cbrt:()=>K2,cbrtDependencies:()=>S8,ceil:()=>a4,ceilDependencies:()=>U9,chain:()=>R7,chainDependencies:()=>I8,classicalElectronRadius:()=>E5,classicalElectronRadiusDependencies:()=>E8,clone:()=>x1,cloneDependencies:()=>C8,column:()=>i4,columnDependencies:()=>R8,columnTransformDependencies:()=>_8,combinations:()=>b1,combinationsDependencies:()=>i8,combinationsWithRep:()=>d2,combinationsWithRepDependencies:()=>F8,compare:()=>X2,compareDependencies:()=>z8,compareNatural:()=>M3,compareNaturalDependencies:()=>B8,compareText:()=>Z2,compareTextDependencies:()=>L8,compile:()=>q7,compileDependencies:()=>Q8,complex:()=>v1,complexDependencies:()=>eee,composition:()=>s4,compositionDependencies:()=>nee,concat:()=>Y2,concatDependencies:()=>ree,concatTransformDependencies:()=>aee,conductanceQuantum:()=>C4,conductanceQuantumDependencies:()=>iee,config:()=>rq,conj:()=>w1,conjDependencies:()=>K9,cos:()=>h2,cosDependencies:()=>see,cosh:()=>N1,coshDependencies:()=>oee,cot:()=>I2,cotDependencies:()=>uee,coth:()=>S1,cothDependencies:()=>cee,coulomb:()=>s5,coulombDependencies:()=>lee,count:()=>J2,countDependencies:()=>dee,create:()=>cae,createAbs:()=>Vj,createAccessorNode:()=>w6,createAcos:()=>Gj,createAcosh:()=>MK,createAcot:()=>pG,createAcoth:()=>cX,createAcsc:()=>hG,createAcsch:()=>OK,createAdd:()=>DY,createAddScalar:()=>mG,createAnd:()=>cZ,createApply:()=>_K,createApplyTransform:()=>n7,createArg:()=>gG,createArrayNode:()=>l6,createAsec:()=>BK,createAsech:()=>xG,createAsin:()=>PJ,createAsinh:()=>bG,createAssignmentNode:()=>N6,createAtan:()=>vG,createAtan2:()=>$Y,createAtanh:()=>NG,createAtomicMass:()=>LW,createAvogadro:()=>PW,createBellNumbers:()=>WQ,createBigNumberClass:()=>uq,createBignumber:()=>SG,createBin:()=>LK,createBitAnd:()=>pZ,createBitNot:()=>UG,createBitOr:()=>RY,createBitXor:()=>hZ,createBlockNode:()=>p6,createBohrMagneton:()=>bW,createBohrRadius:()=>IW,createBoltzmann:()=>UW,createBoolean:()=>WG,createCatalan:()=>FY,createCbrt:()=>mZ,createCeil:()=>UJ,createChain:()=>y6,createChainClass:()=>G5,createClassicalElectronRadius:()=>EW,createClone:()=>jG,createColumn:()=>WJ,createColumnTransform:()=>f7,createCombinations:()=>XG,createCombinationsWithRep:()=>UK,createCompare:()=>yZ,createCompareNatural:()=>LY,createCompareText:()=>bZ,createCompile:()=>A6,createComplex:()=>YG,createComplexClass:()=>$q,createComposition:()=>jJ,createConcat:()=>wZ,createConcatTransform:()=>u7,createConditionalNode:()=>d6,createConductanceQuantum:()=>vW,createConj:()=>QG,createConstantNode:()=>h6,createCos:()=>WK,createCosh:()=>tH,createCot:()=>lX,createCoth:()=>rH,createCoulomb:()=>yW,createCount:()=>kZ,createCreateUnit:()=>NQ,createCross:()=>HJ,createCsc:()=>aH,createCsch:()=>jK,createCtranspose:()=>EZ,createCube:()=>sH,createDeepEqual:()=>UY,createDenseMatrixClass:()=>GV,createDerivative:()=>q6,createDet:()=>HQ,createDeuteronMass:()=>$W,createDiag:()=>TZ,createDiff:()=>WY,createDiffTransform:()=>i7,createDistance:()=>XJ,createDivide:()=>e0,createDivideScalar:()=>AZ,createDot:()=>VY,createDotDivide:()=>$Z,createDotMultiply:()=>YJ,createDotPow:()=>kQ,createE:()=>Yq,createEfimovFactor:()=>BW,createEigs:()=>f0,createElectricConstant:()=>mW,createElectronMass:()=>CW,createElementaryCharge:()=>xW,createEqual:()=>RZ,createEqualScalar:()=>cH,createEqualText:()=>GY,createErf:()=>lH,createEvaluate:()=>$6,createExp:()=>gH,createExpm:()=>n0,createExpm1:()=>xH,createFactorial:()=>EQ,createFalse:()=>jq,createFaraday:()=>qW,createFermiCoupling:()=>TW,createFibonacciHeapClass:()=>JJ,createFilter:()=>bH,createFilterTransform:()=>Y6,createFineStructure:()=>DW,createFirstRadiation:()=>WW,createFix:()=>QJ,createFlatten:()=>FZ,createFloor:()=>HY,createForEach:()=>NH,createForEachTransform:()=>Q6,createFormat:()=>IH,createFraction:()=>pX,createFractionClass:()=>cV,createFunctionAssignmentNode:()=>x6,createFunctionNode:()=>E6,createGamma:()=>aQ,createGasConstant:()=>jW,createGcd:()=>BZ,createGetMatrixDataType:()=>CH,createGravitationConstant:()=>pW,createGravity:()=>eV,createHartreeEnergy:()=>AW,createHasNumericValue:()=>PZ,createHelp:()=>H6,createHelpClass:()=>O6,createHex:()=>TH,createHypot:()=>qZ,createI:()=>iW,createIdentity:()=>XY,createIm:()=>DH,createImmutableDenseMatrixClass:()=>WZ,createIndex:()=>sQ,createIndexClass:()=>VZ,createIndexNode:()=>S6,createIndexTransform:()=>s7,createInfinity:()=>Hq,createIntersect:()=>CQ,createInv:()=>KQ,createInverseConductanceQuantum:()=>wW,createInvmod:()=>YY,createIsInteger:()=>MH,createIsNaN:()=>HK,createIsNegative:()=>BH,createIsNumeric:()=>hX,createIsPositive:()=>PH,createIsPrime:()=>XK,createIsZero:()=>qH,createKldivergence:()=>a0,createKlitzing:()=>kW,createKron:()=>GZ,createLN10:()=>eW,createLN2:()=>Qq,createLOG10E:()=>nW,createLOG2E:()=>tW,createLarger:()=>QY,createLargerEq:()=>KZ,createLcm:()=>oQ,createLeftShift:()=>YZ,createLog:()=>eJ,createLog10:()=>VH,createLog1p:()=>LQ,createLog2:()=>GH,createLoschmidt:()=>VW,createLsolve:()=>eY,createLsolveAll:()=>nJ,createLup:()=>VQ,createLusolve:()=>YQ,createMad:()=>b0,createMagneticConstant:()=>fW,createMagneticFluxQuantum:()=>NW,createMap:()=>HH,createMapTransform:()=>e7,createMatrix:()=>mX,createMatrixClass:()=>lV,createMatrixFromColumns:()=>nY,createMatrixFromFunction:()=>yX,createMatrixFromRows:()=>aJ,createMax:()=>uQ,createMaxTransform:()=>c7,createMean:()=>s0,createMeanTransform:()=>m7,createMedian:()=>u0,createMin:()=>rY,createMinTransform:()=>l7,createMod:()=>IX,createMode:()=>iY,createMolarMass:()=>JW,createMolarMassC12:()=>QW,createMolarPlanckConstant:()=>GW,createMolarVolume:()=>HW,createMultinomial:()=>y0,createMultiply:()=>sJ,createMultiplyScalar:()=>XH,createNaN:()=>Kq,createNeutronMass:()=>OW,createNode:()=>K5,createNorm:()=>N0,createNot:()=>tK,createNthRoot:()=>DX,createNthRoots:()=>oY,createNuclearMagneton:()=>SW,createNull:()=>Gq,createNumber:()=>nK,createNumeric:()=>OX,createObjectNode:()=>X5,createOct:()=>rK,createOnes:()=>uY,createOperatorNode:()=>o6,createOr:()=>RX,createParenthesisNode:()=>u6,createParse:()=>T6,createParser:()=>F6,createParserClass:()=>R6,createPartitionSelect:()=>lY,createPermutations:()=>DQ,createPhi:()=>Jq,createPi:()=>Xq,createPickRandom:()=>uK,createPlanckCharge:()=>aV,createPlanckConstant:()=>dW,createPlanckLength:()=>tV,createPlanckMass:()=>nV,createPlanckTemperature:()=>iV,createPlanckTime:()=>rV,createPow:()=>oJ,createPrint:()=>lK,createProd:()=>zX,createProtonMass:()=>MW,createQr:()=>uJ,createQuantileSeq:()=>cQ,createQuantumOfCirculation:()=>RW,createRandom:()=>fK,createRandomInt:()=>YK,createRange:()=>lJ,createRangeClass:()=>pV,createRangeNode:()=>f6,createRangeTransform:()=>p7,createRationalize:()=>X6,createRe:()=>mK,createReducedPlanckConstant:()=>hW,createRelationalNode:()=>c6,createReplacer:()=>HV,createReshape:()=>LX,createResize:()=>dY,createResultSet:()=>dV,createReviver:()=>m6,createRightArithShift:()=>dJ,createRightLogShift:()=>fY,createRotate:()=>T0,createRotationMatrix:()=>I0,createRound:()=>vY,createRow:()=>hJ,createRowTransform:()=>d7,createRydberg:()=>_W,createSQRT1_2:()=>rW,createSQRT2:()=>aW,createSackurTetrode:()=>KW,createSec:()=>gK,createSech:()=>QK,createSecondRadiation:()=>XW,createSetCartesian:()=>mJ,createSetDifference:()=>pQ,createSetDistinct:()=>yJ,createSetIntersect:()=>$Q,createSetIsSubset:()=>bJ,createSetMultiplicity:()=>hQ,createSetPowerset:()=>wJ,createSetSize:()=>GQ,createSetSymDifference:()=>mQ,createSetUnion:()=>RQ,createSign:()=>xK,createSimplify:()=>U6,createSin:()=>bK,createSinh:()=>tX,createSize:()=>UX,createSlu:()=>RJ,createSmaller:()=>VX,createSmallerEq:()=>SY,createSort:()=>yQ,createSpaClass:()=>_Q,createSparse:()=>rX,createSparseMatrixClass:()=>vK,createSpeedOfLight:()=>lW,createSplitUnit:()=>NK,createSqrt:()=>aX,createSqrtm:()=>QQ,createSquare:()=>kK,createSqueeze:()=>GX,createStd:()=>d0,createStdTransform:()=>x7,createStefanBoltzmann:()=>ZW,createStirlingS2:()=>UQ,createString:()=>EK,createSubset:()=>KX,createSubsetTransform:()=>o7,createSubtract:()=>tZ,createSum:()=>_J,createSumTransform:()=>h7,createSymbolNode:()=>k6,createTan:()=>CK,createTanh:()=>iX,createTau:()=>Zq,createThomsonCrossSection:()=>FW,createTo:()=>rZ,createTrace:()=>FJ,createTranspose:()=>aZ,createTrue:()=>Vq,createTypeOf:()=>DK,createTyped:()=>uj,createUnaryMinus:()=>oX,createUnaryPlus:()=>Wj,createUnequal:()=>IY,createUnit:()=>T4,createUnitClass:()=>vQ,createUnitDependencies:()=>hee,createUnitFunction:()=>zQ,createUppercaseE:()=>oW,createUppercasePi:()=>sW,createUsolve:()=>CY,createUsolveAll:()=>BJ,createVacuumImpedance:()=>gW,createVariance:()=>p0,createVarianceTransform:()=>y7,createVersion:()=>uW,createWeakMixingAngle:()=>zW,createWienDisplacement:()=>YW,createXgcd:()=>sZ,createXor:()=>TY,createZeros:()=>uZ,cross:()=>o4,crossDependencies:()=>fee,csc:()=>k1,cscDependencies:()=>mee,csch:()=>f2,cschDependencies:()=>gee,ctranspose:()=>Q2,ctransposeDependencies:()=>xee,cube:()=>I1,cubeDependencies:()=>bee,deepEqual:()=>$3,deepEqualDependencies:()=>vee,derivative:()=>K7,derivativeDependencies:()=>Dee,det:()=>C5,detDependencies:()=>Iee,deuteronMass:()=>D4,deuteronMassDependencies:()=>Aee,diag:()=>e3,diagDependencies:()=>Mee,diff:()=>O3,diffDependencies:()=>$ee,diffTransformDependencies:()=>Oee,distance:()=>u4,distanceDependencies:()=>_ee,divide:()=>$5,divideDependencies:()=>Cee,divideScalar:()=>t3,divideScalarDependencies:()=>B9,docs:()=>j6,dot:()=>R3,dotDependencies:()=>Z9,dotDivide:()=>n3,dotDivideDependencies:()=>Fee,dotMultiply:()=>c4,dotMultiplyDependencies:()=>zee,dotPow:()=>A4,dotPowDependencies:()=>Bee,e:()=>M0,eDependencies:()=>Lee,efimovFactor:()=>Y0,efimovFactorDependencies:()=>Pee,eigs:()=>P5,eigsDependencies:()=>Zee,electricConstant:()=>M4,electricConstantDependencies:()=>Yee,electronMass:()=>o5,electronMassDependencies:()=>Jee,elementaryCharge:()=>$4,elementaryChargeDependencies:()=>Qee,equal:()=>r3,equalDependencies:()=>L9,equalScalar:()=>E1,equalScalarDependencies:()=>i9,equalText:()=>_3,equalTextDependencies:()=>ete,erf:()=>C1,erfDependencies:()=>tte,evaluate:()=>W7,evaluateDependencies:()=>nte,exp:()=>T1,expDependencies:()=>rte,expm:()=>O5,expm1:()=>D1,expm1Dependencies:()=>ite,expmDependencies:()=>ate,factorial:()=>O4,factorialDependencies:()=>o8,factory:()=>iq,falseDependencies:()=>ste,faraday:()=>u5,faradayDependencies:()=>ote,fermiCoupling:()=>R4,fermiCouplingDependencies:()=>ute,filter:()=>A1,filterDependencies:()=>cte,filterTransformDependencies:()=>lte,fineStructure:()=>O0,fineStructureDependencies:()=>pte,firstRadiation:()=>v5,firstRadiationDependencies:()=>dte,fix:()=>p4,fixDependencies:()=>W9,flatten:()=>a3,flattenDependencies:()=>Uee,floor:()=>F3,floorDependencies:()=>q9,forEach:()=>M1,forEachDependencies:()=>hte,forEachTransformDependencies:()=>fte,format:()=>$1,formatDependencies:()=>V9,fraction:()=>E2,fractionDependencies:()=>_9,gamma:()=>d4,gammaDependencies:()=>s8,gasConstant:()=>_4,gasConstantDependencies:()=>mte,gcd:()=>i3,gcdDependencies:()=>gte,getMatrixDataType:()=>O1,getMatrixDataTypeDependencies:()=>yte,gravitationConstant:()=>T5,gravitationConstantDependencies:()=>xte,gravity:()=>F4,gravityDependencies:()=>bte,hartreeEnergy:()=>c5,hartreeEnergyDependencies:()=>vte,hasNumericValue:()=>s3,hasNumericValueDependencies:()=>wte,help:()=>X7,helpDependencies:()=>Ste,hex:()=>R1,hexDependencies:()=>kte,hypot:()=>o3,hypotDependencies:()=>Ite,i:()=>_0,iDependencies:()=>Ete,identity:()=>z3,identityDependencies:()=>H9,im:()=>_1,imDependencies:()=>qee,index:()=>h4,indexDependencies:()=>Cte,indexTransformDependencies:()=>Tte,intersect:()=>z4,intersectDependencies:()=>Ate,inv:()=>D5,invDependencies:()=>Eee,inverseConductanceQuantum:()=>B4,inverseConductanceQuantumDependencies:()=>Mte,invmod:()=>B3,invmodDependencies:()=>Rte,isAccessorNode:()=>EU,isArray:()=>lU,isArrayNode:()=>CU,isAssignmentNode:()=>TU,isBigNumber:()=>iU,isBlockNode:()=>DU,isBoolean:()=>yU,isChain:()=>UU,isCollection:()=>dU,isComplex:()=>sU,isConditionalNode:()=>AU,isConstantNode:()=>MU,isDate:()=>wU,isDenseMatrix:()=>hU,isFraction:()=>oU,isFunction:()=>vU,isFunctionAssignmentNode:()=>$U,isFunctionNode:()=>OU,isHelp:()=>bU,isIndex:()=>gU,isIndexNode:()=>RU,isInteger:()=>F1,isIntegerDependencies:()=>w9,isMatrix:()=>pU,isNaN:()=>m2,isNaNDependencies:()=>_te,isNegative:()=>z1,isNegativeDependencies:()=>a8,isNode:()=>_U,isNull:()=>kU,isNumber:()=>aU,isNumeric:()=>C2,isNumericDependencies:()=>j9,isObject:()=>SU,isObjectNode:()=>FU,isOperatorNode:()=>zU,isParenthesisNode:()=>BU,isPositive:()=>B1,isPositiveDependencies:()=>tee,isPrime:()=>g2,isPrimeDependencies:()=>Fte,isRange:()=>mU,isRangeNode:()=>LU,isRegExp:()=>NU,isResultSet:()=>xU,isSparseMatrix:()=>fU,isString:()=>cU,isSymbolNode:()=>PU,isUndefined:()=>IU,isUnit:()=>uU,isZero:()=>L1,isZeroDependencies:()=>wee,kldivergence:()=>R5,kldivergenceDependencies:()=>Lte,klitzing:()=>L4,klitzingDependencies:()=>Pte,kron:()=>l3,kronDependencies:()=>Ute,larger:()=>L3,largerDependencies:()=>u8,largerEq:()=>p3,largerEqDependencies:()=>M8,lcm:()=>f4,lcmDependencies:()=>Gte,leftShift:()=>d3,leftShiftDependencies:()=>Hte,log:()=>P3,log10:()=>U1,log10Dependencies:()=>Kte,log1p:()=>l5,log1pDependencies:()=>Xte,log2:()=>q1,log2Dependencies:()=>Zte,logDependencies:()=>zte,loschmidt:()=>P4,loschmidtDependencies:()=>Yte,lsolve:()=>h3,lsolveAll:()=>U3,lsolveAllDependencies:()=>Qte,lsolveDependencies:()=>Jte,lup:()=>w5,lupDependencies:()=>kee,lusolve:()=>A5,lusolveDependencies:()=>tne,mad:()=>q5,madDependencies:()=>ine,magneticConstant:()=>U4,magneticConstantDependencies:()=>sne,magneticFluxQuantum:()=>d5,magneticFluxQuantumDependencies:()=>one,map:()=>W1,mapDependencies:()=>nne,mapTransformDependencies:()=>une,matrix:()=>T2,matrixDependencies:()=>o9,matrixFromColumns:()=>f3,matrixFromColumnsDependencies:()=>Wee,matrixFromFunction:()=>D2,matrixFromFunctionDependencies:()=>cne,matrixFromRows:()=>q3,matrixFromRowsDependencies:()=>lne,max:()=>m4,maxDependencies:()=>pne,maxTransformDependencies:()=>dne,mean:()=>_5,meanDependencies:()=>hne,meanTransformDependencies:()=>fne,median:()=>F5,medianDependencies:()=>ane,min:()=>m3,minDependencies:()=>mne,minTransformDependencies:()=>gne,mod:()=>A2,modDependencies:()=>$te,mode:()=>g3,modeDependencies:()=>yne,molarMass:()=>q4,molarMassC12:()=>h5,molarMassC12Dependencies:()=>bne,molarMassDependencies:()=>xne,molarPlanckConstant:()=>W4,molarPlanckConstantDependencies:()=>vne,molarVolume:()=>N5,molarVolumeDependencies:()=>wne,multinomial:()=>U5,multinomialDependencies:()=>Nne,multiply:()=>W3,multiplyDependencies:()=>Y9,multiplyScalar:()=>V1,multiplyScalarDependencies:()=>G9,neutronMass:()=>V4,neutronMassDependencies:()=>kne,norm:()=>W5,normDependencies:()=>Ine,not:()=>j1,notDependencies:()=>x9,nthRoot:()=>M2,nthRootDependencies:()=>Ene,nthRoots:()=>y3,nthRootsDependencies:()=>Cne,nuclearMagneton:()=>j4,nuclearMagnetonDependencies:()=>Tne,nullDependencies:()=>Dne,number:()=>G1,numberDependencies:()=>F9,numeric:()=>$2,numericDependencies:()=>z9,oct:()=>H1,octDependencies:()=>Ane,ones:()=>x3,onesDependencies:()=>Mne,or:()=>O2,orDependencies:()=>$ne,parse:()=>U7,parseDependencies:()=>J8,parser:()=>G7,parserDependencies:()=>Rne,partitionSelect:()=>b3,partitionSelectDependencies:()=>rne,permutations:()=>G4,permutationsDependencies:()=>_ne,phi:()=>q0,phiDependencies:()=>Fne,pi:()=>Q0,piDependencies:()=>zne,pickRandom:()=>K1,pickRandomDependencies:()=>Bne,planckCharge:()=>f5,planckChargeDependencies:()=>Lne,planckConstant:()=>H4,planckConstantDependencies:()=>Pne,planckLength:()=>z5,planckLengthDependencies:()=>Une,planckMass:()=>K4,planckMassDependencies:()=>qne,planckTemperature:()=>m5,planckTemperatureDependencies:()=>Wne,planckTime:()=>X4,planckTimeDependencies:()=>Vne,pow:()=>V3,powDependencies:()=>J9,print:()=>X1,printDependencies:()=>jne,prod:()=>R2,prodDependencies:()=>pee,protonMass:()=>S5,protonMassDependencies:()=>Gne,qr:()=>j3,qrDependencies:()=>jee,quantileSeq:()=>g4,quantileSeqDependencies:()=>Hne,quantumOfCirculation:()=>Z4,quantumOfCirculationDependencies:()=>Kne,random:()=>Z1,randomDependencies:()=>Xne,randomInt:()=>y2,randomIntDependencies:()=>Zne,range:()=>G3,rangeDependencies:()=>O8,rangeTransformDependencies:()=>Yne,rationalize:()=>Z7,rationalizeDependencies:()=>Jne,re:()=>Y1,reDependencies:()=>Gee,reducedPlanckConstant:()=>Y4,reducedPlanckConstantDependencies:()=>Qne,replacer:()=>e1,replacerDependencies:()=>ere,reshape:()=>_2,reshapeDependencies:()=>tre,resize:()=>v3,resizeDependencies:()=>nre,reviver:()=>O7,reviverDependencies:()=>rre,rightArithShift:()=>H3,rightArithShiftDependencies:()=>are,rightLogShift:()=>w3,rightLogShiftDependencies:()=>ire,rotate:()=>j5,rotateDependencies:()=>ore,rotationMatrix:()=>V5,rotationMatrixDependencies:()=>sre,round:()=>N3,roundDependencies:()=>P9,row:()=>K3,rowDependencies:()=>ure,rowTransformDependencies:()=>cre,rydberg:()=>J4,rydbergDependencies:()=>lre,sackurTetrode:()=>G0,sackurTetrodeDependencies:()=>hre,sec:()=>J1,secDependencies:()=>fre,sech:()=>x2,sechDependencies:()=>mre,secondRadiation:()=>g5,secondRadiationDependencies:()=>gre,setCartesian:()=>X3,setCartesianDependencies:()=>yre,setDifference:()=>y4,setDifferenceDependencies:()=>xre,setDistinct:()=>Z3,setDistinctDependencies:()=>bre,setIntersect:()=>Q4,setIntersectDependencies:()=>vre,setIsSubset:()=>Y3,setIsSubsetDependencies:()=>wre,setMultiplicity:()=>x4,setMultiplicityDependencies:()=>Nre,setPowerset:()=>J3,setPowersetDependencies:()=>Sre,setSize:()=>k5,setSizeDependencies:()=>kre,setSymDifference:()=>b4,setSymDifferenceDependencies:()=>Ire,setUnion:()=>e5,setUnionDependencies:()=>Ere,sign:()=>Q1,signDependencies:()=>Vee,simplify:()=>H7,simplifyDependencies:()=>Tee,sin:()=>e2,sinDependencies:()=>Hee,sinh:()=>b2,sinhDependencies:()=>Cre,size:()=>F2,sizeDependencies:()=>X9,slu:()=>Q3,sluDependencies:()=>ene,smaller:()=>z2,smallerDependencies:()=>T8,smallerEq:()=>S3,smallerEqDependencies:()=>$8,sort:()=>v4,sortDependencies:()=>Tre,sparse:()=>v2,sparseDependencies:()=>Dre,speedOfLight:()=>y5,speedOfLightDependencies:()=>Are,splitUnit:()=>n2,splitUnitDependencies:()=>Mre,sqrt:()=>w2,sqrtDependencies:()=>Ree,sqrtm:()=>M5,sqrtmDependencies:()=>$re,square:()=>r2,squareDependencies:()=>Ore,squeeze:()=>B2,squeezeDependencies:()=>Rre,std:()=>L5,stdDependencies:()=>Fre,stdTransformDependencies:()=>zre,stefanBoltzmann:()=>n5,stefanBoltzmannDependencies:()=>Bre,stirlingS2:()=>x5,stirlingS2Dependencies:()=>c8,string:()=>a2,stringDependencies:()=>Lre,subset:()=>L2,subsetDependencies:()=>u9,subsetTransformDependencies:()=>Pre,subtract:()=>P2,subtractDependencies:()=>e8,sum:()=>e4,sumDependencies:()=>Bte,sumTransformDependencies:()=>Ure,tan:()=>i2,tanDependencies:()=>qre,tanh:()=>N2,tanhDependencies:()=>Wre,tau:()=>H0,tauDependencies:()=>Vre,thomsonCrossSection:()=>I5,thomsonCrossSectionDependencies:()=>jre,to:()=>U2,toDependencies:()=>Gre,trace:()=>t4,traceDependencies:()=>Hre,transpose:()=>q2,transposeDependencies:()=>yee,trueDependencies:()=>Kre,typeOf:()=>s2,typeOfDependencies:()=>Xre,typed:()=>n1,typedDependencies:()=>n9,unaryMinus:()=>S2,unaryMinusDependencies:()=>Q9,unaryPlus:()=>r1,unaryPlusDependencies:()=>Zre,unequal:()=>k3,unequalDependencies:()=>Yre,unit:()=>r5,unitDependencies:()=>Jre,usolve:()=>I3,usolveAll:()=>n4,usolveAllDependencies:()=>Xee,usolveDependencies:()=>Kee,vacuumImpedance:()=>N4,vacuumImpedanceDependencies:()=>tae,variance:()=>B5,varianceDependencies:()=>_re,varianceTransformDependencies:()=>nae,version:()=>X0,versionDependencies:()=>rae,weakMixingAngle:()=>a1,weakMixingAngleDependencies:()=>aae,wienDisplacement:()=>S4,wienDisplacementDependencies:()=>iae,xgcd:()=>W2,xgcdDependencies:()=>Ote,xor:()=>E3,xorDependencies:()=>sae,zeros:()=>V2,zerosDependencies:()=>b9});class K{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class X{refCount(e){return Z("refCount")}incRef(e){return Z("incRef")}timerAvailable(){return!0}time(e){return Z("time")}read(e){return Z("read")}readSync(e){return Z("readSync")}readToGPU(e,t){return Z("readToGPU")}numDataIds(){return Z("numDataIds")}disposeData(e,t){return Z("disposeData")}write(e,t,n){return Z("write")}move(e,t,n,r,a){return Z("move")}memory(){return Z("memory")}floatPrecision(){return Z("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Z("dispose")}}function Z(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Y(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,te(e,t,n)}function J(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,te(e,n,r),te(t,n,r)}function Q(e,t,n){return Math.max(e,Math.min(t,n))}function ee(e){return e%2==0?e:e+1}function te(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function ne(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function re(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function se(e,t,n=""){ie(pe(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function oe(e){ie(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Ee(e)&&!n)for(let r=0;r<e.length;++r)ue(e[r],t,n);else t.push(e);return t}function ce(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function le(e){return 0===e.length}function pe(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function de(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function fe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function me(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Y(t),t}function ge(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ye(e,t=(e=>0),n){return new Promise(((r,a)=>{let i=0;const s=()=>{if(e())return void r();i++;const o=t(i);null!=n&&i>=n?a():setTimeout(s,o)};s()}))}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function be(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),ie(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ie(e.every((e=>de(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ve(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:be(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Ne(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Se(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ee(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ce(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Te(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function De(e){return"string"==typeof e||e instanceof String}function Ae(e){return"boolean"==typeof e}function Me(e){return"number"==typeof e}function $e(e){return Array.isArray(e)?$e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Me(e)?"float32":De(e)?"string":Ae(e)?"bool":"float32"}function Oe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Re(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Fe(e,t,n,r=!1){const a=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)a[t]=n[e+t]}else{const i=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)a[t]=Fe(e+t*o,s,n,r)}return a}function ze(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Fe(0,e,t,n)}function Be(e,t){const n=Le(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Pe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ze(e,new Float32Array(n));if("int32"===t)return ze(e,new Int32Array(n));if("bool"===t)return ze(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ue(e){e.forEach((t=>{ie(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function qe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function We(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Ve(e){return e&&e.then&&"function"==typeof e.then}class je{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ge,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ve(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ge(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function He(){return Xe}let Ke,Xe=null;function Ze(){if(null==Ke){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ke=e}return Ke}function Ye(e,t){const n=function(){const e=Ze();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Je="Abs",Qe="Acos",et="Acosh",tt="Add",nt="AddN",rt="All",at="Any",it="ArgMax",st="ArgMin",ot="Asin",ut="Asinh",ct="Atan",lt="Atanh",pt="Atan2",dt="AvgPool",ht="AvgPoolGrad",ft="AvgPool3D",mt="AvgPool3DGrad",gt="BatchMatMul",yt="BatchToSpaceND",xt="Bincount",bt="BroadcastTo",vt="BroadcastArgs",wt="Cast",Nt="Ceil",St="ClipByValue",kt="Complex",It="ComplexAbs",Et="Concat",Ct="Conv2D",Tt="Conv2DBackpropFilter",Dt="Conv2DBackpropInput",At="Conv3D",Mt="Conv3DBackpropFilterV2",$t="Conv3DBackpropInputV2",Ot="Cos",Rt="Cosh",_t="Cumsum",Ft="CropAndResize",zt="DenseBincount",Bt="DepthToSpace",Lt="DepthwiseConv2dNative",Pt="DepthwiseConv2dNativeBackpropFilter",Ut="DepthwiseConv2dNativeBackpropInput",qt="Diag",Wt="Dilation2D",Vt="Dilation2DBackpropInput",jt="Dilation2DBackpropFilter",Gt="RealDiv",Ht="Einsum",Kt="Elu",Xt="EluGrad",Zt="Erf",Yt="Equal",Jt="Exp",Qt="ExpandDims",en="Expm1",tn="FFT",nn="Fill",rn="FlipLeftRight",an="Floor",sn="FloorDiv",on="FusedBatchNorm",un="GatherV2",cn="GatherNd",ln="Greater",pn="GreaterEqual",dn="Identity",hn="IFFT",fn="Imag",mn="IsFinite",gn="IsInf",yn="IsNan",xn="LeakyRelu",bn="Less",vn="LessEqual",wn="LinSpace",Nn="Log",Sn="Log1p",kn="LogicalAnd",In="LogicalNot",En="LogicalOr",Cn="LogSoftmax",Tn="LRN",Dn="LRNGrad",An="Max",Mn="Maximum",$n="MaxPool",On="MaxPoolGrad",Rn="MaxPool3D",_n="MaxPool3DGrad",Fn="MaxPoolWithArgmax",zn="Mean",Bn="Min",Ln="Minimum",Pn="MirrorPad",Un="Mod",qn="Multinomial",Wn="Multiply",Vn="Neg",jn="NotEqual",Gn="NonMaxSuppressionV3",Hn="NonMaxSuppressionV4",Kn="NonMaxSuppressionV5",Xn="OnesLike",Zn="OneHot",Yn="Pack",Jn="PadV2",Qn="Pool",er="Pow",tr="Prelu",nr="Prod",rr="Range",ar="Real",ir="Reciprocal",sr="Relu",or="Reshape",ur="ResizeNearestNeighbor",cr="ResizeNearestNeighborGrad",lr="ResizeBilinear",pr="ResizeBilinearGrad",dr="Relu6",hr="Reverse",fr="Round",mr="Rsqrt",gr="ScatterNd",yr="Select",xr="Selu",br="Slice",vr="Sin",wr="Sinh",Nr="Sign",Sr="Sigmoid",kr="Softplus",Ir="Sqrt",Er="Sum",Cr="SpaceToBatchND",Tr="SplitV",Dr="Softmax",Ar="SparseFillEmptyRows",Mr="SparseReshape",$r="SparseSegmentMean",Or="SparseSegmentSum",Rr="SparseToDense",_r="SquaredDifference",Fr="Square",zr="StridedSlice",Br="StringNGrams",Lr="StringSplit",Pr="StringToHashBucketFast",Ur="Sub",qr="Tan",Wr="Tanh",Vr="Tile",jr="TopK",Gr="Transform",Hr="Transpose",Kr="Unique",Xr="Unpack",Zr="UnsortedSegmentSum",Yr="ZerosLike",Jr="Step",Qr="FromPixels",ea="RotateWithOffset",ta="_FusedMatMul",na="FusedConv2D",ra="FusedDepthwiseConv2D";function aa(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(...e)}function ia(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.log(...e)}const sa=Ye("kernelRegistry",(()=>new Map)),oa=Ye("gradRegistry",(()=>new Map));function ua(e,t){const n=ga(e,t);return sa.get(n)}function ca(e){return oa.get(e)}function la(e){const t=sa.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,s]=a,[o]=i.split("_");o===e&&n.push(s)}return n}function pa(e){const{kernelName:t,backendName:n}=e,r=ga(t,n);sa.has(r)&&aa(`The kernel '${t}' for backend '${n}' is already registered`),sa.set(r,e)}function da(e){const{kernelName:t}=e;oa.has(t)&&He().getBool("DEBUG")&&aa(`Overriding the gradient for '${t}'`),oa.set(t,e)}function ha(e,t){const n=ga(e,t);if(!sa.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);sa.delete(n)}function fa(e){if(!oa.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);oa.delete(e)}function ma(e,t){la(e).forEach((e=>{pa(Object.assign({},e,{backendName:t}))}))}function ga(e,t){return`${t}_${e}`}var ya=n(720);const xa=n.n(ya)()||ya;function ba(e){return xa.fromString(e,!0,16)}const va=ba("c3a5c85c97cb3127"),wa=ba("b492b66fbe98f273"),Na=ba("9ae16a3b2f90404f");function Sa(e){return e.xor(e.shru(47))}function ka(e,t,n){const r=e.slice(t,t+n);return xa.fromBytes(Array.from(r),!0,!0)}function Ia(e,t){return ka(e,t,8)}function Ea(e,t){return ka(e,t,4)}function Ca(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ta(e,t,n=ba("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Da(e,t,n,r){return function(e,t,n,r,a,i){a=a.add(e),i=Ca(i.add(a).add(r),21);const s=a;return a=(a=a.add(t)).add(n),i=i.add(Ca(a,44)),[a.add(r),i.add(s)]}(Ia(e,t),Ia(e,t+8),Ia(e,t+16),Ia(e,t+24),n,r)}function Aa(e,t=e.length){const n=xa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Na.add(2*t),r=Ia(e,0).add(Na),a=Ia(e,t-8);return Ta(Ca(a,37).mul(n).add(r),Ca(r,25).add(a).mul(n),n)}if(t>=4){const n=Na.add(2*t);return Ta(Ea(e,0).shl(3).add(t),Ea(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Sa(Na.mul(n).xor(va.mul(r))).mul(Na)}return Na}(e,t):function(e,t=e.length){const n=Na.add(2*t),r=Ia(e,0).mul(wa),a=Ia(e,8),i=Ia(e,t-8).mul(n),s=Ia(e,t-16).mul(Na);return Ta(Ca(r.add(a),43).add(Ca(i,30)).add(s),r.add(Ca(a.add(Na),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Na.add(2*t),r=Ia(e,0).mul(Na),a=Ia(e,8),i=Ia(e,t-8).mul(n),s=Ia(e,t-16).mul(Na),o=Ca(r.add(a),43).add(Ca(i,30)).add(s),u=Ta(o,r.add(Ca(a.add(Na),18)).add(i),n),c=Ia(e,16).mul(n),l=Ia(e,24),p=o.add(Ia(e,t-32)).mul(n),d=u.add(Ia(e,t-24)).mul(n);return Ta(Ca(c.add(l),43).add(Ca(p,30)).add(d),c.add(Ca(l.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(wa).add(113),i=Sa(a.mul(Na).add(113)).mul(Na),s=[xa.UZERO,xa.UZERO],o=[xa.UZERO,xa.UZERO];r=r.mul(Na).add(Ia(e,0));let u=0;const c=64*(t-1>>6),l=c+(t-1&63)-63;do{r=Ca(r.add(a).add(s[0]).add(Ia(e,u+8)),37).mul(wa),a=Ca(a.add(s[1]).add(Ia(e,u+48)),42).mul(wa),r=r.xor(o[1]),a=a.add(s[0]).add(Ia(e,u+40)),i=Ca(i.add(o[0]),33).mul(wa),s=Da(e,u,s[1].mul(wa),r.add(o[0])),o=Da(e,u+32,i.add(o[1]),a.add(Ia(e,u+16))),[i,r]=[r,i],u+=64}while(u!==c);const p=wa.add(i.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),r=Ca(r.add(a).add(s[0]).add(Ia(e,u+8)),37).mul(p),a=Ca(a.add(s[1]).add(Ia(e,u+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(s[0].mul(9).add(Ia(e,u+40))),i=Ca(i.add(o[0]),33).mul(p),s=Da(e,u,s[1].mul(p),r.add(o[0])),o=Da(e,u+32,i.add(o[1]),a.add(Ia(e,u+16))),[i,r]=[r,i],Ta(Ta(s[0],o[0],p).add(Sa(a).mul(va)).add(i),Ta(s[1],o[1],p).add(r),p)}function Ma(e,t){return"string"===t?_a(e):$a([e],t)}function $a(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ue(e)),He().getBool("DEBUG")&&Se(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Oa(){return He().platform.now()}function Ra(e,t){return He().platform.fetch(e,t)}function _a(e,t="utf-8"){return t=t||"utf-8",He().platform.encode(e,t)}function Fa(e,t="utf-8"){return t=t||"utf-8",He().platform.decode(e,t)}class za{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new La)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const s=Oa();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:Oa()-s})}if(He().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Ba(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Ba(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class La{logKernelProfile(e,t,n,r,a,i){const s="number"==typeof r?ge(`${r}ms`,9):r.error,o=ge(e,25),u=t.rank,c=t.size,l=ge(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${u}D ${l}\t%c${c}\t%c${p}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Pa(e,t,n,r){const a=_e(t),i=function(e,t,n,r){const a=ce(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?Va(e):e;if(o>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],Ua(u[t+e],0,n).length)}return s}(e,t,n,a),s=t.length,o=Wa(e,t,n,a,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Ua(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:De(e)?`'${e}'`:"bool"===n?qa(e):parseFloat(e.toFixed(7)).toString(),ge(r,t)}function qa(e){return 0===e?"false":"true"}function Wa(e,t,n,r,a,i=!0){const s="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Ua(Va(e)[0],0,n)]:"bool"===n?[qa(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*s;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*s,o*s));return"complex64"===n&&(r=Va(r),i=Va(i)),["["+r.map(((e,t)=>Ua(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>Ua(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Va(e):Array.from(e)).map(((e,t)=>Ua(e,a[t],n))).join(", ")+"]"]}const c=t.slice(1),l=r.slice(1),p=r[0]*s,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*p,i=r+p;d.push(...Wa(e.slice(r,i),c,n,l,a,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*p,i=r+p;d.push(...Wa(e.slice(r,i),c,n,l,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*p,i=r+p;d.push(...Wa(e.slice(r,i),c,n,l,a,t===o-1))}const h=2===u?",":"";d[0]="["+d[0]+h;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+h;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Va(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ja{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ce(e),null!=n){const e=n.length;ie(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ne(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ga().makeTensor(this.values,this.shape,this.dtype)}}let Ga=null,Ha=null,Ka=null;class Xa{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ce(e),this.strides=_e(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ha.buffer(this.shape,this.dtype,e)}bufferSync(){return Ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ze(this.shape,e,"complex64"===this.dtype)}arraySync(){return ze(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ga().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ga().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ga().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ga().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ga().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ha.print(this,e)}clone(){return this.throwIfDisposed(),Ha.clone(this)}toString(e=!1){return Pa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ha.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ga().makeVariable(this,e,t,n)}}function Za(){return Ye("Tensor",(()=>Xa))}Object.defineProperty(Xa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Za();class Ya extends Xa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!pe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ga().disposeTensor(this),this.dataId=e.dataId,Ga().incRef(this,null)}dispose(){Ga().disposeVariable(this),this.isDisposedInternal=!0}}var Ja,Qa,ei,ti,ni;Object.defineProperty(Ya,Symbol.hasInstance,{value:e=>e instanceof Xa&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ja||(Ja={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Qa||(Qa={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ei||(ei={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ti||(ti={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ni||(ni={}));const ri={float32:ti,int32:Qa,bool:ei,complex64:ni};function ai(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ri[e][t]}function ii(e){return ai(e,"int32")}function si(e,t){if(e.dtype===t.dtype)return[e,t];const n=ai(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function oi(e,t){ie(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ui(e,t){return t.some((t=>t.id===e.id))}function ci(e){const t=[];return li(e,t,new Set),t}function li(e,t,n){if(null==e)return;if(e instanceof Xa)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),li(r,t,n))}}function pi(e){return null!=e.kernelName}class di{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class hi{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new di}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(aa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new za(this.backendInstance),!0}setupRegisteredKernels(){la(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){la(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof X||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,aa(`Initialization of backend ${e} failed`),aa(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return aa(`Initialization of backend ${e} failed`),aa(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return hi.nextTensorId++}nextVariableId(){return hi.nextVariableId++}clone(e){const t=mi.runKernel(dn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return mi.runKernel(wt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ua(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let s,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=pi(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(pi(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const u=ua(t,this.backendName);ie(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const c=s.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:l}=e,p=pi(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,c,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=s()})),r&&this.addTapeNode(u,c,t,p,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=ca(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(ie(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const s=n.filter(((e,t)=>a[t]));return i.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&De(e[0])&&(a=e.map((e=>_a(e))));const i=r.write(a,t,n),s=new Xa(t,n,i,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(i),t=Te(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const a=new Xa(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ya(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ce(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ya||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ce(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ca(e);null!=o&&(r=o.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Le(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ci(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ie(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ie(a instanceof Xa,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],s=i.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Be(ce(e),"float32");return mi.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],s=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(s);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=i.inputs[t];if(!pe(a.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),gi);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return ie(Oe(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ie(t.every((e=>e instanceof Xa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),ie(n.value instanceof Xa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ie(Oe(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];ie(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ie(i.every((e=>e instanceof Xa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Oa(),n=await this.backend.time(e);return n.wallMs=Oa()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new di;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function fi(){const e=Ze();if(null==e._tfengine){const t=new je(e);e._tfengine=new hi(t)}var t;return t=e._tfengine.ENV,Xe=t,Ga=()=>e._tfengine,e._tfengine}hi.nextTensorId=0,hi.nextVariableId=0;const mi=fi();function gi(e,t){const n={a:e,b:t};return mi.runKernel(tt,n)}let yi;function xi(e){yi=e}function bi(e){if(void 0!==yi)return yi;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function vi(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const wi=He();function Ni(e,t){let n=e;if(Ee(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Ee(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&He().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Si(e,r,[]),r}function Si(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ee(e))return void ie(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ie(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ie(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Si(e[t],r,n.concat(t))}function ki(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ii(e,t,n,r="numeric"){if(e instanceof Xa)return ki(r,e.dtype,t,n),e;let a=$e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ki(r,a,t,n),null==e||!Ee(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Ni(e,a);Ee(e)||Array.isArray(e)||(e=[e]);const s="string"!==a?$a(e,a):ue(e,[],!0);return mi.makeTensor(s,i,a)}function Ei(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ii(e,`${t}[${a}]`,n,r)))}wi.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),wi.registerFlag("IS_BROWSER",(()=>vi())),wi.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),wi.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),wi.registerFlag("PROD",(()=>!1)),wi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>wi.getBool("DEBUG"))),wi.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),wi.registerFlag("IS_TEST",(()=>!1)),wi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),wi.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Ci="__op";function Ti(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ci;const a=(...e)=>{mi.startScope(n);try{const t=r(...e);return Ve(t)&&console.error("Cannot return a Promise inside of tidy."),mi.endScope(t),t}catch(e){throw mi.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Di=Ti({complex_:function(e,t){const n=Ii(e,"real","complex"),r=Ii(t,"imag","complex");se(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return mi.runKernel(kt,a)}});function Ai(e,t,n,r){if(null==r&&(r=$e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ee(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ue(t);const e=ce(t),r=ce(n);ie(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==ce(t.slice(e));ie(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ee(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?$a(e,r):ue(e,[],!0),mi.makeTensor(e,t,r)}function Mi(e,t,n){return Ai(e,t,Ni(e,n),n)}const $i={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Oi(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const u={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:_i(await Promise.all(r)),specs:n}}function Ri(e,t){const n={};let r,a=0;for(const i of t){const t=i.name,s=i.dtype,o=i.shape,u=ce(o);let c;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const o=$i[n.dtype],l=e.slice(a,a+u*o),p="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];c[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Wi()),c=r(p)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];c[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===s){const t=ce(i.shape);c=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));c.push(n),a+=t}}else{const r=$i[s],i=e.slice(a,a+u*r);if("float32"===s)c=new Float32Array(i);else if("int32"===s)c=new Int32Array(i);else if("bool"===s)c=new Uint8Array(i);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);{c=new Float32Array(i);const e=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let t=0;t<e.length;t++)e[t]=c[2*t],r[t]=c[2*t+1];const a=Mi(e,o,"float32"),s=Mi(r,o,"float32");n[t]=Di(a,s),a.dispose(),s.dispose()}}a+=u*r}"complex64"!==s&&(n[t]=Mi(c,o,s))}return n}function _i(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Fi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function zi(e){return Fi?Buffer.byteLength(e):new Blob([e]).size}function Bi(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Li(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Pi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ui(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function qi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:zi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:zi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Wi(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),i=new Uint32Array(a);for(let a=0;a<r.length;a++){const s=r[a],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(a)}}class Vi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Vi.instance&&(Vi.instance=new Vi),Vi.instance}static registerSaveRouter(e){Vi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Vi.getInstance().loadRouters:Vi.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const ji=e=>Vi.registerSaveRouter(e),Gi=e=>Vi.registerLoadRouter(e),Hi=e=>Vi.getSaveHandlers(e),Ki=(e,t)=>Vi.getLoadHandlers(e,t),Xi="tensorflowjs",Zi="models_store",Yi="model_info_store";function Ji(){if(!He().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qi(e){const t=e.result;t.createObjectStore(Zi,{keyPath:"modelPath"}),t.createObjectStore(Yi,{keyPath:"modelPath"})}class es{constructor(e){if(this.indexedDB=Ji(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Xi,1);r.onupgradeneeded=()=>Qi(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Zi,"readonly"),r=t.objectStore(Zi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=qi(t),i=a.transaction(Yi,"readwrite");let s=i.objectStore(Yi);const o=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Zi,"readwrite");const o=u.objectStore(Zi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{s=i.objectStore(Yi);const t=s.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}es.URL_SCHEME="indexeddb://";const ts=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(es.URL_SCHEME)?(t=e.slice(es.URL_SCHEME.length),new es(t)):null;var t};Vi.registerSaveRouter(ts),Vi.registerLoadRouter(ts);class ns{constructor(){this.indexedDB=Ji()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Xi,1);n.onupgradeneeded=()=>Qi(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Yi,"readonly"),i=a.objectStore(Yi).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(es.URL_SCHEME)?t.slice(es.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Xi,1);r.onupgradeneeded=()=>Qi(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(Yi,"readwrite"),s=i.objectStore(Yi),o=s.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),i=()=>{u=a.transaction(Zi,"readwrite");const r=u.objectStore(Zi).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const rs="/",as="tensorflowjs_models",is="info",ss="model_topology",os="weight_specs",us="weight_data",cs="model_metadata";function ls(e){return{info:[as,e,is].join(rs),topology:[as,e,ss].join(rs),weightSpecs:[as,e,os].join(rs),weightData:[as,e,us].join(rs),modelMetadata:[as,e,cs].join(rs)}}function ps(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ds(e){const t=e.split(rs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(rs)}class hs{constructor(e){if(!He().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ls(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=qi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Fi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ps(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Fi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}hs.URL_SCHEME="localstorage://";const fs=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hs.URL_SCHEME)?(t=e.slice(hs.URL_SCHEME.length),new hs(t)):null;var t};Vi.registerSaveRouter(fs),Vi.registerLoadRouter(fs);class ms{constructor(){ie(He().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ie("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=as+rs,n=rs+is;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ds(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ls(e=(t=e).startsWith(hs.URL_SCHEME)?t.slice(hs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ps(n),r}}const gs="://";class ys{constructor(){this.managers={}}static getInstance(){return null==ys.instance&&(ys.instance=new ys),ys.instance}static registerManager(e,t){ie(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(gs)&&(e=e.slice(0,e.indexOf(gs))),ie(e.length>0,(()=>"scheme must not be an empty string."));const n=ys.getInstance();ie(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function xs(e){if(-1===e.indexOf(gs))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ys.getSchemes().join(",")}`);return{scheme:e.split(gs)[0],path:e.split(gs)[1]}}async function bs(e,t,n=!1){ie(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Vi.getLoadHandlers(e);ie(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ie(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],i=Vi.getSaveHandlers(t);ie(i.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ie(i.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const s=i[0],o=xs(e).scheme,u=xs(e).path,c=o===xs(e).scheme,l=await a.load();n&&c&&await ys.getManager(o).removeModel(u);const p=await s.save(l);return n&&!c&&await ys.getManager(o).removeModel(u),p.modelArtifactsInfo}async function vs(){const e=ys.getSchemes(),t={};for(const n of e){const e=await ys.getManager(n).listModels();for(const r in e)t[n+gs+r]=e[r]}return t}async function ws(e){const t=xs(e);return ys.getManager(t.scheme).removeModel(t.path)}async function Ns(e,t){return bs(e,t,!1)}async function Ss(e,t){return bs(e,t,!0)}class ks{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(He().get("IS_BROWSER")){He().setPlatform("browser",new ks);try{ys.registerManager(hs.URL_SCHEME,new ms)}catch(e){}try{ys.registerManager(es.URL_SCHEME,new ns)}catch(e){}}let Is;function Es(e,t="float32",n){return t=t||"float32",Ue(e),new ja(e,t,n)}He().get("IS_NODE")&&He().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=He().global.fetch?He().global.fetch(e,t):(null==Is&&(Is=n(410)),Is(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Cs=Ti({cast_:function(e,t){const n=Ii(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return mi.runKernel(wt,r,a)}}),Ts=Ti({clone_:function(e){const t={x:Ii(e,"x","clone","string_or_numeric")};return mi.runKernel(dn,t)}});function Ds(e,t=!1){console.log(e.toString(t))}function As(e){return new Promise((e=>setTimeout(e))).then(e)}fi(),Ha={buffer:Es,cast:Cs,clone:Ts,print:Ds};class Ms{constructor(e){if(!He().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ms.URL_SCHEME)&&(e=e.slice(Ms.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Pi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await As((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await As((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:qi(e)}}}}Ms.URL_SCHEME="downloads://";class $s{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const i=Ui(r,(e=>this.loadWeights(e)));e(i)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Bi(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Li(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Li(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Os(e){return new $s(e)}function Rs(e,t,n,r){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ie(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ie(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ie(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const s=n+ ++a/e.length*(r-n);return t(s),i})),i))))}async function _s(e,t){null==t&&(t={});const n=null==t.fetchFunc?He().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Rs(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Rs(a,t.onProgress,.5,1)}async function Fs(e,t="",n,r){return zs((e=>_s(e,{requestInit:r})))(e,t,n)}function zs(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),i={},s=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=$i[u]*ce(e.shape),l=()=>{a[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),s[n]=!0)})):l(),o.push(e.name),n+=c}))})),!s.every((e=>e))){const e=r.filter(((e,t)=>!s[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),p={};let d=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[d+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[d+e]);s.set(t,o),o+=t.byteLength}i[e].forEach((e=>{const t=Ri(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),d+=n})),p}}Vi.registerSaveRouter((e=>He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ms.URL_SCHEME)?function(e="model"){return new Ms(e)}(e.slice(Ms.URL_SCHEME.length)):null));class Bs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=He().platform.fetch,ie(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ie(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Pi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:qi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ui(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,i=[];for(const t of e)i.push(...t.weights);const s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(o)),[i,Bi(await _s(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ls(e){return null!=e.match(Bs.URL_SCHEME_REGEX)}Bs.URL_SCHEME_REGEX=/^https?:\/\//;const Ps=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ls(e))):Ls(e),n)return Us(e,t)}return null};function Us(e,t){return new Bs(e,t)}function qs(e,t){return Us(e,t)}Vi.registerSaveRouter(Ps),Vi.registerLoadRouter(Ps);class Ws{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Vs{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function js(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ws(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ws({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ws({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Gs(e){return new Vs(e)}const Hs=Ti({matMul_:function(e,t,n=!1,r=!1){let a=Ii(e,"a","matMul"),i=Ii(t,"b","matMul");[a,i]=si(a,i);const s={a,b:i},o={transposeA:n,transposeB:r};return mi.runKernel(gt,s,o)}}),Ks=Ti({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ii(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return mi.runKernel(Zn,a,i)}}),Xs=Ti({transpose_:function(e,t){const n=Ii(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ie(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ie(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return mi.runKernel(Hr,r,a)}}),Zs=Ti({confusionMatrix_:function(e,t,n){const r=Ii(e,"labels","confusionMatrix"),a=Ii(t,"predictions","confusionMatrix");ie(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ie(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ie(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),ie(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),ie(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const i=Ks(Cs(r,"int32"),n),s=Ks(Cs(a,"int32"),n),o=Xs(i),u=Hs(o,s);return Cs(u,"int32")}});function Ys(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function Js(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function Qs(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function eo(e,t,n){if(oe(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ni(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ai(e,t,r,n)}let to;function no(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,i=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=ua(Qr,mi.backendName)){const n={pixels:e},r={numChannels:t};return mi.runKernel(Qr,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,p;if(s)l=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)l=e.data;else if(i||a||o){if(null==to)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");to=new OffscreenCanvas(1,1).getContext("2d")}else to=document.createElement("canvas").getContext("2d");to.canvas.width=u,to.canvas.height=c,to.drawImage(e,0,0,u,c),l=to.getImageData(0,0,u,c).data}if(4===t)p=new Int32Array(l);else{const e=u*c;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=l[4*n+e]}return eo(p,[c,u,t],"int32")}async function ro(e,t=3){let n=null;if(He().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return no(n,t)}async function ao(e,t){let n=Ii(e,"img","toPixels");if(!(e instanceof Xa)){const e=n;n=Cs(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<i;r++){const a=s[e*i+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===i?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const io=Ti({fromPixels_:no});function so(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ce(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const o=e.shape,u=a.slice();u.pop();let c=1;for(let e=i;e<n;++e)c*=o[e],u.push(o[e]);const l=[..._e(e.shape).map((e=>e/c)),1].slice(0,i);return[u,s,c,l]}function oo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function uo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}oo(n,t,e)}function co(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let s=1;for(let e=a;e<i;++e)s*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:ce(t.shape)/o,sliceSize:s,strides:[..._e(n.slice(0,a)),1],outputSize:ce(n)}}function lo(e,t,n){const r=e.shape.length;ie(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ie(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)ie(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function po(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ho(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function fo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function mo(e,t,n){return n<=e?n:n-(t-1)}function go(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function yo(e,t,n,r,a,i,s,o,u){const c=e.length;let l=new Array(c),p=new Array(c),d=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=xo(s,u,c,r,e),p=bo(o,u,c,a,e),d=fo(i,u,c,e)}else for(let t=0;t<c;t++)l[t]=wo(s,r,i,e,t,u),p[t]=No(o,a,i,e,t,u),d[t]=vo(i,t,u);return{begin:l,end:p,strides:d}}function xo(e,t,n,r,a){const i=[...a],s=go(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{const s=mo(t,n,a);let o=r[s];e&1<<s&&(o=0),i[a]=o}return i}function bo(e,t,n,r,a){const i=[...a],s=go(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=mo(t,n,a);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=Q(0,i[e],a[e])}return i}function vo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function wo(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=Q(0,s,u-1),s}function No(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=o>0?Q(0,s,u):Q(-1,s,u-1),s}function So(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ko(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Io(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{ie(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(ie(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function Eo(e,t,n,r,a,i,s,o,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const p={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<p.dims;e++)l&&0!=(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&s&&(l=!0);l||(p.ellipsisMask|=1<<p.dims,p.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,d);let h=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const s=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Co(d.begin[t],0,d.strides[t],r,a,i),d.end[t]=Co(d.end[t],1,d.strides[t],r,a,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;h=h&&e,f=f&&(0===t&&1===d.strides[t]||e)}else h=h&&1===d.strides[t]&&s,f=f&&(0===t&&1===d.strides[t]||s);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):s&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}const x=y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t]));return{finalShapeSparse:x,finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Co(e,t,n,r,a,i){if(a[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}class To{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Do{constructor(){this.classNameMap={}}static getMap(){return null==Do.instance&&(Do.instance=new Do),Do.instance}static register(e){Do.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ao(e){ie(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ie("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ie(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Do.register(e)}const Mo=.1;function $o(e,t,n){return null==n&&(n=Oo()),Ro(e,t,((e,t)=>Bo(e,t,n)))}function Oo(){return 32===mi.backend.floatPrecision()?.001:Mo}function Ro(e,t,n){let r=!0;if((Ee(e)||Ee(t))&&(r=!1),Ee(e)&&Ee(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ni(e),r=Ni(t);if(!pe(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Ee(e)?e:ue(e),i=Ee(t)?t:ue(t);if(a.length!==i.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${i.length}.\nActual:   ${a}.\nExpected: ${i}.`);for(let e=0;e<i.length;++e){const t=a[e],r=i[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${i}.`)}}function _o(e,t){e().then((()=>t.fail()),(()=>t()))}function Fo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return De(e)||De(e[0])||De(t)||De(t[0])?Ro(e,n,((e,t)=>e==t)):Ro(e,t,((e,t)=>Bo(e,t,0)))}function zo(e,t,n){if(null==n&&(n=Oo()),!Bo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Bo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Lo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Po(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Uo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Uo(n):e[t]=_a(n)}return e}const qo="3.13.0";function Wo(){He().set("PROD",!0)}function Vo(){He().set("DEBUG",!0)}function jo(){He().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Go(e){He().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Ho(){mi.disposeVariables()}function Ko(){return mi}function Xo(){return mi.memory()}function Zo(e){return mi.profile(e)}function Yo(e,t){return mi.tidy(e,t)}function Jo(e){ci(e).forEach((e=>e.dispose()))}function Qo(e){return mi.keep(e)}function eu(e){return mi.time(e)}function tu(e){return mi.setBackend(e)}function nu(){return mi.ready()}function ru(){return mi.backendName}function au(e){mi.removeBackend(e)}function iu(e){return mi.findBackend(e)}function su(e){return mi.findBackendFactory(e)}function ou(e,t,n=1){return mi.registerBackend(e,t,n)}function uu(){return mi.backend}function cu(e,t){He().setPlatform(e,t)}Ka=Go;const lu=Ti({add_:function(e,t){let n=Ii(e,"a","add"),r=Ii(t,"b","add");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(tt,a)}}),pu=Ti({floorDiv_:function(e,t){let n=Ii(e,"a","floorDiv"),r=Ii(t,"b","floorDiv");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(sn,a)}}),du=Ti({div_:function(e,t){let n=Ii(e,"a","div"),r=Ii(t,"b","div");if([n,r]=si(n,r),"int32"===n.dtype&&"int32"===r.dtype)return pu(n,r);const a={a:n,b:r};return mi.runKernel(Gt,a,{})}}),hu=Ti({mul_:function(e,t){let n=Ii(e,"a","mul"),r=Ii(t,"b","mul");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(Wn,a)}}),fu=Ti({sqrt_:function(e){const t={x:Ii(e,"x","sqrt","float32")};return mi.runKernel(Ir,t)}}),mu=Ti({square_:function(e){const t=Ii(e,"x","square");return mi.runKernel("Square",{x:t},{})}}),gu=Ti({zerosLike_:function(e){const t={x:Ii(e,"x","zerosLike")};return mi.runKernel(Yr,t)}});function yu(e){return ie(Oe(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ii(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ii(n,"dy","tf.grad"):null;return mi.tidy((()=>{const{value:t,grads:n}=mi.gradients((()=>e(r)),[r],a);return null!=a&&se(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Su(n),n[0]}))}}function xu(e){return ie(Oe(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ie(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ei(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ii(n,"dy","tf.grads"):null;return mi.tidy((()=>{const{value:t,grads:n}=mi.gradients((()=>e(...r)),r,a);return null!=a&&se(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Su(n),n}))}}function bu(e){return ie(Oe(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ie(t instanceof Xa,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ie(null==n||n instanceof Xa,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=mi.gradients((()=>e(t)),[t],n);return Su(r),{grad:r[0],value:a}}}function vu(e){return ie(Oe(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ie(Array.isArray(t)&&t.every((e=>e instanceof Xa)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ie(null==n||n instanceof Xa,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=mi.gradients((()=>e(...t)),t,n);return null!=n&&se(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Su(r.grads),r}}function wu(e,t){ie(Oe(e),(()=>"The f passed in variableGrads(f) must be a function")),ie(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ya)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in mi.registeredVariables)t.push(mi.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),ie(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:i,grads:s}=mi.gradients(e,t,null,!0);ie(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ie(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=s[t]&&(o[e.name]=s[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}function Nu(e){return mi.customGrad(e)}function Su(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function ku(e,t){if((Ee(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ee(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ai(e,[],[],t)}class Iu extends To{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Jo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return wu(e,t)}dispose(){null!=this.iterations_&&Jo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ku(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Iu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Eu extends Iu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=mi.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mi.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Yo((()=>gu(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Yo((()=>gu(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Yo((()=>{const e=lu(hu(i,this.rho),hu(mu(a),1-this.rho)),t=hu(du(fu(lu(s,this.epsilon)),fu(lu(i,this.epsilon))),a),n=lu(hu(s,this.rho),hu(mu(t),1-this.rho));i.assign(e),s.assign(n);const o=lu(hu(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Jo(this.accumulatedGrads.map((e=>e.variable))),Jo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Cu(e,t,n){const r={shape:e,value:t,dtype:n};return mi.runKernel(nn,{},r)}Eu.className="Adadelta",Ao(Eu);class Tu extends Iu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mi.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Yo((()=>Cu(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable;Yo((()=>{const e=lu(i,mu(a));i.assign(e);const t=lu(hu(du(a,fu(lu(e,mi.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Jo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Tu.className="Adagrad",Ao(Tu);const Du=Ti({pow_:function(e,t){let n=Ii(e,"base","pow"),r=Ii(t,"exp","pow");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(er,a)}}),Au=Ti({sub_:function(e,t){let n=Ii(e,"a","sub"),r=Ii(t,"b","sub");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(Ur,a)}});class Mu extends Iu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Yo((()=>{this.accBeta1=ku(t).variable(),this.accBeta2=ku(n).variable()})),null==r&&(this.epsilon=mi.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=Au(1,this.accBeta1),r=Au(1,this.accBeta2);t.forEach(((t,a)=>{const i=mi.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Yo((()=>gu(i).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Yo((()=>gu(i).variable(!1)))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=lu(hu(o,this.beta1),hu(s,1-this.beta1)),l=lu(hu(u,this.beta2),hu(mu(s),1-this.beta2)),p=du(c,n),d=du(l,r);o.assign(c),u.assign(l);const h=lu(hu(du(p,lu(fu(d),this.epsilon)),-this.learningRate),i);i.assign(h)})),this.accBeta1.assign(hu(this.accBeta1,this.beta1)),this.accBeta2.assign(hu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Jo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Jo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Yo((()=>{this.accBeta1.assign(Du(this.beta1,this.iterations_+1)),this.accBeta2.assign(Du(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Mu.className="Adam",Ao(Mu);const $u=Ti({abs_:function(e){const t=Ii(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return mi.runKernel(It,e)}{const e={x:t};return mi.runKernel(Je,e)}}}),Ou=Ti({maximum_:function(e,t){let n=Ii(e,"a","maximum"),r=Ii(t,"b","maximum");[n,r]=si(n,r),"bool"===n.dtype&&(n=Cs(n,"int32"),r=Cs(r,"int32")),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(Mn,a)}});class Ru extends Iu{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Yo((()=>{this.iteration=ku(0).variable(),this.accBeta1=ku(t).variable()})),null==r&&(this.epsilon=mi.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=Au(1,this.accBeta1),r=du(-this.learningRate,lu(hu(this.iteration,this.decay),1));t.forEach(((t,a)=>{const i=mi.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:gu(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:gu(i).variable(!1)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=lu(hu(o,this.beta1),hu(s,1-this.beta1)),l=hu(u,this.beta2),p=$u(s),d=Ou(l,p);o.assign(c),u.assign(d);const h=lu(hu(du(r,n),du(c,lu(d,this.epsilon))),i);i.assign(h)})),this.iteration.assign(lu(this.iteration,1)),this.accBeta1.assign(hu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Jo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Jo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ru.className="Adamax",Ao(Ru);class _u extends Iu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=mi.registeredVariables[t];Yo((()=>{const e=lu(hu(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qo(ku(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}_u.className="SGD",Ao(_u);class Fu extends _u{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ku(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mi.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Yo((()=>gu(r).variable(e)))}}const a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Yo((()=>{let e;const t=lu(hu(this.m,a),i);e=this.useNesterov?lu(hu(this.c,lu(i,hu(t,this.m))),r):lu(hu(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Jo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Fu.className="Momentum",Ao(Fu);class zu extends Iu{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=mi.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mi.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Yo((()=>gu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Yo((()=>gu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Yo((()=>gu(r).variable(a)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Yo((()=>{const e=lu(hu(s,this.decay),hu(mu(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=lu(hu(t,this.decay),hu(i,1-this.decay)),u=du(hu(i,this.learningRate),fu(Au(e,lu(mu(a),this.epsilon)))),c=lu(hu(o,this.momentum),u);s.assign(e),t.assign(a),o.assign(c);const l=Au(r,c);r.assign(l)}else{const e=lu(hu(s,this.decay),hu(mu(i),1-this.decay)),t=lu(hu(o,this.momentum),du(hu(i,this.learningRate),fu(lu(e,this.epsilon))));s.assign(e),o.assign(t);const n=Au(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Jo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Jo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Jo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}zu.className="RMSProp",Ao(zu);class Bu{static sgd(e){return new _u(e)}static momentum(e,t,n=!1){return new Fu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new zu(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Mu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Eu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ru(e,t,n,r,a)}static adagrad(e,t=.1){return new Tu(e,t)}}const Lu=Ti({acos_:function(e){const t={x:Ii(e,"x","acos")};return mi.runKernel(Qe,t)}}),Pu=Ti({acosh_:function(e){const t={x:Ii(e,"x","acosh")};return mi.runKernel(et,t)}}),Uu=Ti({addN_:function(e){ie(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ie(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ii(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!pe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return mi.runKernel(nt,r)}}),qu=Ti({all_:function(e,t=null,n=!1){const r={x:Ii(e,"x","all","bool")},a={axis:t,keepDims:n};return mi.runKernel(rt,r,a)}}),Wu=Ti({any_:function(e,t=null,n=!1){const r={x:Ii(e,"x","any","bool")},a={axis:t,keepDims:n};return mi.runKernel(at,r,a)}}),Vu=Ti({argMax_:function(e,t=0){const n={x:Ii(e,"x","argMax")},r={axis:t};return mi.runKernel(it,n,r)}}),ju=Ti({argMin_:function(e,t=0){const n={x:Ii(e,"x","argMin")},r={axis:t};return mi.runKernel(st,n,r)}}),Gu=Ti({asin_:function(e){const t={x:Ii(e,"x","asin")};return mi.runKernel(ot,t)}}),Hu=Ti({asinh_:function(e){const t={x:Ii(e,"x","asinh")};return mi.runKernel(ut,t)}}),Ku=Ti({atan_:function(e){const t={x:Ii(e,"x","atan")};return mi.runKernel(ct,t)}}),Xu=Ti({atan2_:function(e,t){let n=Ii(e,"a","atan2"),r=Ii(t,"b","atan2");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(pt,a)}}),Zu=Ti({atanh_:function(e){const t={x:Ii(e,"x","atanh")};return mi.runKernel(lt,t)}});function Yu(e,t,n,r,a="NHWC",i){return ec(e,[...t,e[3]],n,i,r,null,null,cc(a))}function Ju(e,t,n,r,a,i,s="channelsLast"){const[o,u]=rc(t);let c;if("channelsLast"===s)c=[o,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);c=[o,u,e[1],e[1]]}return ec(e,c,n,r,a,i,!1,s)}function Qu(e,t,n,r,a,i,s="NDHWC"){const[o,u,c]=ac(t);let l,p;if("NDHWC"===s)p="channelsLast",l=[o,u,c,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);p="channelsFirst",l=[o,u,c,e[1],e[1]]}return tc(e,l,n,r,a,!1,p,i)}function ec(e,t,n,r,a,i,s=!1,o="channelsLast"){let[u,c,l,p]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,c,l]=e}const[d,h,,f]=t,[m,g]=rc(n),[y,x]=rc(r),b=ic(d,y),v=ic(h,x),{padInfo:w,outHeight:N,outWidth:S}=function(e,t,n,r,a,i,s,o,u){let c,l,p;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=nc(e,t,n));const i=e[1];return[sc((e[0]-t+2*r)/n+1,a),sc((i-t+2*r)/n+1,a)]}([t,n],i,r,e,o);l=a[0],p=a[1]}else if("same"===e){l=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+i-t),o=Math.max(0,(p-1)*a+s-n),u=Math.floor(e/2),d=e-u,h=Math.floor(o/2);c={top:u,bottom:d,left:h,right:o-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-i+1)/r),p=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:d,bottom:h,left:f,right:m,type:0===d&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},l=sc((t-i+d+h)/r+1,o),p=sc((n-s+f+m)/a+1,o)}}return{padInfo:c,outHeight:l,outWidth:p}}(a,c,l,m,g,b,v,i,o),k=s?f*p:f;let I;return"channelsFirst"===o?I=[u,k,N,S]:"channelsLast"===o&&(I=[u,N,S,k]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:p,outHeight:N,outWidth:S,outChannels:k,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:x,inShape:e,outShape:I,filterShape:t}}function tc(e,t,n,r,a,i=!1,s="channelsLast",o){let[u,c,l,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,c,l,p,d]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,d,c,l,p]=e}const[h,f,m,,g]=t,[y,x,b]=ac(n),[v,w,N]=ac(r),S=ic(h,v),k=ic(f,w),I=ic(m,N),{padInfo:E,outDepth:C,outHeight:T,outWidth:D}=function(e,t,n,r,a,i,s,o,u,c,l){let p,d,h,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,a,i){null==a&&(a=nc(e,t,r));const s=e[1],o=e[2];return[sc((e[0]-t+2*a)/r+1,i),sc((s-t+2*a)/r+1,i),sc((o-t+2*a)/r+1,i),1]}([t,n,r,1],o,0,a,e,l);d=i[0],h=i[1],f=i[2]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/i),f=Math.ceil(r/s);const e=(d-1)*a+o-t,l=(h-1)*i+u-n,m=(f-1)*s+c-r,g=Math.floor(e/2),y=e-g,x=Math.floor(l/2),b=l-x,v=Math.floor(m/2);p={top:x,bottom:b,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),h=Math.ceil((n-u+1)/i),f=Math.ceil((r-c+1)/s)}return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}(a,c,l,p,y,x,b,S,k,I,o),A=i?g*d:g;let M;return"channelsFirst"===s?M=[u,A,C,T,D]:"channelsLast"===s&&(M=[u,C,T,D,A]),{batchSize:u,dataFormat:s,inDepth:c,inHeight:l,inWidth:p,inChannels:d,outDepth:C,outHeight:T,outWidth:D,outChannels:A,padInfo:E,strideDepth:y,strideHeight:x,strideWidth:b,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:N,inShape:e,outShape:M,filterShape:t}}function nc(e,t,n,r=1){const a=ic(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function rc(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ac(e){return"number"==typeof e?[e,e,e]:e}function ic(e,t){return t<=1?e:e+(e-1)*(t-1)}function sc(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function oc(e){const[t,n,r]=rc(e);return 1===t&&1===n&&1===r}function uc(e,t){return oc(e)||oc(t)}function cc(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function lc(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(de(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ie(de(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const pc=Ti({reshape_:function(e,t){const n={x:Ii(e,"x","reshape","string_or_numeric")},r={shape:t};return mi.runKernel(or,n,r)}}),dc=Ti({avgPool_:function(e,t,n,r,a){const i=Ii(e,"x","avgPool","float32");ie(uc(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=pc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ie(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),lc("avgPool",r,a);const u={x:s},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let l=mi.runKernel(dt,u,c);return l=Cs(l,i.dtype),o?pc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),hc=Ti({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const s=Ii(e,"x","avgPool3d","float32");let o=s,u=!1;4===s.rank&&(u=!0,o=pc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),ie(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),lc("avgPool3d",r,a);const c={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let p=mi.runKernel(ft,c,l);return p=Cs(p,o.dtype),u?pc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),fc=Ti({concat_:function(e,t=0){ie(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ei(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ts(n[0]);const r=n,a={axis:t};return mi.runKernel(Et,r,a)}}),mc=Ti({sigmoid_:function(e){const t={x:Ii(e,"x","sigmoid","float32")};return mi.runKernel(Sr,t)}}),gc=Ti({slice_:function(e,t,n){const r=Ii(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},i={begin:t,size:n};return mi.runKernel(br,a,i)}}),yc=Ti({tanh_:function(e){const t={x:Ii(e,"x","tanh","float32")};return mi.runKernel(Wr,t)}}),xc=Ti({basicLSTMCell_:function(e,t,n,r,a,i){const s=Ii(e,"forgetBias","basicLSTMCell"),o=Ii(t,"lstmKernel","basicLSTMCell"),u=Ii(n,"lstmBias","basicLSTMCell"),c=Ii(r,"data","basicLSTMCell"),l=Ii(a,"c","basicLSTMCell"),p=Ii(i,"h","basicLSTMCell"),d=fc([c,p],1),h=Hs(d,o),f=lu(h,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=gc(f,[0,0],y),b=gc(f,[0,g],y),v=gc(f,[0,2*g],y),w=gc(f,[0,3*g],y),N=lu(hu(mc(x),yc(b)),hu(l,mc(lu(s,v))));return[N,hu(yc(N),mc(w))]}}),bc=Ti({batchToSpaceND_:function(e,t,n){const r=Ii(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));ie(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ie(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ie(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},s={blockShape:t,crops:n};return mi.runKernel(yt,i,s)}}),vc=Ti({batchNorm_:function(e,t,n,r,a,i){null==i&&(i=.001);const s=Ii(e,"x","batchNorm"),o=Ii(t,"mean","batchNorm"),u=Ii(n,"variance","batchNorm");let c,l;null!=a&&(c=Ii(a,"scale","batchNorm")),null!=r&&(l=Ii(r,"offset","batchNorm")),ie(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(e){let t;return t=0===e.rank||1===e.rank?pc(e,[1,1,1,e.size]):2===e.rank?pc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?pc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),d={x:p,scale:c,offset:l,mean:o,variance:u},h={varianceEpsilon:i},f=mi.runKernel(on,d,h);return pc(f,s.shape)}}),wc=Ti({batchNorm2d_:function(e,t,n,r,a,i){const s=Ii(e,"x","batchNorm"),o=Ii(t,"mean","batchNorm"),u=Ii(n,"variance","batchNorm");let c,l;return null!=a&&(c=Ii(a,"scale","batchNorm")),null!=r&&(l=Ii(r,"offset","batchNorm")),ie(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),ie(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ie(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&ie(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),vc(s,o,u,l,c,i)}}),Nc=Ti({batchNorm3d_:function(e,t,n,r,a,i){const s=Ii(e,"x","batchNorm"),o=Ii(t,"mean","batchNorm"),u=Ii(n,"variance","batchNorm");let c,l;return null!=a&&(c=Ii(a,"scale","batchNorm")),null!=r&&(l=Ii(r,"offset","batchNorm")),ie(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),ie(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ie(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&ie(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),vc(s,o,u,l,c,i)}}),Sc=Ti({batchNorm4d_:function(e,t,n,r,a,i){const s=Ii(e,"x","batchNorm"),o=Ii(t,"mean","batchNorm"),u=Ii(n,"variance","batchNorm");let c,l;return null!=a&&(c=Ii(a,"scale","batchNorm")),null!=r&&(l=Ii(r,"offset","batchNorm")),ie(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),ie(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ie(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&ie(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),vc(s,o,u,l,c,i)}}),kc=Ti({bincount_:function(e,t,n){const r=Ii(e,"x","bincount"),a=Ii(t,"weights","bincount");ie("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},s={size:n};return mi.runKernel(xt,i,s)}}),Ic=Ti({broadcastArgs_:function(e,t){const n=Ii(e,"s0","broadcastArgs","int32"),r=Ii(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return mi.runKernel(vt,a)}}),Ec=Ti({broadcastTo_:function(e,t){let n=Ii(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=pc(n,e)}const a=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const s=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===s.length)return Ts(n);const o={x:n},u={reps:i};return mi.runKernel(Vr,o,u)}}),Cc=Ti({ceil_:function(e){const t={x:Ii(e,"x","ceil","float32")};return mi.runKernel(Nt,t)}}),Tc=Ti({clipByValue_:function(e,t,n){const r=Ii(e,"x","clipByValue");ie(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},i={clipValueMin:t,clipValueMax:n};return mi.runKernel(St,a,i)}}),Dc=Ti({concat1d_:function(e){return fc(e,0)}}),Ac=Ti({concat2d_:function(e,t){return fc(e,t)}}),Mc=Ti({concat3d_:function(e,t){return fc(e,t)}}),$c=Ti({concat4d_:function(e,t){return fc(e,t)}}),Oc=Ti({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=Ii(e,"x","conv2d","float32"),u=Ii(t,"filter","conv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=pc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),ie(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),lc("conv2d",r,s);const p="NHWC"===a?c.shape[3]:c.shape[1];ie(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),ie(uc(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=mi.runKernel(Ct,d,h);return l?pc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Rc=Ti({conv1d_:function(e,t,n,r,a="NWC",i=1,s){const o=Ii(e,"x","conv1d"),u=Ii(t,"filter","conv1d");let c=o,l=!1;2===o.rank&&(l=!0,c=pc(o,[1,o.shape[0],o.shape[1]])),ie(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),ie(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),lc("conv1d",r,s),ie(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),ie(uc(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),ie("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const p=pc(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=pc(c,[c.shape[0],1,c.shape[1],c.shape[2]]),h=Oc(d,p,[1,n],r,"NHWC",[1,i],s);return pc(h,l?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),_c=Ti({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",s){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,c=!1;3===t.rank&&(c=!0,u=pc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ie(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),ie(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const l="NHWC"===i?o[3]:o[1],p="NHWC"===i?u.shape[3]:u.shape[1];ie(l===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`)),ie(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),lc("conv2dDerInput",a,s);const d={dy:u,filter:n},h={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=mi.runKernel(Dt,d,h);return c?pc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fc=Ti({conv2dTranspose_:function(e,t,n,r,a,i){const s=Ii(e,"x","conv2dTranspose"),o=Ii(t,"filter","conv2dTranspose");return _c(n,s,o,r,a,"NHWC",i)}}),zc=Ti({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const s=Ii(e,"x","conv3d"),o=Ii(t,"filter","conv3d");let u=s,c=!1;4===s.rank&&(c=!0,u=pc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),ie(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),ie(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ie(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ie(uc(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ie("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const l={x:u,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:i},d=mi.runKernel(At,l,p);return c?pc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Bc=Ti({conv3DBackpropInput_:function(e,t,n,r,a){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=pc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],c=s.shape[4];ie(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),ie(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),ie(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ie(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),ie(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:s,filter:n},p={pad:a,strides:r,inputShape:i},d=mi.runKernel($t,l,p);return o?pc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Lc=Ti({conv3dTranspose_:function(e,t,n,r,a){const i=Ii(e,"x","conv3dTranspose"),s=Ii(t,"filter","conv3dTranspose");return Bc(n,i,s,r,a)}}),Pc=Ti({cos_:function(e){const t={x:Ii(e,"x","cos","float32")};return mi.runKernel(Ot,t)}}),Uc=Ti({cosh_:function(e){const t={x:Ii(e,"x","cosh","float32")};return mi.runKernel(Rt,t)}}),qc=Ti({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ii(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return mi.runKernel(_t,a,i)}}),Wc=Ti({denseBincount_:function(e,t,n,r=!1){const a=Ii(e,"x","denseBincount"),i=Ii(t,"weights","denseBincount");ie("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),ie(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const s={x:a,weights:i},o={size:n,binaryOutput:r};return mi.runKernel(zt,s,o)}}),Vc=Ti({depthToSpace_:function(e,t,n="NHWC"){const r=Ii(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];ie(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ie(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ie(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ie(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return mi.runKernel(Bt,o,u)}}),jc=Ti({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=Ii(e,"x","depthwiseConv2d","float32"),u=Ii(t,"filter","depthwiseConv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=pc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),ie(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),ie(c.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),lc("depthwiseConv2d",r,s);const p={x:c,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},h=mi.runKernel(Lt,p,d);return l?pc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Gc=Ti({diag_:function(e){const t={x:Ii(e,"x","diag")};return mi.runKernel(qt,t)}}),Hc=Ti({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const s=Ii(e,"x","dilation2d"),o=Ii(t,"filter","dilation2d");ie(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),ie(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ie("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=s,c=!1;3===s.rank&&(u=pc(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=!0);const l={x:u,filter:o},p={strides:n,pad:r,dilations:a},d=mi.runKernel(Wt,l,p);return c?pc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Kc=Ti({equal_:function(e,t){let n=Ii(e,"a","equal","string_or_numeric"),r=Ii(t,"b","equal","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(Yt,a)}}),Xc=Ti({where_:function(e,t,n){const r=Ii(t,"a","where"),a=Ii(n,"b","where"),i=Ii(e,"condition","where","bool"),s=Qs(Qs(i.shape,r.shape),a.shape),o={condition:Ec(i,s),t:Ec(r,s),e:Ec(a,s)};return mi.runKernel(yr,o)}}),Zc=Ti({divNoNan_:function(e,t){let n=Ii(e,"a","div"),r=Ii(t,"b","div");[n,r]=si(n,r);const a=du(n,r),i=gu(a),s=Kc(r,i);return Xc(s,i,a)}}),Yc=Ti({dot_:function(e,t){const n=Ii(e,"t1","dot"),r=Ii(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(ie(a===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`)),1===n.rank&&1===r.rank){const e=pc(n,[1,-1]),t=pc(r,[-1,1]),a=Hs(e,t);return pc(a,[])}if(1===n.rank&&2===r.rank){const e=pc(n,[1,-1]),t=pc(r,[r.shape[0],r.shape[1]]),a=Hs(e,t);return pc(a,[a.size])}if(2===n.rank&&1===r.rank){const e=pc(r,[-1,1]),t=Hs(n,e);return pc(t,[t.size])}{const e=pc(r,[r.shape[0],r.shape[1]]);return Hs(n,e)}}}),Jc=Ti({einsum_:function(e,...t){const n=t.map(((e,t)=>Ii(e,`tensors${t}`,"einsum"))),r={equation:e};return mi.runKernel(Ht,n,r)}}),Qc=Ti({elu_:function(e){const t={x:Ii(e,"x","elu","float32")};return mi.runKernel(Kt,t)}}),el=Ti({erf_:function(e){let t=Ii(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Cs(t,"float32"));const n={x:t};return mi.runKernel(Zt,n)}}),tl=Ti({exp_:function(e){const t={x:Ii(e,"x","exp")};return mi.runKernel(Jt,t)}}),nl=Ti({expandDims_:function(e,t=0){const n=Ii(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return mi.runKernel(Qt,r,a)}}),rl=Ti({expm1_:function(e){const t={x:Ii(e,"x","expm1")};return mi.runKernel(en,t)}}),al=Ti({tile_:function(e,t){const n=Ii(e,"x","tile","string_or_numeric");ie(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return mi.runKernel(Vr,r,a)}}),il=Ti({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Es([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);const s=pc(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return al(nl(s,0),[n[0],1,1]);if(2===n.length)return al(nl(nl(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return al(nl(nl(nl(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),sl=Ti({floor_:function(e){const t={x:Ii(e,"x","floor","float32")};return mi.runKernel(an,t)}}),ol=Ti({gather_:function(e,t,n=0,r=0){const a={x:Ii(e,"x","gather"),indices:Ii(t,"indices","gather","int32")},i={axis:n,batchDims:r};return mi.runKernel(un,a,i)}}),ul=Ti({greater_:function(e,t){let n=Ii(e,"a","greater","string_or_numeric"),r=Ii(t,"b","greater","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(ln,a)}}),cl=Ti({greaterEqual_:function(e,t){let n=Ii(e,"a","greaterEqual","string_or_numeric"),r=Ii(t,"b","greaterEqual","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(pn,a)}}),ll=Ti({imag_:function(e){const t={input:Ii(e,"input","imag")};return mi.runKernel(fn,t)}}),pl=Ti({isFinite_:function(e){const t={x:Ii(e,"x","isFinite")};return mi.runKernel(mn,t)}}),dl=Ti({isInf_:function(e){const t={x:Ii(e,"x","isInf")};return mi.runKernel(gn,t)}}),hl=Ti({isNaN_:function(e){const t={x:Ii(e,"x","isNaN")};return mi.runKernel(yn,t)}}),fl=Ti({leakyRelu_:function(e,t=.2){const n={x:Ii(e,"x","leakyRelu")},r={alpha:t};return mi.runKernel(xn,n,r)}}),ml=Ti({less_:function(e,t){let n=Ii(e,"a","less","string_or_numeric"),r=Ii(t,"b","less","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(bn,a)}}),gl=Ti({lessEqual_:function(e,t){let n=Ii(e,"a","lessEqual","string_or_numeric"),r=Ii(t,"b","lessEqual","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(vn,a)}});function yl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return mi.runKernel(wn,{},r)}const xl=Ti({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=Ii(e,"x","localResponseNormalization");ie(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),ie(de(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=pc(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:s},c={depthRadius:t,bias:n,alpha:r,beta:a},l=mi.runKernel(Tn,u,c);return o?pc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),bl=Ti({log_:function(e){const t={x:Ii(e,"x","log","float32")};return mi.runKernel(Nn,t)}}),vl=Ti({log1p_:function(e){const t={x:Ii(e,"x","log1p")};return mi.runKernel(Sn,t)}}),wl=Ti({neg_:function(e){const t={x:Ii(e,"x","neg")};return mi.runKernel(Vn,t)}}),Nl=Ti({softplus_:function(e){const t={x:Ii(e,"x","softplus")};return mi.runKernel(kr,t)}}),Sl=Ti({logSigmoid_:function(e){const t=Ii(e,"x","logSigmoid"),n=Nu((e=>({value:wl(Nl(wl(e))),gradFunc:t=>hu(t,mc(wl(e)))})));return n(t)}}),kl=Ti({max_:function(e,t=null,n=!1){const r={x:Ii(e,"x","max")},a={reductionIndices:t,keepDims:n};return mi.runKernel(An,r,a)}}),Il=Ti({sum_:function(e,t=null,n=!1){let r=Ii(e,"x","sum");"bool"===r.dtype&&(r=Cs(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return mi.runKernel(Er,a,i)}}),El=Ti({logSoftmax_:function(e,t=-1){const n=Ii(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Nu(((e,n)=>{const r=kl(e,t,!0),a=Au(e,r),i=Au(Cs(a,"float32"),bl(Il(tl(a),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[r]=n,a=tl(r);return Au(e,hu(Il(e,t,!0),a))}}}));return r(n)}});function Cl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Tl(e,t,n){const r=e.length+t.length,a=[];let i=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function Dl(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Al(e,t){return Tl(e,t.map((e=>1)),t)}function Ml(e,t,n){ie(Cl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function $l(e,t){if(Cl(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ol(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Rl(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const _l=Ti({logSumExp_:function(e,t=null,n=!1){const r=Ii(e,"x","logSumExp"),a=be(t,r.shape),i=kl(r,a,!0),s=Au(r,i),o=tl(s),u=Il(o,a),c=bl(u),l=lu(pc(i,c.shape),c);if(n){const e=Al(l.shape,a);return pc(l,e)}return l}}),Fl=Ti({logicalAnd_:function(e,t){const n=Ii(e,"a","logicalAnd","bool"),r=Ii(t,"b","logicalAnd","bool");Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(kn,a)}}),zl=Ti({logicalNot_:function(e){const t={x:Ii(e,"x","logicalNot","bool")};return mi.runKernel(In,t)}}),Bl=Ti({logicalOr_:function(e,t){const n=Ii(e,"a","logicalOr","bool"),r=Ii(t,"b","logicalOr","bool");Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(En,a)}}),Ll=Ti({logicalXor_:function(e,t){const n=Ii(e,"a","logicalXor","bool"),r=Ii(t,"b","logicalXor","bool");return Qs(n.shape,r.shape),Fl(Bl(e,t),zl(Fl(e,t)))}}),Pl=Ti({maxPool_:function(e,t,n,r,a){const i=Ii(e,"x","maxPool");let s=i,o=!1;3===i.rank&&(o=!0,s=pc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ie(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),ie(uc(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),lc("maxPool",r,a);const u={x:s},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=mi.runKernel($n,u,c);return o?pc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Ul=Ti({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const s=Ii(e,"x","maxPool3d");let o=s,u=!1;4===s.rank&&(u=!0,o=pc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),ie(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),lc("maxPool3d",r,a);const c={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},p=mi.runKernel(Rn,c,l);return u?pc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ql=Ti({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const i={x:Ii(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=mi.runKernel(Fn,i,s);return{result:o[0],indexes:o[1]}}}),Wl=Ti({mean_:function(e,t=null,n=!1){const r={x:Ii(e,"x","mean")},a={axis:t,keepDims:n};return mi.runKernel(zn,r,a)}});function Vl(e,t="float32"){if("complex64"===t){const t=Vl(e,"float32"),n=Vl(e,"float32");return Di(t,n)}const n=Le(ce(e),t);return mi.makeTensor(n,e,t)}function jl(e,t="float32"){if("complex64"===t){const t=jl(e,"float32"),n=Vl(e,"float32");return Di(t,n)}const n=Be(ce(e),t);return mi.makeTensor(n,e,t)}function Gl(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ii(e,"x","meshgrid",e instanceof Xa?e.dtype:"float32");if(void 0===t)return[r];let a=Ii(t,"y","meshgrid",t instanceof Xa?t.dtype:"float32");const i=ce(r.shape),s=ce(a.shape);return"xy"===n?(r=pc(r,[1,-1]),a=pc(a,[-1,1]),[Hs(jl([s,1],r.dtype),r),Hs(a,jl([1,i],a.dtype))]):(r=pc(r,[-1,1]),a=pc(a,[1,-1]),[Hs(r,jl([1,s],r.dtype)),Hs(jl([i,1],a.dtype),a)])}const Hl=Ti({min_:function(e,t=null,n=!1){const r={x:Ii(e,"x","min")},a={axis:t,keepDims:n};return mi.runKernel(Bn,r,a)}}),Kl=Ti({minimum_:function(e,t){let n=Ii(e,"a","minimum"),r=Ii(t,"b","minimum");[n,r]=si(n,r),"bool"===n.dtype&&(n=Cs(n,"int32"),r=Cs(r,"int32")),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(Ln,a)}}),Xl=Ti({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ii(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ie(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ie(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},s={x:r};return mi.runKernel(Pn,s,i)}}),Zl=Ti({mod_:function(e,t){let n=Ii(e,"a","mod"),r=Ii(t,"b","mod");[n,r]=si(n,r);const a={a:n,b:r};return mi.runKernel(Un,a)}}),Yl=Ti({moments_:function(e,t=null,n=!1){const r=be(t,(e=Ii(e,"x","moments")).shape),a=Wl(e,r,n);let i=a.shape;n||(i=Al(a.shape,r));const s=mu(Au(Cs(e,"float32"),pc(a,i)));return{mean:a,variance:Wl(s,r,n)}}}),Jl=Ti({multiRNNCell_:function(e,t,n,r){const a=Ii(t,"data","multiRNNCell"),i=Ei(n,"c","multiRNNCell"),s=Ei(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,i[t],s[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}}),Ql=Ti({multinomial_:function(e,t,n,r=!1){const a=Ii(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();const o={logits:1===s?pc(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},c=mi.runKernel(qn,o,u);return 1===s?pc(c,[c.size]):c}}),ep=Ti({notEqual_:function(e,t){let n=Ii(e,"a","notEqual","string_or_numeric"),r=Ii(t,"b","notEqual","string_or_numeric");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(jn,a)}}),tp=Ti({onesLike_:function(e){const t={x:Ii(e,"x","onesLike")};return mi.runKernel(Xn,t)}}),np=Ti({outerProduct_:function(e,t){const n=Ii(e,"v1","outerProduct"),r=Ii(t,"v2","outerProduct");ie(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=pc(n,[-1,1]),i=pc(r,[1,-1]);return Hs(a,i)}}),rp=Ti({pad_:function(e,t,n=0){const r=Ii(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return mi.runKernel(Jn,i,a)}}),ap=Ti({pad1d_:function(e,t,n=0){return ie(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),rp(e,[t],n)}}),ip=Ti({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),sp=Ti({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),op=Ti({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),up=Ti({spaceToBatchND_:function(e,t,n){const r=Ii(e,"x","spaceToBatchND");ie(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ie(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ie(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return mi.runKernel(Cr,a,i)}}),cp=Ti({pool_:function(e,t,n,r,a,i,s){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=Ii(e,"x","maxPool");let u=o,c=!1;3===o.rank&&(c=!0,u=pc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(uc(i,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`));const l=Ju(u.shape,t,i,a,r),p=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],i[t]]))}([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];const h=1===p[0]&&1===p[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),i=e.concat(r,a),s=t.map(((e,t)=>(e-i[t]%e)%e)),o=a.map(((e,t)=>e+s[t])),u=t.map(((e,t)=>[r[t],o[t]])),c=t.map(((e,t)=>[0,s[t]]));return[u,c]}([l.inHeight,l.inWidth],p,d),g=h?r:"valid",y=h?u:up(u,p,f),x=("avg"===n?()=>dc(y,t,i,g,s):()=>Pl(y,t,i,g,s))(),b=h?x:bc(x,p,m);return c?pc(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),lp=Ti({prelu_:function(e,t){const n={x:Ii(e,"x","prelu"),alpha:Ii(t,"alpha","prelu")};return mi.runKernel(tr,n)}}),pp=Ti({prod_:function(e,t=null,n=!1){let r=Ii(e,"x","prod");"bool"===r.dtype&&(r=Cs(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return mi.runKernel(nr,a,i)}}),dp=Ti({rand_:function(e,t,n){const r=ce(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return mi.makeTensor(a,e,n)}});var hp=n(129);class fp{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=hp.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class mp{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=hp.alea(a.toString()),this.randn=new fp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),a=this.randu(),a<t||Math.log(a)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class gp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const yp=Ti({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new mp(t,n,r,a),s=Es(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),xp=Ti({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new fp(t,n,r,!1,a),s=Es(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),bp=Ti({randomUniform_:function(e,t=0,n=1,r="float32",a){const i=Es(e,r),s=new gp(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});function vp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return mi.runKernel(rr,{},a)}const wp=Ti({real_:function(e){const t={input:Ii(e,"input","real")};return mi.runKernel(ar,t)}}),Np=Ti({reciprocal_:function(e){const t={x:Ii(e,"x","reciprocal")};return mi.runKernel(ir,t)}}),Sp=Ti({relu_:function(e){const t={x:Ii(e,"x","relu")};return mi.runKernel(sr,t)}}),kp=Ti({relu6_:function(e){const t={x:Ii(e,"x","relu6")};return mi.runKernel(dr,t)}}),Ip=Ti({reverse_:function(e,t){const n={x:Ii(e,"x","reverse")},r={dims:t};return mi.runKernel(hr,n,r)}}),Ep=Ti({reverse1d_:function(e){const t=Ii(e,"x","reverse");return ie(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ip(t,0)}}),Cp=Ti({reverse2d_:function(e,t){const n=Ii(e,"x","reverse");return ie(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ip(n,t)}}),Tp=Ti({reverse3d_:function(e,t){const n=Ii(e,"x","reverse");return ie(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ip(n,t)}}),Dp=Ti({reverse4d_:function(e,t){const n=Ii(e,"x","reverse");return ie(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ip(n,t)}}),Ap=Ti({round_:function(e){const t={x:Ii(e,"x","round")};return mi.runKernel(fr,t)}}),Mp=Ti({rsqrt_:function(e){const t={x:Ii(e,"x","rsqrt","float32")};return mi.runKernel(mr,t)}}),$p=Ti({selu_:function(e){const t={x:Ii(e,"x","selu")};return mi.runKernel(xr,t)}}),Op=Ti({separableConv2d_:function(e,t,n,r,a,i=[1,1],s="NHWC"){const o=Ii(e,"x","separableConv2d"),u=Ii(t,"depthwiseFilter","separableConv2d"),c=Ii(n,"pointwiseFilter","separableConv2d");let l=o,p=!1;if(3===o.rank&&(p=!0,l=pc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),ie(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),ie(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),ie(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const d=u.shape[2],h=u.shape[3];ie(c.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${c.shape[2]}.`));const f=jc(l,u,r,a,s,i),m=Oc(f,c,1,"valid",s);return p?pc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Rp=async function(e,t){const n=Ii(e,"x","setdiff1d"),r=Ii(t,"y","setdiff1d");ie(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ie(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ie(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),i=await r.data(),s=new Set(i);let o=0;for(let e=0;e<a.length;e++)s.has(a[e])||o++;const u=new ja([o],n.dtype),c=new ja([o],"int32");for(let e=0,t=0;e<a.length;e++)s.has(a[e])||(u.values[t]=a[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]},_p=Ti({sign_:function(e){const t={x:Ii(e,"x","sign")};return mi.runKernel(Nr,t)}}),Fp=Ti({sin_:function(e){const t={x:Ii(e,"x","sin","float32")};return mi.runKernel(vr,t)}}),zp=Ti({sinh_:function(e){const t={x:Ii(e,"x","sinh")};return mi.runKernel(wr,t)}}),Bp=Ti({slice1d_:function(e,t,n){const r=Ii(e,"x","slice1d");return ie(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),gc(r,[t],[n])}}),Lp=Ti({slice2d_:function(e,t,n){const r=Ii(e,"x","slice2d");return ie(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),gc(r,t,n)}}),Pp=Ti({slice3d_:function(e,t,n){const r=Ii(e,"x","slice3d");return ie(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),gc(r,t,n)}}),Up=Ti({slice4d_:function(e,t,n){const r=Ii(e,"x","slice4d");return ie(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),gc(r,t,n)}}),qp=Ti({softmax_:function(e,t=-1){const n=Ii(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return mi.runKernel(Dr,r,a)}}),Wp=Ti({fft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return mi.runKernel(tn,t)}}),Vp=Ti({ifft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return mi.runKernel(hn,t)}}),jp=Ti({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=pc(e,[n,t]);r=Vp(a)}else{const a=[n,2*(t-1)],i=pc(wp(e),[n,t]),s=pc(ll(e),[n,t]),o=Ip(gc(i,[0,1],[n,t-2]),1),u=hu(Ip(gc(s,[0,1],[n,t-2]),1),ku(-1)),c=fc([i,o],1),l=fc([s,u],1),p=pc(Di(c,l),[a[0],a[1]]);r=Vp(p)}if(r=wp(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=pc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Gp=Ti({split_:function(e,t,n=0){const r={x:Ii(e,"x","split")},a={numOrSizeSplits:t,axis:n};return mi.runKernel(Tr,r,a)}}),Hp=Ti({rfft_:function(e,t){ie("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,a=gc(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=fc([e,Vl(r)],e.shape.length-1),n=t}else a=e;const i=gu(a),s=pc(Di(a,i),[r,n]),o=Wp(s),u=Math.floor(n/2)+1,c=wp(o),l=ll(o),p=Gp(c,[u,n-u],c.shape.length-1),d=Gp(l,[u,n-u],l.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,pc(Di(p[0],d[0]),h)}}),Kp=Ti({squaredDifference_:function(e,t){let n=Ii(e,"a","squaredDifference"),r=Ii(t,"b","squaredDifference");[n,r]=si(n,r),Qs(n.shape,r.shape);const a={a:n,b:r};return mi.runKernel(_r,a,{})}}),Xp=Ti({squeeze_:function(e,t){const n=Ii(e,"x","squeeze");return pc(n,ve(n.shape,t).newShape)}}),Zp=Ti({stack_:function(e,t=0){const n=Ei(e,"tensors","stack","string_or_numeric");ie(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ie(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return mi.runKernel(Yn,r,a)}}),Yp=Ti({step_:function(e,t=0){const n={x:Ii(e,"x","step")},r={alpha:t};return mi.runKernel(Jr,n,r)}}),Jp=Ti({stridedSlice_:function(e,t,n,r,a=0,i=0,s=0,o=0,u=0){const c={x:Ii(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};return mi.runKernel(zr,c,l)}}),Qp=Ti({tan_:function(e){const t={x:Ii(e,"x","tan","float32")};return mi.runKernel(qr,t)}});function ed(e,t){oe(e);const n=Ni(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ai(e,null,n,t)}function td(e,t,n){if(oe(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ni(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ai(e,t,r,n)}function nd(e,t,n){if(oe(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ni(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ai(e,t,r,n)}function rd(e,t,n){if(oe(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ni(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ai(e,t,r,n)}function ad(e,t,n){if(oe(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ni(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ai(e,t=t||r,r,n)}const id=Ti({topk_:function(e,t=1,n=!0){const r=Ii(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},s={k:t,sorted:n},[o,u]=mi.runKernel(jr,i,s);return{values:o,indices:u}}}),sd=Ti({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new fp(t,n,r,!0,a),s=Es(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),od=Ti({unique_:function(e,t=0){const n=Ii(e,"x","unique","string_or_numeric");ie(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,s]=mi.runKernel(Kr,r,a);return{values:i,indices:s}}}),ud=Ti({unsortedSegmentSum_:function(e,t,n){const r=Ii(e,"x","unsortedSegmentSum"),a=Ii(t,"segmentIds","unsortedSegmentSum","int32");ie(de(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},s={numSegments:n};return mi.runKernel(Zr,i,s)}}),cd=Ti({unstack_:function(e,t=0){const n=Ii(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return mi.runKernel(Xr,r,a)}});function ld(e,t=!0,n,r){return mi.makeVariable(e,t,n,r)}function pd(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Es(e,"int32"),a=Es([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),s=t*e.length;a.values.set(i,s)}return a.toTensor()}const dd=async function(e){const t=Ii(e,"condition","whereAsync","bool"),n=await t.data(),r=pd(t.shape,n);return e!==t&&t.dispose(),r},hd=async function(e,t,n){const r=Ii(e,"tensor","boolMask"),a=Ii(t,"mask","boolMask","bool"),i=null==n?0:n,s=a.rank,o=r.shape;ie(s>0,(()=>"mask cannot be scalar")),se(o.slice(i,i+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=i;e<i+s;e++)u*=o[e];const c=o.slice(0,i).concat([u],o.slice(i+s)),l=pc(r,c),p=pc(a,[-1]),d=await dd(p),h=Xp(d,[1]),f=ol(l,h,i);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),l.dispose(),p.dispose(),d.dispose(),f};function fd(e,t,n=null){if(0===e.rank)return $u(e);if(1!==e.rank&&null===n)return fd(pc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Il($u(e),n);if(t===1/0)return kl($u(e),n);if(t===-1/0)return Hl($u(e),n);if("euclidean"===t||2===t)return fu(Il(Du($u(e),ku(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return kl(Il($u(e),n[0]),n[1]-1);if(t===1/0)return kl(Il($u(e),n[1]),n[0]);if(t===-1/0)return Hl(Il($u(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return fu(Il(mu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const md=Ti({norm_:function(e,t="euclidean",n=null,r=!1){const a=fd(e=Ii(e,"x","norm"),t,n);let i=a.shape;if(r){const t=be(n,e.shape);i=Al(a.shape,t)}return pc(a,i)}}),gd=Ti({movingAverage_:function(e,t,n,r,a=!0){const i=Ii(e,"v","movingAverage"),s=Ii(t,"x","movingAverage"),o=Ii(n,"decay","movingAverage");oi(i,s),ie(pe(i.shape,s.shape),(()=>"Shape mismatch in v and x"));const u=ku(1),c=Au(u,o);let l=hu(Au(s,i),c);if(a){ie(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ii(r,"step","movingAverage");l=du(l,Au(u,Du(o,e)))}return lu(i,l)}}),yd=Ti({scatterND_:function(e,t,n){const r=Ii(e,"indices","scatterND","int32"),a=Ii(t,"updates","scatterND");uo(a,r,n);const i={indices:r,updates:a},s={shape:n};return mi.runKernel(gr,i,s)}}),xd=Ti({sparseToDense_:function(e,t,n,r=0){const a=Ii(e,"sparseIndices","sparseToDense","int32"),i=Ii(t,"sparseValues","sparseToDense"),s=Ii(r,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,s);const o={sparseIndices:a,sparseValues:i,defaultValue:s},u={outputShape:n};return mi.runKernel(Rr,o,u)}}),bd=Ti({gatherND_:function(e,t){const n=Ii(t,"indices","gatherND","int32"),r={params:Ii(e,"x","gatherND","string_or_numeric"),indices:n};return mi.runKernel(cn,r)}}),vd=Ti({dropout_:function(e,t,n,r){const a=Ii(e,"x","dropout");if(ie("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),ie(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Xa?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(pe(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=du(sl(lu(bp(i,0,1,"float32",r),s)),s);return hu(a,o)}});function wd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Nd(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let i=0;i<e;++i){const s=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(s)}return ed(a,"float32")}const Sd=async function(e,t,n=1){const r=Ii(e,"predictions","inTopK"),a=Ii(t,"targets","inTopK");ie(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ie(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),se(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];ie(n>0&&n<=i,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`));const s=await r.data(),o=await a.data(),[u,c]=[s.length/i,i],l=we("bool",u);for(let e=0;e<u;e++){const t=e*c,r=s.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Mi(l,a.shape,"bool")},kd=Ti({conv2DBackpropFilter_:function(e,t,n,r,a,i="NHWC",s){let o=e;3===e.rank&&(o=pc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=pc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ie(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),ie(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===i?o.shape[3]:o.shape[1],l="NHWC"===i?u.shape[3]:u.shape[1];ie(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),ie(l===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`)),lc("conv2dDerFilter",a,s);const p={x:o,dy:u},d={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:n};return mi.runKernel(Tt,p,d)}});function Id(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return hu(e,Yp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ed(e,t){let n=t;const r=Js(e.shape,t.shape);return r.length>0&&(n=Il(n,r)),pc(n,e.shape)}function Cd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Sp(e);if("elu"===t)return Qc(e);if("relu6"===t)return kp(e);if("prelu"===t)return lp(e,n);if("leakyrelu"===t)return fl(e,r);if("sigmoid"===t)return mc(e);throw new Error(`Unknown fused activation ${t}.`)}const Td=(e,t)=>!(e>0)||"linear"===t,Dd=Ti({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===Td(mi.state.gradientDepth,u)){let p=Oc(e,t,n,r,a,i,s);return null!=o&&(p=lu(p,o)),Cd(p,u,c,l)}const p=Ii(e,"x","conv2d","float32"),d=Ii(t,"filter","conv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=pc(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ie(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),ie(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),lc("fused conv2d",r,s),ie(h.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),ie(uc(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ie("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=ec(h.shape,d.shape,n,i,r,s);let g,y;null!=o&&(g=Ii(o,"bias","fused conv2d"),[g]=si(g,p),Qs(m.outShape,g.shape)),null!=c&&(y=Ii(c,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,s,o,c]=t,l=Id(e,o,u);ie(oc(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const p=[_c(s.shape,l,a,n,r),kd(s,l,a.shape,n,r)];if(null!=c){const e=Ed(c,l);p.push(e)}return p},b={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:l};if(null==o){const e=Nu(((e,t,n)=>{let r=mi.runKernel(na,b,v);return n([t,e,r]),f&&(r=pc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(h,d)}{const e=Nu(((e,t,n,r)=>{let a=mi.runKernel(na,b,v);return r([t,e,a,n]),f&&(a=pc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(h,d,g)}}}),Ad=Ti({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],s){let o=e;3===e.rank&&(o=pc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=pc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:o,dy:u},l={strides:r,pad:a,dimRoundingMode:s,dilations:i,filterShape:n};return mi.runKernel(Pt,c,l)}}),Md=Ti({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],s){let o=t,u=!1;3===t.rank&&(u=!0,o=pc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:o,filter:n},l={strides:r,pad:a,dimRoundingMode:s,dilations:i,inputShape:e},p=mi.runKernel(Ut,c,l);return u?pc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),$d=Ti({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===Td(mi.state.gradientDepth,u)){let p=jc(e,t,n,r,a,i,s);return null!=o&&(p=lu(p,o)),Cd(p,u,c,l)}const p=Ii(e,"x","depthwiseConv2d","float32"),d=Ii(t,"filter","depthwiseConv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=pc(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ie(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),ie(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ie(h.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),ie(uc(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),lc("fused depthwiseConv2d",r,s);const m=ec(h.shape,d.shape,n,i,r,s,!0);let g,y;null!=o&&(g=Ii(o,"bias","fused conv2d"),[g]=si(g,p),Qs(m.outShape,g.shape)),null!=c&&(y=Ii(c,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{ie(oc(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[a,o,c,l]=t,p=Id(e,c,u),d=Md(o.shape,p,a,n,r,i,s),h=Ad(o,p,a.shape,n,r,i,s);return null!=l?[d,h,Ed(g,p)]:[d,h]},b={x:h,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:l};if(null==o){const e=Nu(((e,t,n)=>{let r=mi.runKernel(ra,b,v);return n([t,e,r]),f&&(r=pc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(h,d)}{const e=Nu(((e,t,n,r)=>{let a=mi.runKernel(ra,b,v);return r([t,e,a,n]),f&&(a=pc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(h,d,g)}}}),Od=Ti({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o}){if(!1===Td(mi.state.gradientDepth,i)){let u=Hs(e,t,n,r);return null!=a&&(u=lu(u,a)),Cd(u,i,s,o)}let u=Ii(e,"a","fused matMul"),c=Ii(t,"b","fused matMul");[u,c]=si(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=ce(f),y=ce(m);ie(l===p,(()=>`Error in fused matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=Qs(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,h]),b=pc(u,n?[g,l,d]:[g,d,l]),v=pc(c,r?[y,h,p]:[y,p,h]);let w,N;null!=a&&(w=Ii(a,"bias","fused matMul"),[w]=si(w,u),Qs(x,w.shape)),null!=s&&(N=Ii(s,"prelu weights","fused matMul"));const S=(e,t)=>{const[s,o,u,c]=t,l=Id(pc(e,u.shape),u,i);let p,d;return n||r?!n&&r?(p=Hs(l,o,!1,!1),d=Hs(l,s,!0,!1)):n&&!r?(p=Hs(o,l,!1,!0),d=Hs(s,l,!1,!1)):(p=Hs(o,l,!0,!0),d=Hs(l,s,!0,!0)):(p=Hs(l,o,!1,!0),d=Hs(s,l,!0,!1)),null!=a?[p,d,Ed(c,l)]:[p,d]},k={a:b,b:v,bias:w,preluActivationWeights:N},I={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==a){const e=Nu(((e,t,n)=>{const r=mi.runKernel(ta,k,I);return n([e,t,r]),{value:pc(r,x),gradFunc:S}}));return e(b,v)}{const e=Nu(((e,t,n,r)=>{const a=mi.runKernel(ta,k,I);return r([e,t,a,n]),{value:pc(a,x),gradFunc:S}}));return e(b,v,w)}}}),Rd=Ti({hammingWindow_:function(e){return Nd(e,.54,.46)}}),_d=Ti({hannWindow_:function(e){return Nd(e,.5,.5)}}),Fd=Ti({frame_:function(e,t,n,r=!1,a=0){let i=0;const s=[];for(;i+t<=e.size;)s.push(gc(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,o=fc([gc(e,i,t-r),Cu([r],a)]);s.push(o),i+=n}return 0===s.length?td([],[0,t]):pc(fc(s),[s.length,t])}}),zd=Ti({stft_:function(e,t,n,r,a=_d){null==r&&(r=wd(t));const i=Fd(e,t,n),s=hu(i,a(t));return Hp(s,r)}}),Bd=Ti({cropAndResize_:function(e,t,n,r,a="bilinear",i=0){const s=Ii(e,"image","cropAndResize"),o=Ii(t,"boxes","cropAndResize","float32"),u=Ii(n,"boxInd","cropAndResize","int32"),c=o.shape[0];ie(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),ie(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),ie(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),ie(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ie(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ie("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:s,boxes:o,boxInd:u},p={method:a,extrapolationValue:i,cropSize:r};return mi.runKernel(Ft,l,p)}}),Ld=Ti({flipLeftRight_:function(e){const t=Ii(e,"image","flipLeftRight","float32");ie(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return mi.runKernel(rn,n,{})}}),Pd=Ti({grayscaleToRGB_:function(e){const t=Ii(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ie(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,al(t,a)}}),Ud=Ti({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ii(e,"image","rotateWithOffset","float32");ie(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},s={radians:t,fillValue:n,center:r};return mi.runKernel(ea,i,s)}});function qd(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const s=e.shape[0];return n=Math.min(n,s),ie(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ie(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ie(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ie(1===t.rank,(()=>"scores must be a 1D tensor")),ie(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),ie(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}const Wd=Ti({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Ii(e,"boxes","nonMaxSuppression","float32"),s=Ii(t,"scores","nonMaxSuppression","float32"),o=qd(i,s,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return mi.runKernel(Gn,{boxes:i,scores:s},u)}});function Vd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,s=!1;for(;r<a;){i=r+(a-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}(e,t,n||jd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function jd(e,t){return e>t?1:e<t?-1:0}function Gd(e,t,n,r,a){return Xd(e,t,n,r,a,0)}function Hd(e,t,n,r,a,i){return Xd(e,t,n,r,a,0,!1,i,!0)}function Kd(e,t,n,r,a,i){return Xd(e,t,n,r,a,i,!0)}function Xd(e,t,n,r,a,i,s=!1,o=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>a&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Jd);const l=i>0?-.5/i:0,p=[],d=[];for(;p.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=s;--n){const s=Zd(e,i,p[n]);if(s>=r){o=!0;break}if(t.score=t.score*Yd(r,l,s),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(i),d.push(t.score)):t.score>a&&Vd(c,t,Jd))}const h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:p};return s&&(m.selectedScores=d),u&&(m.validOutputs=h),m}function Zd(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),h=(o-i)*(u-s),f=(p-c)*(d-l);if(h<=0||f<=0)return 0;const m=Math.max(i,c),g=Math.max(s,l),y=Math.min(o,p),x=Math.min(u,d),b=Math.max(y-m,0)*Math.max(x-g,0);return b/(h+f-b)}function Yd(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Jd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Qd=Ti({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=Ii(e,"boxes","nonMaxSuppression"),o=Ii(t,"scores","nonMaxSuppression"),u=qd(s,o,n,r,a,i),c={boxes:s,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},p=mi.runKernel(Kn,c,l);return{selectedIndices:p[0],selectedScores:p[1]}}}),eh=Ti({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=Ii(e,"boxes","nonMaxSuppression"),o=Ii(t,"scores","nonMaxSuppression"),u=qd(s,o,n,r,a,null),c={boxes:s,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},p=mi.runKernel(Hn,c,l);return{selectedIndices:p[0],validOutputs:p[1]}}}),th=Ti({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ii(e,"images","resizeBilinear");ie(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),ie(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ie(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=pc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},c=mi.runKernel(lr,o,u);return s?pc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),nh=Ti({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ii(e,"images","resizeNearestNeighbor");ie(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),ie(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ie("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ie(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=pc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},c=mi.runKernel(ur,o,u);return s?pc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),rh=Ti({threshold_:function(e,t="binary",n=!1,r=.5){const a=Ii(e,"image","threshold"),i=a.shape[0]*a.shape[1];let s,o,u,c,l=hu(ed([r]),255);if(ie(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),ie(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),ie("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),ie("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[s,o,u]=Gp(a,[1,1,1],-1);const e=hu(s,.2989),t=hu(o,.587),n=hu(u,.114);c=lu(lu(e,t),n)}else c=e;"otsu"===t&&(l=function(e,t){let n,r,a,i,s,o,u=ed([-1]),c=ed([0]),l=ed([0]);for(let p=0;p<e.size-1;p++){n=gc(e,0,p+1),r=gc(e,p+1),s=du(Il(n),t),o=du(Il(r),t);const d=Il(hu(n,vp(0,n.size)));a=du(d,Il(n));const h=Cu(r.shape,n.size),f=lu(vp(0,r.size),h),m=hu(r,f);i=du(Il(m),Il(r));const g=Au(a,i),y=Au(a,i),x=hu(s,o);l=hu(hu(x,g),y);const b=ul(l,c);c=Xc(b,l,c),u=Xc(b,ed([p]),u)}return u}(kc(Cs(Ap(c),"int32"),Mi([]),256),i));const p=n?gl(c,l):ul(c,l);return Cs(hu(p,255),"int32")}}),ah=Ti({transform_:function(e,t,n="nearest",r="constant",a=0,i){const s=Ii(e,"image","transform","float32"),o=Ii(t,"transforms","transform","float32");ie(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),ie(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ie(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:s,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return mi.runKernel(Gr,u,c)}}),ih=Ti({bandPart_:function(e,t,n){ie(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ie(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ii(e,"a","bandPart");ie(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,s]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=i),n<0&&(n=s);const o=pc(vp(0,i,1,"int32"),[-1,1]),u=vp(0,s,1,"int32"),c=Au(o,u),l=Fl(gl(c,ku(+t,"int32")),cl(c,ku(-n,"int32"))),p=Vl([i,s],r.dtype);return pc(Zp(cd(pc(r,[-1,i,s])).map((e=>Xc(l,e,p)))),a)}}),sh=Ti({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Gp(e,e.shape[0],0).map((e=>Xp(e,[0])));ie(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(mi.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=hu(Il(hu(n[r],e)),n[r]);e=Au(e,t)}return du(e,md(e,"euclidean"))})));return t?Zp(n,0):n}});function oh(e,t=!1){return mi.tidy((()=>{ie(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=il(n),i=Ts(e);const s=td([[1]],[1,1]);let o=Ts(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,c=a;[o,i,a]=mi.tidy((()=>{const t=gc(i,[e,e],[n-e,1]),u=md(t),c=gc(i,[e,e],[1,1]),l=Xc(ul(c,0),td([[-1]]),td([[1]])),p=Au(c,hu(l,u)),d=du(t,p);o=1===d.shape[0]?Ts(s):fc([s,gc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=wl(du(Hs(l,p),u)),f=gc(i,[e,0],[n-e,r]),m=hu(h,o),g=Xs(o);if(0===e)i=Au(f,Hs(m,Hs(g,f)));else{const t=Au(f,Hs(m,Hs(g,f)));i=fc([gc(i,[0,0],[e,r]),t],0)}const y=Xs(m),x=gc(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Au(x,Hs(Hs(x,o),y));else{const t=Au(x,Hs(Hs(x,o),y));a=fc([gc(a,[0,0],[n,e]),t],1)}return[o,i,a]})),Jo([t,u,c])}return!t&&n>r&&(a=gc(a,[0,0],[n,r]),i=gc(i,[0,0],[r,r])),[a,i]}))}const uh=Ti({qr_:function(e,t=!1){if(ie(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return oh(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=cd(pc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return r.forEach((e=>{const[n,r]=oh(e,t);a.push(n),i.push(r)})),[pc(Zp(a,0),e.shape),pc(Zp(i,0),e.shape)]}}});var ch;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ch||(ch={}));const lh=Ti({computeWeightedLoss_:function(e,t,n=ch.SUM_BY_NONZERO_WEIGHTS){const r=Ii(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ii(t,"weights","computeWeightedLoss"));const i=null==a?r:hu(r,a);if(n===ch.NONE)return i;if(n===ch.SUM)return Il(i);if(n===ch.MEAN){if(null==a)return Wl(i);{const e=r.size/a.size,t=du(Il(i),Il(a));return e>1?du(t,ku(e)):t}}if(n===ch.SUM_BY_NONZERO_WEIGHTS){if(null==a)return du(Il(i),ku(r.size));{const e=hu(a,jl(r.shape)),t=Cs(Il(ep(e,ku(0))),"float32");return du(Il(i),t)}}throw Error(`Unknown reduction: ${n}`)}}),ph=Ti({absoluteDifference_:function(e,t,n,r=ch.SUM_BY_NONZERO_WEIGHTS){const a=Ii(e,"labels","absoluteDifference"),i=Ii(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=Ii(n,"weights","absoluteDifference")),se(a.shape,i.shape,"Error in absoluteDifference: ");const o=$u(Au(a,i));return lh(o,s,r)}}),dh=Ti({cosineDistance_:function(e,t,n,r,a=ch.SUM_BY_NONZERO_WEIGHTS){const i=Ii(e,"labels","cosineDistance"),s=Ii(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ii(r,"weights","cosineDistance")),se(i.shape,s.shape,"Error in cosineDistance: ");const u=ku(1),c=Au(u,Il(hu(i,s),n,!0));return lh(c,o,a)}}),hh=Ti({hingeLoss_:function(e,t,n,r=ch.SUM_BY_NONZERO_WEIGHTS){let a=Ii(e,"labels","hingeLoss");const i=Ii(t,"predictions","hingeLoss");let s=null;null!=n&&(s=Ii(n,"weights","hingeLoss")),se(a.shape,i.shape,"Error in hingeLoss: ");const o=ku(1);a=Au(hu(ku(2),a),o);const u=Sp(Au(o,hu(a,i)));return lh(u,s,r)}}),fh=Ti({huberLoss_:function(e,t,n,r=1,a=ch.SUM_BY_NONZERO_WEIGHTS){const i=Ii(e,"labels","huberLoss"),s=Ii(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ii(n,"weights","huberLoss")),se(i.shape,s.shape,"Error in huberLoss: ");const u=ku(r),c=$u(Au(s,i)),l=Kl(c,u),p=Au(c,l),d=lu(hu(ku(.5),mu(l)),hu(u,p));return lh(d,o,a)}}),mh=Ti({logLoss_:function(e,t,n,r=1e-7,a=ch.SUM_BY_NONZERO_WEIGHTS){const i=Ii(e,"labels","logLoss"),s=Ii(t,"predictions","logLoss");let o=null;null!=n&&(o=Ii(n,"weights","logLoss")),se(i.shape,s.shape,"Error in logLoss: ");const u=ku(1),c=ku(r),l=wl(hu(i,bl(lu(s,c)))),p=hu(Au(u,i),bl(lu(Au(u,s),c))),d=Au(l,p);return lh(d,o,a)}}),gh=Ti({meanSquaredError_:function(e,t,n,r=ch.SUM_BY_NONZERO_WEIGHTS){const a=Ii(e,"labels","meanSquaredError"),i=Ii(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=Ii(n,"weights","meanSquaredError")),se(a.shape,i.shape,"Error in meanSquaredError: ");const o=Kp(a,i);return lh(o,s,r)}}),yh=Ti({sigmoidCrossEntropy_:function(e,t,n,r=0,a=ch.SUM_BY_NONZERO_WEIGHTS){let i=Ii(e,"multiClassLabels","sigmoidCrossEntropy");const s=Ii(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ii(n,"weights","sigmoidCrossEntropy")),se(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ku(r),t=ku(1),n=ku(.5);i=lu(hu(i,Au(t,e)),hu(n,e))}const u=function(e,t){const n=Ii(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ii(t,"logits","sigmoidCrossEntropyWithLogits");se(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Sp(r),i=hu(r,n),s=vl(tl(wl($u(r))));return lu(Au(a,i),s)}(i,s);return lh(u,o,a)}}),xh=Ti({softmaxCrossEntropy_:function(e,t,n,r=0,a=ch.SUM_BY_NONZERO_WEIGHTS){let i=Ii(e,"onehotLabels","softmaxCrossEntropy");const s=Ii(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ii(n,"weights","softmaxCrossEntropy")),se(i.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ku(r),t=ku(1),n=ku(i.shape[1]);i=lu(hu(i,Au(t,e)),du(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Nu(((e,t,r)=>{const a=_l(t,[n],!0),i=Au(Cs(t,"float32"),a);r([e,i]);const s=wl(hu(i,e));return{value:Il(s,[n]),gradFunc:(e,t)=>{const[r,a]=t,i=Al(e.shape,[n]);return[hu(pc(e,i),Au(Cs(r,"float32"),tl(a))),hu(pc(e,i),Au(tl(a),Cs(r,"float32")))]}}}));return r(e,t)}(i,s);return lh(u,o,a)}}),bh=Ti({sparseFillEmptyRows_:function(e,t,n,r){const a=Ii(e,"indices","sparseFillEmptyRows","int32"),i=Ii(t,"values","sparseFillEmptyRows"),s=Ii(n,"denseShape","sparseFillEmptyRows","int32"),o=Ii(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==s.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:i,denseShape:s,defaultValue:o},c=mi.runKernel(Ar,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}}),vh=Ti({sparseReshape_:function(e,t,n){const r=Ii(e,"inputIndices","sparseReshape","int32"),a=Ii(t,"inputShape","sparseReshape","int32"),i=Ii(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const s={inputIndices:r,inputShape:a,newShape:i},o=mi.runKernel(Mr,s);return{outputIndices:o[0],outputShape:o[1]}}}),wh=Ti({sparseSegmentMean_:function(e,t,n){const r=Ii(e,"data","sparseSegmentMean"),a=Ii(t,"indices","sparseSegmentMean","int32"),i=Ii(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const s={data:r,indices:a,segmentIds:i};return mi.runKernel($r,s)}}),Nh=Ti({sparseSegmentSum_:function(e,t,n){const r=Ii(e,"data","sparseSegmentSum"),a=Ii(t,"indices","sparseSegmentSum","int32"),i=Ii(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const s={data:r,indices:a,segmentIds:i};return mi.runKernel(Or,s)}}),Sh=Ti({stringNGrams_:function(e,t,n,r,a,i,s,o){const u=Ii(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Ii(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:i,padWidth:s,preserveShortSequences:o},p={data:u,dataSplits:c},d=mi.runKernel(Br,p,l);return{nGrams:d[0],nGramsSplits:d[1]}}}),kh=Ti({stringSplit_:function(e,t,n=!0){const r=Ii(e,"input","stringSplit","string"),a=Ii(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const i={skipEmpty:n},s={input:r,delimiter:a},o=mi.runKernel(Lr,s,i);return{indices:o[0],values:o[1],shape:o[2]}}}),Ih=Ti({stringToHashBucketFast_:function(e,t){const n=Ii(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return mi.runKernel(Pr,a,r)}}),Eh={fft:Wp,ifft:Vp,rfft:Hp,irfft:jp},Ch={hammingWindow:Rd,hannWindow:_d,frame:Fd,stft:zd},Th={flipLeftRight:Ld,grayscaleToRGB:Pd,resizeNearestNeighbor:nh,resizeBilinear:th,rotateWithOffset:Ud,cropAndResize:Bd,nonMaxSuppression:Wd,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Ii(e,"boxes","nonMaxSuppressionAsync"),s=Ii(t,"scores","nonMaxSuppressionAsync"),o=qd(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([i.data(),s.data()]),c=u[0],l=u[1],{selectedIndices:p}=Gd(c,l,n,r,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),ed(p,"int32")},nonMaxSuppressionWithScore:Qd,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=Ii(e,"boxes","nonMaxSuppressionAsync"),o=Ii(t,"scores","nonMaxSuppressionAsync"),u=qd(s,o,n,r,a,i);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;const c=await Promise.all([s.data(),o.data()]),l=c[0],p=c[1],{selectedIndices:d,selectedScores:h}=Kd(l,p,n,r,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:ed(d,"int32"),selectedScores:ed(h)}},nonMaxSuppressionPadded:eh,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=Ii(e,"boxes","nonMaxSuppressionAsync"),o=Ii(t,"scores","nonMaxSuppressionAsync"),u=qd(s,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Hd(d,h,c,l,p,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:ed(f,"int32"),validOutputs:ku(m,"int32")}},threshold:rh,transform:ah},Dh={bandPart:ih,gramSchmidt:sh,qr:uh},Ah={absoluteDifference:ph,computeWeightedLoss:lh,cosineDistance:dh,hingeLoss:hh,huberLoss:fh,logLoss:mh,meanSquaredError:gh,sigmoidCrossEntropy:yh,softmaxCrossEntropy:xh},Mh={sparseFillEmptyRows:bh,sparseReshape:vh,sparseSegmentMean:wh,sparseSegmentSum:Nh},$h={stringNGrams:Sh,stringSplit:kh,stringToHashBucketFast:Ih},Oh={sgd:Bu.sgd,momentum:Bu.momentum,adadelta:Bu.adadelta,adagrad:Bu.adagrad,rmsprop:Bu.rmsprop,adamax:Bu.adamax,adam:Bu.adam},Rh="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function _h(){return new Promise((e=>Rh((()=>e()))))}function Fh(e,t){const n=e[0].length;e.forEach(((e,t)=>{ie(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ie(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)ie(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function zh(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Bh=30;function Lh(e){return e<=Bh?e:Re(e,Math.floor(Math.sqrt(e)))}function Ph(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Uh(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function qh(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Wh(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Vh(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function jh(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Gh=1.7580993408473768,Hh=1.0507009873554805,Kh=.3275911,Xh=.254829592,Zh=-.284496736,Yh=1.421413741,Jh=-1.453152027,Qh=1.061405429;function ef(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function tf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function nf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function rf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function af(e,t){return{real:e[2*t],imag:e[2*t+1]}}function sf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function of(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function uf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const cf=/->/g;function lf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(cf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");ie(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=r.split(","),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}const c=o.length,l=[];for(let e=a.length;e<c;++e)l.push(e);return{allDims:o,summedDims:l,idDims:u}}function pf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function df(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:ie(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function hf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const a=mf(t,n[e]);for(const t of a)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function ff(e){return e.every(((e,t)=>e===t))}function mf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function gf(e,t,n=0){let r=[];if("number"==typeof t)ie(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ie(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}ie(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function yf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function xf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function vf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wf(e,t){return`size ${e} must be non-negative, not ${t}`}function Nf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Sf(e,t){return`Input to reshape is a SparseTensor with ${ce(e)}\n  dense values, but the requested shape requires a multiple of ${ce(t)}. inputShape=${e} outputShape= ${t}`}function kf(e,t){return`Input to reshape is a tensor with ${ce(e)} dense values, but the requested shape has ${ce(t)}. inputShape=${e} outputShape=${t}`}function If(){return"segment ids must be >= 0"}function Ef(){return"segment ids are not increasing"}function Cf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Tf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Df(e,t){let n,r=!1;for(e<=Bh?(n=e,r=!0):n=Re(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Re(e,n+1);return n}function Af(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function Mf(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:s,outputShape:o}}function $f(e){try{return e.map((e=>Fa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Of(e){return e.map((e=>_a(e)))}const Rf={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Yp(Cs(n,"float32"),-1))}}},_f={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=mu(Cs(n,"float32")),r=fu(Au(ku(1),t));return wl(du(e,r))}}}},Ff={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fu(Au(mu(Cs(n,"float32")),1));return du(e,t)}}}},zf={kernelName:tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{let t=e;const r=Js(n.shape,a);return r.length>0&&(t=Il(t,r)),pc(t,n.shape)},b:()=>{let t=e;const n=Js(r.shape,a);return n.length>0&&(t=Il(t,n)),pc(t,r.shape)}}}},Bf={kernelName:nt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Lf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(n)}}},Pf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(n)}}},Uf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,fu(Au(ku(1),mu(Cs(n,"float32")))))}}},qf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fu(lu(ku(1),mu(Cs(n,"float32"))));return du(e,t)}}}},Wf={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{const t=lu(mu(n),mu(r));let i=hu(e,du(r,t));const s=Js(n.shape,a);return s.length>0&&(i=Il(i,s)),pc(i,n.shape)},b:()=>{const t=lu(mu(n),mu(r));let i=wl(hu(e,du(n,t)));const s=Js(r.shape,a);return s.length>0&&(i=Il(i,s)),pc(i,r.shape)}}}},Vf={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,lu(mu(Cs(n,"float32")),1))}}},jf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,Au(ku(1),mu(Cs(n,"float32"))))}}},Gf=Ti({avgPool3dGrad_:function(e,t,n,r,a,i){const s=Ii(e,"dy","avgPool3dGrad"),o=Ii(t,"input","avgPool3dGrad");let u=s,c=o,l=!1;4===o.rank&&(l=!0,u=pc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),c=pc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),ie(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),lc("avgPool3dGrad",a,i);const p={dy:u,input:c},d={filterSize:n,strides:r,pad:a,dimRoundingMode:i},h=mi.runKernel(mt,p,d);return l?pc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Hf={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s,dimRoundingMode:o}=n;return{x:()=>Gf(e,r,a,i,s,o)}}},Kf=Ti({avgPoolGrad_:function(e,t,n,r,a){const i=Ii(e,"dy","avgPoolGrad"),s=Ii(t,"input","avgPoolGrad");ie(s.rank===i.rank,(()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`));let o=s,u=i,c=!1;3===s.rank&&(c=!0,o=pc(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=pc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ie(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),ie(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const l={dy:u,input:o},p={filterSize:n,strides:r,pad:a},d=mi.runKernel(ht,l,p);return c?pc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Xf={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s}=n;return{x:()=>Kf(e,r,a,i,s)}}},Zf={kernelName:gt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:i,transposeB:s}=n;return i||s?!i&&s?{a:()=>Hs(e,a,!1,!1),b:()=>Hs(e,r,!0,!1)}:i&&!s?{a:()=>Hs(a,e,!1,!0),b:()=>Hs(r,e,!1,!1)}:{a:()=>Hs(a,e,!0,!0),b:()=>Hs(e,r,!0,!0)}:{a:()=>Hs(e,a,!1,!0),b:()=>Hs(r,e,!0,!1)}}},Yf={kernelName:yt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>up(e,r,a)}}},Jf={kernelName:bt,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,i=r.shape,s=Array.from(i);for(let e=a.length-1;e>=0;e--)if(a[e]===i[e])s[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<s.length;e++)s[e]>1&&o.push(e);return{x:()=>Il(e,o,!0)}}},Qf={kernelName:wt,gradFunc:e=>({x:()=>e.clone()})},em={kernelName:Nt,gradFunc:e=>({x:()=>gu(e)})},tm={kernelName:St,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:i}=n;return{x:()=>Xc(Fl(cl(r,a),gl(r,i)),e,gu(e))}}},nm={kernelName:It,inputsToSave:["x"],gradFunc:Rf.gradFunc},rm={kernelName:Et,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,i=be(a,t[0].shape)[0],s=r.map((e=>e[i]));return Gp(e,s,i).map((e=>()=>e))}},am={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:i,strides:s,pad:o,dataFormat:u}=n;return ie(oc(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>_c(r.shape,e,a,s,o,u),filter:()=>kd(r,e,a.shape,s,o,u)}}},im={kernelName:Dt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:i,pad:s,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Oc(e,a,i,s,o,1,u),filter:()=>kd(e,r,a.shape,i,s,o,u)}}},sm=Ti({conv3DBackpropFilter_:function(e,t,n,r,a){let i=e;4===e.rank&&(i=pc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=pc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),ie(5===s.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`)),ie(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ie(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),ie(s.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:s},u={strides:r,pad:a,filterShape:n};return mi.runKernel(Mt,o,u)}}),om={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i}=n;ie(oc(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[s,o]=t;return{x:()=>Bc(s.shape,e,o,a,i),filter:()=>sm(s,e,o.shape,a,i)}}},um={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(wl(Fp(Cs(n,"float32"))),e)}}},cm={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(zp(Cs(n,"float32")),e)}}},lm={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:i,reverse:s}=n;return{x:()=>{const t=$l([a],r.rank);let n=qc(e,a,i,!s);return null!=t&&(n=Xs(n,t)),n}}}},pm={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i,dimRoundingMode:s}=n,o=null==r?[1,1]:r;ie(oc(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,c]=t;return ie(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),ie(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),ie(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),ie(uc(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),lc("depthwiseConv2d",i,s),{x:()=>Md(u.shape,e,c,a,i,o,s),filter:()=>Ad(u,e,c.shape,a,i,o,s)}}},dm={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},s={x:r,filter:a,dy:e};return{x:()=>mi.runKernel(Vt,i,n),filter:()=>mi.runKernel(jt,s,n)}}},hm={kernelName:Kt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>mi.runKernel(Xt,r)}}},fm={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hu(tl(wl(mu(n))),2/Math.sqrt(Math.PI));return{x:()=>hu(e,r)}}},mm={kernelName:Jt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,n)}}},gm={kernelName:Qt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>pc(e,n.shape)}}},ym={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,tl(n))}}},xm={kernelName:an,gradFunc:e=>({x:()=>gu(e)})},bm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{const t=du(e,Cs(r,"float32")),i=Js(n.shape,a);return i.length>0?pc(Il(t,i),n.shape):t},b:()=>{let t=hu(e,Cs(n,"float32"));const i=Js(r.shape,a);i.length>0&&(t=pc(Il(t,i),r.shape));const s=mu(r);return wl(du(t,Cs(s,"float32")))}}}},vm={kernelName:on,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,i,s,o]=t,u=null==o?ku(1):o,c=Js(i.shape,a.shape),l=[];if(1===i.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const p=Au(a,i),d=hu(e,u),h=Mp(lu(s,ku(r))),f=hu(hu(hu(h,h),h),ku(-.5));return{x:()=>1===i.rank?pc(hu(hu(e,al(pc(h,[1,1,1,i.shape[0]]),l)),u),a.shape):pc(hu(hu(e,h),u),a.shape),mean:()=>{let e=hu(hu(h,ku(-1)),d);return 1===i.rank&&(e=Il(e,c)),pc(e,i.shape)},variance:()=>{let e=hu(hu(f,p),d);return 1===i.rank&&(e=Il(e,c)),pc(e,i.shape)},scale:()=>{const t=hu(p,h);let n=hu(e,t);return 1===i.rank&&(n=Il(n,c)),pc(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=Il(t,c)),pc(t,i.shape)}}}},wm={kernelName:un,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:i}=n,s=be(i,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,s),u=o.length,c=t.slice(i,t.length).slice(1),l=c.length,p=Nm(0,u),d=Nm(u+1,u+1+l),h=Sm([o,[n],c]),f=pc(e,h),m=pc(a,[n]),g=Sm([[u],p,d]),y=Xs(f,g);let x=ud(y,m,r.shape[s]);const b=Ol(g);return x=Xs(x,b),x},indices:()=>a}}};function Nm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Sm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const km={kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>gu(n),b:()=>gu(r)}}},Im={kernelName:dn,gradFunc:e=>({x:()=>Cs(e,"float32")})},Em={kernelName:mn,gradFunc:e=>({x:()=>gu(e)})},Cm={kernelName:gn,gradFunc:e=>({x:()=>gu(e)})},Tm={kernelName:yn,gradFunc:e=>({x:()=>gu(e)})},Dm={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,i=ul(r,0);return{x:()=>Xc(i,e,hu(e,a))}}},Am={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,lu(n,1))}}},Mm={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,Cs(n,"float32"))}}},$m={kernelName:Cn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=tl(r);return Au(e,hu(Il(e,a,!0),t))}}}},Om=Ti({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,i=1,s=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:i,beta:s};return mi.runKernel(Dn,o,u)}}),Rm={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:i,bias:s,alpha:o,beta:u}=n;return{x:()=>Om(r,a,e,i,s,o,u)}}};function _m(e,t,n,r){return t.rank<n.rank&&(t=pc(t,Al(t.shape,r))),e.rank<n.rank&&(e=pc(e,Al(e.shape,r))),{x:()=>hu(e,Cs(Kc(n,t),e.dtype))}}const Fm={kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,i=t[0],s=_m(e,t[1],i,be(a,i.shape));return{x:()=>s.x()}}},zm={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hu(e,Cs(cl(n,r),"float32")),b:()=>hu(e,Cs(ml(n,r),"float32"))}}},Bm=Ti({maxPool3dGrad_:function(e,t,n,r,a,i,s){const o=Ii(e,"dy","maxPool3dGrad"),u=Ii(t,"input","maxPool3dGrad"),c=Ii(n,"output","maxPool3dGrad");let l=o,p=u,d=c,h=!1;4===u.rank&&(h=!0,l=pc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=pc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=pc(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),ie(5===l.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ie(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),ie(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),lc("maxPool3dGrad",i,s);const f={dy:l,input:p,output:d},m={filterSize:r,strides:a,pad:i,dimRoundingMode:s},g=mi.runKernel(_n,f,m);return h?pc(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Lm={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;return{x:()=>Bm(e,r,a,i,s,o,u)}}},Pm=Ti({maxPoolGrad_:function(e,t,n,r,a,i,s){const o=Ii(e,"dy","maxPoolGrad"),u=Ii(t,"input","maxPoolGrad"),c=Ii(n,"output","maxPoolGrad");ie(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),ie(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ie(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),lc("maxPoolGrad",i,s);const l={dy:o,input:u,output:c},p={filterSize:r,strides:a,pad:i,dimRoundingMode:s};return mi.runKernel(On,l,p)}}),Um={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o}=n;return{x:()=>Pm(e,r,a,i,s,o)}}},qm={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,i=be(a,r.shape),s=ce(Dl(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=pc(e,t);return du(hu(n,jl(r.shape,"float32")),s)}}}},Wm={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>gc(e,i,r.shape)}}},Vm={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>gc(e,i,r.shape)}}},jm={kernelName:er,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,i=n,s=r,o=Qs(i.shape,s.shape);return{a:()=>{const t=Cs(s,"float32");let n=hu(e,hu(t,Du(i,Au(t,ku(1)))));const r=Js(i.shape,o);return r.length>0&&(n=Il(n,r)),pc(n,i.shape)},b:()=>{const t=ul(i,0),n=Xc(t,bl(i),gu(i));let r=hu(e,hu(a,n));const u=Js(s.shape,o);return u.length>0&&(r=Il(r,u)),pc(r,s.shape)}}}},Gm={kernelName:hr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=be(r,e.shape);return{x:()=>Ip(e,a)}}},Hm={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ul(n,ku(0)),r=ku(Gh),a=ku(Hh),i=hu(e,a),s=hu(hu(e,r),tl(Cs(n,"float32")));return Xc(t,i,s)}}}},Km={kernelName:br,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:i}=n,s=r.shape,[o,u]=Io(r,a,i),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],s[t]-o[t]-u[t]]);return{x:()=>rp(e,c)}}},Xm={kernelName:Cr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>bc(e,r,a)}}},Zm={kernelName:Tr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>fc(e,r)}}},Ym={kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=gu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=lu(t,gc(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)t=lu(t,gc(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)t=lu(t,gc(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)for(let o=0;o<a[3];++o)t=lu(t,gc(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Jm={kernelName:Zr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ou(t,gu(t)),r=ol(e,n);let a=cl(t,ku(0,"int32"));const i=r.rank-a.rank;for(let e=0;e<i;++e)a=nl(a,e+1);a=Fl(a,jl(r.shape,"bool"));const s=gu(r);return Xc(a,r,s)}(e,n)}}},Qm=[Rf,_f,Ff,zf,Bf,Lf,Pf,Uf,qf,Wf,Vf,jf,Hf,Xf,Zf,Yf,Jf,Qf,em,tm,nm,rm,im,am,om,um,cm,lm,pm,dm,{kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{const t=du(e,Cs(r,"float32")),i=Js(n.shape,a);return i.length>0?pc(Il(t,i),n.shape):t},b:()=>{let t=hu(e,Cs(n,"float32"));const i=Js(r.shape,a);i.length>0&&(t=pc(Il(t,i),r.shape));const s=mu(r);return wl(du(t,Cs(s,"float32")))}}}},hm,fm,mm,gm,ym,bm,xm,vm,wm,km,Im,Em,Cm,Tm,Dm,Am,Mm,$m,Rm,Fm,Fm,zm,Lm,Um,qm,{kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[i,s]=t,o=_m(e,s,i,be(a,i.shape));return{x:()=>o.x()}}},{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hu(e,Cs(gl(n,r),"float32")),b:()=>hu(e,Cs(ul(n,r),"float32"))}}},Wm,{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{const t=Js(n.shape,a);return t.length>0?pc(Il(e,t),n.shape):e},b:()=>{const t=hu(e,wl(sl(du(n,r)))),i=Js(r.shape,a);return i.length>0?pc(Il(t,i),r.shape):t}}}},{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{const t=hu(e,Cs(r,"float32")),i=Js(n.shape,a);return i.length>0?pc(Il(t,i),n.shape):t},b:()=>{const t=hu(e,Cs(n,"float32")),i=Js(r.shape,a);return i.length>0?pc(Il(t,i),r.shape):t}}}},{kernelName:Vn,gradFunc:e=>({x:()=>wl(e)})},{kernelName:Zn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Vl(n.shape,"float32")}}},{kernelName:Xn,gradFunc:e=>({x:()=>gu(e)})},{kernelName:Yn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return cd(e,r).map((e=>()=>e))}},Vm,Vm,jm,{kernelName:tr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=ul(n,0);return{x:()=>Xc(a,e,hu(e,r)),alpha:()=>{let t=Xc(a,gu(e),hu(e,n));const i=Js(r.shape,e.shape);return i.length>0&&(t=Il(t,i)),pc(t,r.shape)}}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,wl(mu(n)))}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hu(gl(n,6),Yp(n));return{x:()=>hu(e,Cs(r,"float32"))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Cs(Yp(n),"float32"))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pc(e,n.shape)}}},{kernelName:lr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>mi.runKernel(pr,a,n)}}},{kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>mi.runKernel(cr,a,n)}}},Gm,{kernelName:fr,gradFunc:e=>({x:()=>gu(e)})},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wl(du(e,hu(Du(n,1.5),2)))}}},{kernelName:yr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Cs(gu(n),"float32"),t:()=>hu(e,Cs(n,e.dtype)),e:()=>hu(e,Cs(zl(n),e.dtype))}}},Hm,{kernelName:Sr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,hu(n,Au(ku(1),n)))}}},{kernelName:Nr,gradFunc:e=>({x:()=>gu(e)})},{kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Pc(Cs(n,"float32")),e)}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Uc(Cs(n,"float32")),e)}}},Km,{kernelName:Dr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,i=hu(e,r);return{logits:()=>Au(i,hu(Il(i,[a],!0),r))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,mc(n))}}},Xm,Xm,Zm,Zm,{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,hu(fu(Cs(n,"float32")),2))}}},{kernelName:_r,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(2);return{a:()=>hu(e,hu(a,Au(n,r))),b:()=>hu(e,hu(a,Au(r,n)))}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,hu(Cs(n,"float32"),2))}}},{kernelName:Jr,gradFunc:e=>({x:()=>gu(e)})},{kernelName:Ur,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qs(n.shape,r.shape);return{a:()=>{let t=e;const r=Js(n.shape,a);return r.length>0&&(t=Il(t,r)),pc(t,n.shape)},b:()=>{let t=e;const n=Js(r.shape,a);return n.length>0&&(t=Il(t,n)),pc(wl(t),r.shape)}}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:i}=n;be(i,r.shape).forEach((e=>{a[e]=1}));const s=pc(e,a),o=hu(s,jl(r.shape,"float32"));return{x:()=>o}}},{kernelName:qr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,mu(Pc(n)))}}},{kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Au(ku(1),mu(n)),e)}}},Ym,{kernelName:Hr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,i=Ol(a);return{x:()=>Xs(e,i)}}},{kernelName:Xr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Zp(e,a)}}},Jm,{kernelName:Yr,gradFunc:e=>({x:()=>gu(e)})}];for(const e of Qm)da(e);let eg;function tg(){return null==eg&&(eg=uu().epsilon()),eg}Za().prototype.abs=function(){return this.throwIfDisposed(),$u(this)},Za().prototype.acos=function(){return this.throwIfDisposed(),Lu(this)},Za().prototype.acosh=function(){return this.throwIfDisposed(),Pu(this)},Za().prototype.add=function(e){return this.throwIfDisposed(),lu(this,e)},Za().prototype.all=function(e,t){return this.throwIfDisposed(),qu(this,e,t)},Za().prototype.any=function(e,t){return this.throwIfDisposed(),Wu(this,e,t)},Za().prototype.argMax=function(e){return this.throwIfDisposed(),Vu(this,e)},Za().prototype.argMin=function(e){return this.throwIfDisposed(),ju(this,e)},Za().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,(()=>"The array must have only 1 element.")),pc(this,[])},Za().prototype.asType=function(e){return this.throwIfDisposed(),Cs(this,e)},Za().prototype.as1D=function(){return this.throwIfDisposed(),pc(this,[this.size])},Za().prototype.as2D=function(e,t){return this.throwIfDisposed(),pc(this,[e,t])},Za().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),pc(this,[e,t,n])},Za().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),pc(this,[e,t,n,r])},Za().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),pc(this,[e,t,n,r,a])},Za().prototype.asin=function(){return this.throwIfDisposed(),Gu(this)},Za().prototype.asinh=function(){return this.throwIfDisposed(),Hu(this)},Za().prototype.atan=function(){return this.throwIfDisposed(),Ku(this)},Za().prototype.atan2=function(e){return this.throwIfDisposed(),Xu(this,e)},Za().prototype.atanh=function(){return this.throwIfDisposed(),Zu(this)},Za().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),dc(this,e,t,n,r)},Za().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),bc(this,e,t)},Za().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),vc(this,e,t,n,r,a)},Za().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ec(this,e)},Za().prototype.cast=function(e){return this.throwIfDisposed(),Cs(this,e)},Za().prototype.ceil=function(){return this.throwIfDisposed(),Cc(this)},Za().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},Za().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Xa&&(e=[e]),fc([this,...e],t)},Za().prototype.conv1d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Rc(this,e,t,n,r,a,i)},Za().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Fc(this,e,t,n,r,a)},Za().prototype.conv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Oc(this,e,t,n,r,a,i)},Za().prototype.cos=function(){return this.throwIfDisposed(),Pc(this)},Za().prototype.cosh=function(){return this.throwIfDisposed(),Uc(this)},Za().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),qc(this,e,t,n)},Za().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vc(this,e,t)},Za().prototype.depthwiseConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),jc(this,e,t,n,r,a,i)},Za().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Hc(this,e,t,n,r,a)},Za().prototype.divNoNan=function(e){return this.throwIfDisposed(),Zc(this,e)},Za().prototype.div=function(e){return this.throwIfDisposed(),du(this,e)},Za().prototype.dot=function(e){return this.throwIfDisposed(),Yc(this,e)},Za().prototype.elu=function(){return this.throwIfDisposed(),Qc(this)},Za().prototype.equal=function(e){return this.throwIfDisposed(),Kc(this,e)},Za().prototype.erf=function(){return this.throwIfDisposed(),el(this)},Za().prototype.exp=function(){return this.throwIfDisposed(),tl(this)},Za().prototype.expandDims=function(e){return this.throwIfDisposed(),nl(this,e)},Za().prototype.expm1=function(){return this.throwIfDisposed(),rl(this)},Za().prototype.fft=function(){return this.throwIfDisposed(),Wp(this)},Za().prototype.flatten=function(){return this.throwIfDisposed(),pc(this,[this.size])},Za().prototype.floor=function(){return this.throwIfDisposed(),sl(this)},Za().prototype.floorDiv=function(e){return this.throwIfDisposed(),pu(this,e)},Za().prototype.gather=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},Za().prototype.greaterEqual=function(e){return this.throwIfDisposed(),cl(this,e)},Za().prototype.greater=function(e){return this.throwIfDisposed(),ul(this,e)},Za().prototype.ifft=function(){return this.throwIfDisposed(),Vp(this)},Za().prototype.irfft=function(){return this.throwIfDisposed(),jp(this)},Za().prototype.isFinite=function(){return this.throwIfDisposed(),pl(this)},Za().prototype.isInf=function(){return this.throwIfDisposed(),dl(this)},Za().prototype.isNaN=function(){return this.throwIfDisposed(),hl(this)},Za().prototype.leakyRelu=function(e){return this.throwIfDisposed(),fl(this,e)},Za().prototype.lessEqual=function(e){return this.throwIfDisposed(),gl(this,e)},Za().prototype.less=function(e){return this.throwIfDisposed(),ml(this,e)},Za().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),xl(this,e,t,n,r)},Za().prototype.logSigmoid=function(){return this.throwIfDisposed(),Sl(this)},Za().prototype.logSoftmax=function(e){return this.throwIfDisposed(),El(this,e)},Za().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),_l(this,e,t)},Za().prototype.log=function(){return this.throwIfDisposed(),bl(this)},Za().prototype.log1p=function(){return this.throwIfDisposed(),vl(this)},Za().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fl(this,e)},Za().prototype.logicalNot=function(){return this.throwIfDisposed(),zl(this)},Za().prototype.logicalOr=function(e){return this.throwIfDisposed(),Bl(this,e)},Za().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ll(this,e)},Za().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Hs(this,e,t,n)},Za().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Pl(this,e,t,n,r)},Za().prototype.max=function(e,t){return this.throwIfDisposed(),kl(this,e,t)},Za().prototype.maximum=function(e){return this.throwIfDisposed(),Ou(this,e)},Za().prototype.mean=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},Za().prototype.min=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},Za().prototype.minimum=function(e){return this.throwIfDisposed(),Kl(this,e)},Za().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Xl(this,e,t)},Za().prototype.mod=function(e){return this.throwIfDisposed(),Zl(this,e)},Za().prototype.mul=function(e){return this.throwIfDisposed(),hu(this,e)},Za().prototype.neg=function(){return this.throwIfDisposed(),wl(this)},Za().prototype.norm=function(e,t,n){return this.throwIfDisposed(),md(this,e,t,n)},Za().prototype.notEqual=function(e){return this.throwIfDisposed(),ep(this,e)},Za().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ks(this,e,t,n)},Za().prototype.onesLike=function(){return this.throwIfDisposed(),tp(this)},Za().prototype.pad=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Za().prototype.pool=function(e,t,n,r,a,i){return this.throwIfDisposed(),cp(this,e,t,n,r,a,i)},Za().prototype.pow=function(e){return this.throwIfDisposed(),Du(this,e)},Za().prototype.prelu=function(e){return this.throwIfDisposed(),lp(this,e)},Za().prototype.prod=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},Za().prototype.reciprocal=function(){return this.throwIfDisposed(),Np(this)},Za().prototype.relu=function(){return this.throwIfDisposed(),Sp(this)},Za().prototype.relu6=function(){return this.throwIfDisposed(),kp(this)},Za().prototype.reshapeAs=function(e){return this.throwIfDisposed(),pc(this,e.shape)},Za().prototype.reshape=function(e){return this.throwIfDisposed(),pc(this,e)},Za().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),th(this,e,t,n)},Za().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),nh(this,e,t,n)},Za().prototype.reverse=function(e){return this.throwIfDisposed(),Ip(this,e)},Za().prototype.rfft=function(){return this.throwIfDisposed(),Hp(this)},Za().prototype.round=function(){return this.throwIfDisposed(),Ap(this)},Za().prototype.rsqrt=function(){return this.throwIfDisposed(),Mp(this)},Za().prototype.selu=function(){return this.throwIfDisposed(),$p(this)},Za().prototype.separableConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Op(this,e,t,n,r,a,i)},Za().prototype.sigmoid=function(){return this.throwIfDisposed(),mc(this)},Za().prototype.sign=function(){return this.throwIfDisposed(),_p(this)},Za().prototype.sin=function(){return this.throwIfDisposed(),Fp(this)},Za().prototype.sinh=function(){return this.throwIfDisposed(),zp(this)},Za().prototype.slice=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},Za().prototype.softmax=function(e){return this.throwIfDisposed(),qp(this,e)},Za().prototype.softplus=function(){return this.throwIfDisposed(),Nl(this)},Za().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),up(this,e,t)},Za().prototype.split=function(e,t){return this.throwIfDisposed(),Gp(this,e,t)},Za().prototype.sqrt=function(){return this.throwIfDisposed(),fu(this)},Za().prototype.square=function(){return this.throwIfDisposed(),mu(this)},Za().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Kp(this,e)},Za().prototype.squeeze=function(e){return this.throwIfDisposed(),Xp(this,e)},Za().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Xa?[this,e]:[this,...e];return Zp(n,t)},Za().prototype.step=function(e){return this.throwIfDisposed(),Yp(this,e)},Za().prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return this.throwIfDisposed(),Jp(this,e,t,n,r,a,i,s,o)},Za().prototype.sub=function(e){return this.throwIfDisposed(),Au(this,e)},Za().prototype.sum=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Za().prototype.tan=function(){return this.throwIfDisposed(),Qp(this)},Za().prototype.tanh=function(){return this.throwIfDisposed(),yc(this)},Za().prototype.tile=function(e){return this.throwIfDisposed(),al(this,e)},Za().prototype.toBool=function(){return this.throwIfDisposed(),Cs(this,"bool")},Za().prototype.toFloat=function(){return this.throwIfDisposed(),Cs(this,"float32")},Za().prototype.toInt=function(){return this.throwIfDisposed(),Cs(this,"int32")},Za().prototype.topk=function(e,t){return this.throwIfDisposed(),id(this,e,t)},Za().prototype.transpose=function(e){return this.throwIfDisposed(),Xs(this,e)},Za().prototype.unique=function(e){return this.throwIfDisposed(),od(this,e)},Za().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ud(this,e,t)},Za().prototype.unstack=function(e){return this.throwIfDisposed(),cd(this,e)},Za().prototype.where=function(e,t){return this.throwIfDisposed(),Xc(e,this,t)},Za().prototype.zerosLike=function(){return this.throwIfDisposed(),gu(this)};class ng extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ng.prototype)}}class rg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rg.prototype)}}class ag extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ag.prototype)}}class ig extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ig.prototype)}}class sg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sg.prototype)}}function og(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ug(e,t){if(!e)throw new sg(t)}function cg(e,t){let n=0;for(const r of e)r===t&&n++;return n}function lg(e){return 1===e.length?e[0]:e}function pg(e){return Array.isArray(e)?e:[e]}function dg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function hg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let fg={};function mg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function gg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>gg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?gg(t):e[n]=t.value)}}}function yg(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let i;if(a in n)i=n[a];else if(a in fg)i=fg[a];else if(i=t[a],null==i)throw new ag(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new ag(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const s=i.className;let o,u;if(s in n?[o,u]=n[s]:s in fg?[o,u]=fg.className:s in t&&([o,u]=t[s]),null==o)throw new ag(`Unknown ${r}: ${s}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(fg))e[t]=fg[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},fg);for(const e of Object.keys(n))fg[e]=n[e];gg(i.config);const r=u(o,i.config,n,a);return fg=Object.assign({},t),r}{const e=Object.assign({},fg);for(const e of Object.keys(n))fg[e]=n[e];const t=new o(i.config);return fg=Object.assign({},e),t}}}function xg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function bg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function vg(e){if(null==e)throw new ag(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function wg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ag(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ng(e,t,n=0,r=1/0){return ug(n>=0),ug(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Sg(e,t){Array.isArray(e)?(ie(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Sg(e,`element ${n+1} of ${t}`)))):ie(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${kg(e)}.`))}function kg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>kg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Ig(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Eg(e,t){return Yo((()=>fu(Il(hu(e,e),t,!0))))}class Cg extends To{getConfig(){return{}}}class Tg extends Cg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=Eg(e,this.axis),n=Tc(t,0,this.maxValue);return hu(e,du(n,lu(tg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Tg.className="MaxNorm",Ao(Tg);class Dg extends Cg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>du(e,lu(tg(),Eg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Dg.className="UnitNorm",Ao(Dg);class Ag extends Cg{apply(e){return Sp(e)}}Ag.className="NonNeg",Ao(Ag);class Mg extends Cg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=Eg(e,this.axis),n=lu(hu(this.rate,Tc(t,this.minValue,this.maxValue)),hu(1-this.rate,t));return hu(e,du(n,lu(tg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Mg.className="MinMaxNorm",Ao(Mg);const $g={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Og(e){return mg(e)}function Rg(e,t={}){return yg(e,Do.getMap().classNameMap,t,"constraint")}function _g(e){return null==e?null:"string"==typeof e?Rg({className:e in $g?$g[e]:e,config:{}}):e instanceof Cg?e:Rg(e)}function Fg(e){return new Tg(e)}function zg(e){return new Dg(e)}function Bg(){return new Ag}function Lg(e){return new Mg(e)}const Pg=["channelsFirst","channelsLast"],Ug=["nearest","bilinear"],qg=["valid","same","causal"],Wg=["max","avg"],Vg=["sum","mul","concat","ave"],jg=new Map;function Gg(e){wg(Pg,"DataFormat",e)}function Hg(e){wg(qg,"PaddingMode",e)}function Kg(e){wg(Wg,"PoolMode",e)}const Xg=[];function Zg(e,t){Xg.push(e);try{const e=t();return Xg.pop(),e}catch(e){throw Xg.pop(),e}}function Yg(e){if(!ey(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Xg.length?"":Xg.join("/")+"/")+e}function Jg(e){if(!ey(e))throw new Error("Not a valid tensor name: '"+e+"'");jg.has(e)||jg.set(e,0);const t=jg.get(e);if(jg.set(e,jg.get(e)+1),t>0){const n=`${e}_${t}`;return jg.set(n,1),n}return e}const Qg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ey(e){return!!e.match(Qg)}function ty(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function ny(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function ry(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function ay(e,t){if(t<e)throw new ag(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function iy(e,t){return Cs(e,t)}function sy(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),pc(e,n)}function oy(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Bp(e,t,n);case 2:return Lp(e,[t,0],[n,e.shape[1]]);case 3:return Pp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Up(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return gc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return gc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ag(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function uy(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Bp(e,t,n);case 2:return Lp(e,[0,t],[e.shape[0],n]);case 3:return Pp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Up(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ag(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cy(e,t,n,r){return Yo((()=>{switch(e.rank){case 1:return Bp(e,t,n);case 2:switch(r){case 1:return oy(e,t,n);case 2:return uy(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return oy(e,t,n);case 2:return Pp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return uy(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return oy(e,t,n);case 2:return Up(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Up(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return uy(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${r}`)}default:throw new ag(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ly(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),fc(e,t)}function py(e,t){switch(e.rank){case 1:return Dc([e,t]);case 2:return Ac([e,t],0);case 3:return Mc([e,t],0);case 4:return $c([e,t],0);default:throw new ag(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ag(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return al(e,t)}function hy(e,t=0,n=1,r,a){return xp(e,t,n,r,a)}function fy(e,t,n,r){if(e.rank<2||t.rank<2)throw new ig(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ig(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Od({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?yy(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),i=a.pop();e=pc(e,[-1,i]);const s=t.shape.slice(),o=s.pop(),u=s.pop(),c=[...s,o],l=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=pc(Xs(t,l),[u,-1]);const p=[...a,...c];return pc(Od({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?yy(e.rank,r,"channelsLast"):null,activation:n}),p)}}function my(e,t,n){return Yo((()=>(t=Array.isArray(t)?ed(t,"int32"):Cs(t,"int32"),ol(e,t,n))))}function gy(e){return hu(e,e)}function yy(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ag(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?pc(t,[1,r[0],1,1,1]):pc(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?pc(t,[1,1,1,1,r[0]]):pc(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?pc(t,[1,r[0],1,1]):pc(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?pc(t,[1,1,1,r[0]]):pc(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?pc(t,[1,r[0],1]):pc(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?pc(t,[1,1,r[0]]):pc(t,[1].concat(r))}else if(e<3)return t;throw new ag(`Unsupported input rank by biasAdd: ${t.rank}`)}function xy(e,t,n){return Yo((()=>(null==n&&(n="channelsLast"),Gg(n),lu(e,yy(e.rank,t,n)))))}function by(e,t,n,r){return Yo((()=>vd(e,t,n,r)))}function vy(e,t,n=!1){return n?e():t()}const wy=["fanIn","fanOut","fanAvg"],Ny=["normal","uniform","truncatedNormal"];class Sy extends To{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ky extends Sy{apply(e,t){return Vl(e,t)}}ky.className="Zeros",Ao(ky);class Iy extends Sy{apply(e,t){return jl(e,t)}}Iy.className="Ones",Ao(Iy);class Ey extends Sy{constructor(e){if(super(),"object"!=typeof e)throw new ag(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ag(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Yo((()=>hu(ku(this.value),jl(e,t))))}getConfig(){return{value:this.value}}}Ey.className="Constant",Ao(Ey);class Cy extends Sy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return bp(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cy.className="RandomUniform",Ao(Cy);class Ty extends Sy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`randomNormal does not support dType ${t}.`);return hy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ty.className="RandomNormal",Ao(Ty);class Dy extends Sy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`truncatedNormal does not support dType ${t}.`);return sd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Dy.className="TruncatedNormal",Ao(Dy);class Ay extends Sy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Yo((()=>{if(2!==e.length||e[0]!==e[1])throw new ag("Identity matrix initializer can only be used for 2D square matrices.");return hu(this.gain,il(e[0]))}))}getConfig(){return{gain:this.gain}}}Ay.className="Identity",Ao(Ay);class My extends Sy{constructor(e){if(super(),e.scale<0)throw new ag(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,wg(wy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){wg(Ny,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Gg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ty(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ty(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ty(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`${this.getClassName()} does not support dType ${t}.`);return sd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return bp(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}My.className="VarianceScaling",Ao(My);class $y extends My{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return My.className}}$y.className="GlorotUniform",Ao($y);class Oy extends My{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return My.className}}Oy.className="GlorotNormal",Ao(Oy);class Ry extends My{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return My.className}}Ry.className="HeNormal",Ao(Ry);class _y extends My{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return My.className}}_y.className="HeUniform",Ao(_y);class Fy extends My{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return My.className}}Fy.className="LeCunNormal",Ao(Fy);class zy extends My{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return My.className}}zy.className="LeCunNormal",Ao(zy);class By extends Sy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ig("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Yo((()=>{if(e.length<2)throw new ig("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=hy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Dh.gramSchmidt(t);return e[0]>e[1]&&(n=Xs(n)),hu(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}By.className="Orthogonal",Ao(By);const Ly={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Py(e,t={}){return yg(e,Do.getMap().classNameMap,t,"initializer")}function Uy(e){return mg(e)}function qy(e){if("string"==typeof e){const t=e in Ly?Ly[e]:e;if("GlorotNormal"===t)return new Oy;if("GlorotUniform"===t)return new $y;if("HeNormal"===t)return new Ry;if("HeUniform"===t)return new _y;if("LeCunNormal"===t)return new Fy;if("LeCunUniform"===t)return new zy;{const e={};return e.className=t,e.config={},Py(e)}}return e instanceof Sy?e:Py(e)}function Wy(){return new ky}function Vy(){return new Iy}function jy(e){return new Ey(e)}function Gy(e){return new Cy(e)}function Hy(e){return new Ty(e)}function Ky(e){return new Dy(e)}function Xy(e){return new Ay(e)}function Zy(e){return new My(e)}function Yy(e){return new $y(e)}function Jy(e){return new Oy(e)}function Qy(e){return new Ry(e)}function ex(e){return new _y(e)}function tx(e){return new Fy(e)}function nx(e){return new zy(e)}function rx(e){return new By(e)}let ax=0;function ix(){return ax++}const sx={};function ox(e=""){return e in sx||(sx[e]=0),sx[e]+=1,e+sx[e].toString()}function ux(e){return Array.isArray(e)&&Array.isArray(e[0])}function cx(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function lx(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ag(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function px(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ag(`Expected exactly 1 Shape; got ${e.length}`)}return e}function dx(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class hx{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ix(),n=null==n?"Variable":n,this.originalName=Yg(n),this.name=Jg(this.originalName),this.trainable_=r,this.constraint=a,this.val=ld(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function fx(e){return e.map((e=>e.read()))}function mx(e){e.forEach((e=>{e[0].write(e[1])}))}class gx{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class yx{constructor(e,t,n,r,a,i,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=ix(),null!=i&&(this.originalName=Yg(i),this.name=Jg(this.originalName)),this.rank=t.length}}let xx=0;class bx{constructor(e,t){this.callArgs=t,this.id=xx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vx=0;class wx extends To{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=dg(e)+"_"+ox(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new rg(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ag(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return lg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return lg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ng(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ng(`Layer ${this.name} is not connected, no input to return.`);return lg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ng(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ng(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return lg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=pg(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=pg(this.inputSpec);if(e.length!==t.length)throw new ag(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const i=r.rank;if(null!=a.ndim&&i!==a.ndim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ag(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),i=a.axes[t],s=r>=0?e[r]:e[e.length+r];if(null!=i&&-1===[i,null].indexOf(s))throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],i=r.shape[e];if(null!=t&&null!=i&&t!==i)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=pg(e);let r=!0;for(const e of n)if(!(e instanceof yx)){r=!1;break}let a=!0;for(const e of n)if(e instanceof yx){a=!1;break}if(r===a)throw new ag("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of pg(e))t.push(n.shape);this.build(lg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=pg(r),i=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=lg(i),null!=this.activityRegularizer)throw new ig("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=pg(e);const t=[];for(const n of e)t.push(n.shape);return lg(t)}(e),r=this.computeOutputShape(n);let a;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new yx(i,n,this,pg(e),t,this.name,r))):new yx(i,r,this,pg(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ig("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ng(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ng(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new rg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dx(this.weights)}build(e){this.built=!0}getWeights(e=!1){return fx(e?this.trainableWeights:this.weights)}setWeights(e){Yo((()=>{const t=this.weights;if(t.length!==e.length)throw new ag(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=fx(t);for(let a=0;a<r.length;++a){const i=r[a],s=t[a],o=e[a];if(!pe(i.shape,o.shape))throw new ag(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([s,o])}mx(n)}))}addWeight(e,t,n,r,a,i,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ag(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():qy("zeros"));const u=r.apply(t,n),c=new hx(u,n,e,i,s);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(c.read()))),null==i&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=pg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,i,s=null){const o=pg(e);t=pg(t),n=pg(n),r=pg(r),a=cx(a),i=cx(i);const u=[],c=[],l=[];for(const e of o)u.push(e.sourceLayer),c.push(e.nodeIndex),l.push(e.tensorIndex);new bx({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Nx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Nx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Sx extends wx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ox("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ag("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ag("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ag("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new yx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new bx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ag(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function kx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ag("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Sx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ix(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const i=e[a];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Jo(r)}}function Ex(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Cx;Sx.className="InputLayer",Ao(Sx),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Cx||(Cx={}));class Tx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Dx{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ax extends Tx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Yo((()=>lu(this.totals[e],hu(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Yo((()=>{const n=hu(du(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Qo(t[e])})))}}class Mx extends Tx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if("number"!=typeof a[i]){const s=a[i];e.push(s.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class $x extends Tx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_h,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Me(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Oa();return(...i)=>{const s=null!=n?n():Oa();return s-a<t||(a=s,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ix(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ix(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ix(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ix(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ix(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Me(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ix(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ix(e),await this.trainEnd(e))}}function Ox(e,t){return null==e&&(e={}),e instanceof Tx?[e]:Array.isArray(e)&&e[0]instanceof Tx?e:pg(e).map((e=>new $x(e,t)))}class Rx{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Rx.checkForDuplicate(t),null==Rx.constructors[e]&&(Rx.constructors[e]=[]),Rx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Rx.constructors)Rx.constructors[+t].forEach((t=>{if(t===e)throw new ag("Duplicate callback constructor.")}))}static clear(){Rx.constructors={}}static createCallbacks(e){const t=[];for(const n in Rx.constructors){const r=+n;e>=r&&t.push(...Rx.constructors[r])}return t.map((e=>new e))}}function _x(e,t,n,r,a,i,s,o,u){const c=new Mx,l=[new Ax,...Rx.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const p=new Dx(l);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:i,batchSize:s,verbose:t,doValidation:o,metrics:u}),{callbackList:p,history:c}}function Fx(e,t={},n=!1){return yg(e,Do.getMap().classNameMap,t,"layer",n)}function zx(e,t){return Yo((()=>{"float32"!==e.dtype&&(e=Cs(e,"float32"));const n=Il(gy(e),t,!0),r=Cu(n.shape,tg()),a=fu(Ou(n,r));return du(e,a)}))}function Bx(e,t){return Yo((()=>Wl(gy(Au(t,e)),-1)))}function Lx(e,t){return Yo((()=>Wl($u(Au(t,e)),-1)))}function Px(e,t){return Yo((()=>{const n=Au(e,t),r=Tc($u(e),tg(),Number.MAX_VALUE),a=$u(du(n,r));return hu(100,Wl(a,-1))}))}function Ux(e,t,n=!1){return Yo((()=>{if(n)t=qp(t);else{const e=Il(t,t.shape.length-1,!0);t=du(t,e)}return t=Tc(t,tg(),1-tg()),wl(Il(hu(Cs(e,"float32"),bl(t)),t.shape.length-1))}))}function qx(e,t,n=!1){return Yo((()=>{const r=Cs(sl(function(e){const t=[ty(e.shape)];return pc(e,t)}(e)),"int32"),a=(t=Tc(t,tg(),1-tg())).shape;return Ux(pc(Ks(r,a[a.length-1]),a),t,n)}))}function Wx(e,t){return Yo((()=>{let n;return n=Tc(t,tg(),1-tg()),n=bl(du(n,Au(1,n))),Wl(function(e,t){if(!pe(e.shape,t.shape))throw new ag(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Yo((()=>{const n=Sp(t),r=wl($u(t));return lu(Au(n,hu(t,e)),vl(tl(r)))}))}(e,n),-1)}))}function Vx(e,t){return Yo((()=>{const n=zx(e,-1),r=zx(t,-1),a=hu(n,r);return wl(Il(a,-1))}))}Rx.constructors={};const jx={meanSquaredError:Bx,meanAbsoluteError:Lx,meanAbsolutePercentageError:Px,meanSquaredLogarithmicError:function(e,t){return Yo((()=>{const n=Tc(t,tg(),Number.MAX_VALUE),r=bl(lu(1,n)),a=Tc(e,tg(),Number.MAX_VALUE),i=bl(lu(1,a));return Wl(gy(Au(r,i)),-1)}))},squaredHinge:function(e,t){return Yo((()=>{const n=Ou(0,Au(1,hu(e,t)));return Wl(gy(n),-1)}))},hinge:function(e,t){return Yo((()=>{const n=Ou(0,Au(1,hu(e,t)));return Wl(n,-1)}))},categoricalHinge:function(e,t){return Yo((()=>{const n=Il(hu(e,t),-1),r=kl(hu(Au(1,e),t),-1);return Ou(0,lu(1,Au(r,n)))}))},logcosh:function(e,t){return Yo((()=>{const n=Math.log(2),r=Au(t,e),a=Au(lu(r,Nl(hu(-2,r))),n);return Wl(a,-1)}))},categoricalCrossentropy:Ux,sparseCategoricalCrossentropy:qx,binaryCrossentropy:Wx,kullbackLeiblerDivergence:function(e,t){return Yo((()=>{const n=Tc(e,tg(),1),r=Tc(t,tg(),1);return Il(hu(e,bl(du(n,r))),-1)}))},poisson:function(e,t){return Yo((()=>{const n=bl(lu(tg(),t));return Wl(Au(t,hu(e,n)),-1)}))},cosineProximity:Vx};function Gx(e){if("string"==typeof e){if(e in jx)return jx[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ag(t)}return e}function Hx(e,t){return Yo((()=>{const n=hu(.5,tp(t)),r=iy(ul(t,n),e.dtype);return Wl(Kc(e,r),-1)}))}function Kx(e,t){return Yo((()=>iy(Kc(Vu(e,-1),Vu(t,-1)),"float32")))}function Xx(e,t){return Yo((()=>Cs(Il(Fl(Kc(e,1),Kc(t,1))),"float32")))}function Zx(e,t){return Yo((()=>{const n=Xx(e,t),r=function(e,t){return Yo((()=>Cs(Il(Fl(Kc(e,0),Kc(t,1))),"float32")))}(e,t),a=lu(n,r);return Cs(Xc(ul(a,0),du(n,a),0),"float32")}))}function Yx(e,t){return Wx(e,t)}function Jx(e,t){return e.rank===t.rank&&(e=Xp(e,[e.rank-1])),(t=Vu(t,-1)).dtype!==e.dtype&&(t=Cs(t,e.dtype)),Cs(Kc(e,t),"float32")}const Qx=Ux,eb=qx,tb={binaryAccuracy:Hx,categoricalAccuracy:Kx,precision:Zx,categoricalCrossentropy:Qx,sparseCategoricalCrossentropy:eb,mse:Bx,MSE:Bx,mae:Lx,MAE:Lx,mape:Px,MAPE:Px,cosine:Vx};function nb(e){if("string"==typeof e&&e in tb)return tb[e];if("string"!=typeof e&&null!=e)return e;throw new ag(`Unknown metric ${e}`)}function rb(e){if(ug(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(jx))if(jx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(tb))if(tb[n]===e){t=n;break}return void 0!==t?t:e.name}}function ab(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ib(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function ib(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!ib(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!ib(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function sb(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ob(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}sb([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function ub(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}const s=e.name,o=e.getClassName(),u=0===i.length?"":i[0];sb([`${s} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)sb(["","","",i[e]],t,r)}function cb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function lb(e,t){if(null===e)return null;if("string"==typeof e)return hg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];cb(t,a,r)?n.push(r):n.push(lb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=hg(n);t[e]=lb(r,e)}}return t}}function pb(e,t){if(null==e)return null;if("string"==typeof e)return dg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];cb(t,a,r)?n.push(r):n.push(pb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[dg(n)]="name"!==n&&"className"!==n||"string"!=typeof r?pb(r,n):r}return t}}const db="3.13.0";class hb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof hb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ag(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Cs(t,e.dtype)}catch(n){throw new ag(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof yx){if(null==this.id2Value[e.id])throw new ag(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ag(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof yx){if(null==this.id2Value[e.id])throw new ag(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ag(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Jo(this.id2Mask)}}const fb={},mb={};function gb(e,t,n,r){const a=null!=n&&n.training,i=Array.isArray(e),s=i?e:[e],o=s.map((e=>e.name)),u=[],c=t.names();for(const e of o)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+t.names().join(",");let p,d;if(null==fb[l]){const e=function(e,t){ie(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=xb(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const i of e){const{sorted:e,recipientMap:s}=xb(i,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:yb(r)}}(s,t);p=e.sorted,d=e.recipientCounts,fb[l]=p,mb[l]=d}p=fb[l],d={},a||Object.assign(d,mb[l]);const h=new hb(t);for(let e=0;e<p.length;++e){if(null!=r){const e=Xo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=p[e],s=i.sourceLayer;if(s instanceof Sx)continue;const c=[],l=[],f=[];let m=!1;for(const e of i.inputs){const n=h.getValue(e),r=h.getMask(e);c.push(n),l.push(r),null!=r&&(m=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=l[0]);const g=pg(s.apply(c,n));let y=null;s.supportsMasking&&(y=s.computeMask(c,l));const x=bb(i),b=Array.isArray(x)?x:[x];for(let e=0;e<b.length;++e){h.hasKey(b[e])||h.add(b[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(b[e].name);-1!==t&&(u[t]=g[e])}a||Jo(f)}return h.disposeMasks(),i?u:u[0]}function yb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function xb(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const i=[],s=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&s.pop();else{s.push(i.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:a}}function bb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class vb extends wx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ox(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],bg(this.inputs).length!==this.inputs.length)throw new ag(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);bg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ug(0===n,"input layer has >1 nodes"),ug(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Sx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},i={},s=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new rg(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(vb.nodeKey(r,a)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let e=0;e<l;e++){const r=c.inputTensors[e],a=c.inboundLayers[e],i=c.nodeIndices[e],s=c.tensorIndices[e];o(r,t,n,a,i,s)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);s.push(c)},u=[],c=[];for(const e of this.outputs)o(e,u,c);const l=s.slice().reverse();for(const e of l){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const s=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,s),r[e.outboundLayer.id]=i,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=a.inboundNodes[s],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,u),n[o.id]=o}}const p={};for(const e in t){const r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let h=Object.keys(d).map((e=>parseInt(e,10))).sort(xg);this.layers=[];for(const e of h){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof vb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,h=Object.keys(p).map((e=>parseInt(e,10))).sort(xg);const f=this.inputs.slice(),m=[];for(const e of h)for(const t of p[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new rg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new rg(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new bx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ag("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ag(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let i=r;if(null==n[r]){const e=r.split("/");i=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[i])a.push([n[i],e[r]]);else if(t)throw new ag(`Provided weight data has no target variable: ${r}`);delete n[i]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ag(`${e.length} of ${r} weights are not set: ${e}`)}mx(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${db}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=pb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Yo((()=>{e=pg(e);const n=new hb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return gb(this.outputs,n,t)}))}computeMask(e,t){return Yo((()=>{let n;return e=pg(e),n=null==t?og(null,e.length):pg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=cx(e);if(t.length!==this.inputLayers.length)throw new ag(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xg);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],i=e.nodeIndices[t],s=e.tensorIndices[t],o=n[`${a.name}_${i}_${s}`];r.push(o)}const a=cx(t.computeOutputShape(lg(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${i}_${e}`]=a[e]}}const a=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;i.push(a)}for(let e=0;e<i.length;e++){const t=i[e];ug(t in n),a.push(n[t])}return lg(a)}runInternalGraph(e,t){null==t&&(t=og(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],i=e[r],s=t[r];n[a.id]=[i,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xg);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,s,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===i.length){const[e,n]=i[0];null==c.mask&&(c.mask=n),o=pg(t.call(e,c)),u=pg(t.computeMask(e,n)),r=[e],s=[n]}else r=i.map((e=>e[0])),s=i.map((e=>e[1])),null==c.mask&&(c.mask=s),o=pg(t.call(r,c)),u=pg(t.computeMask(r,s));if(t.activityRegularizer)throw new ig("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const a=[],i=[],s=[];for(const e of this.outputs){ug(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];s.push(t.shape),a.push(t),i.push(r)}return[a,i,s]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof vb?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=vb.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ag(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ag("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ag(`No such layer: ${e}`)}calculateLosses(){return Yo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=vb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=vb.nodeKey(e,n);let s={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),s=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[vb.nodeKey(a,i)];null==u&&(u=0),e.push([a.name,u,o,s])}i.push(e)}}}const s={};s.name=e.name,s.className=r,s.config=a,s.inboundNodes=i,n.push(s)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],i=vb.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,s,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=vb.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],c=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(e,t);const l=a[o];if(l.inboundNodes.length<=u)return void s(e,t);const p=l.inboundNodes[u];n.push(p.outputTensors[c])}n.length>0&&e.apply(lg(n),r)}function u(e){const n=e.name,i=Fx(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ag(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const c=t.name,l=t.layers;for(const e of l)u(e);for(;!vg(i);)for(const e of l){const t=a[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const p=[],d=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],r=e[2];ug(t in a);const i=a[t].inboundNodes[n].outputTensors;p.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ug(t in a);const i=a[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:p,outputs:d,name:c})}get stateful(){if(this._stateful)throw new ag("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Yo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function wb(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Nb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Yo((()=>{if(1===e.shape.length)return Ts(e);if(2===e.shape.length){if(e.shape[1]>1)return Vu(e,1);if(1===e.shape[1])return pc(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Jo(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),ed(a,"float32")}return null}function Sb(e,t){return hu(e,t)}function kb(e,t){let n,r;const a=t;n=a.xs,r=a.ys,ie(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Ib("input",e.inputNames,n),s=Ib("output",e.outputNames,r),o=i[0].shape[0];ie(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ie(s.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<s.length;t++)ie(s[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:s}}function Ib(e,t,n){if(n instanceof Xa)return[n];if(Array.isArray(n))return ie(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new ag(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Eb(e){return"function"==typeof e.iterator}function Cb(e){ie(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Tb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>oy(e,t,n-t))):oy(e,t,n-t)}function Db(e,t){return Yo((()=>null==e?null:Array.isArray(e)?e.map((e=>Db(e,t))):my(e,"int32"===t.dtype?t:Cs(t,"int32"))))}function Ab(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Mb(e){const t=[];e instanceof Xa&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(sy(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $b(e,t){if(null==e)return;const n=[];if(t instanceof Xa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Xa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ob(e){return Array.isArray(e)}function Rb(e){return!function(e){return e instanceof Xa}(e)&&!Ob(e)}function _b(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ob(e)&&e.length>0)t=!0;else if(Rb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ag(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(Rb(e)){e=e,i=[];for(const n of t){if(null==e[n])throw new ag(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(Ob(e)){if((e=e).length!==t.length)throw new ag(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(e=e,t.length>1)throw new ag(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=Mb(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new ag(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=s.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new ag(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function Fb(e,t,n,r=!0,a=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new ag(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new ag(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new ag(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=s.shape[i],u=n[e][i];if(null!=u&&u!==o)throw new ag(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class zb extends vb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ag("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Output shape","Param #"];let s;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){i.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}r("_".repeat(t)),sb(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?ob(o[e],n,r):ub(o[e],n,s,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?dx(e.collectedTrainableWeights):dx(e.trainableWeights),t}(e),c=dx(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Oh.adagrad(.01),Adadelta:()=>Oh.adadelta(1,.95,tg()),Adam:()=>Oh.adam(.001,.9,.999,tg()),Adamax:()=>Oh.adamax(.002,.9,.999,tg(),0),RMSProp:()=>Oh.rmsprop(.001,.9,0,tg()),SGD:()=>Oh.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ag(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Iu))throw new ag("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ag(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Gx(e)))}else{const n=Gx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ag(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Gx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Zg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,i;for(const s of t){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Wx?-1!==["accuracy","acc"].indexOf(s)?r=Hx:-1!==["crossentropy","ce"].indexOf(s)&&(r=Yx):this.lossFunctions[e]===qx?-1!==["accuracy","acc"].indexOf(s)?r=Jx:-1!==["crossentropy","ce"].indexOf(s)&&(r=eb):-1!==["accuracy","acc"].indexOf(s)?r=Kx:-1!==["crossentropy","ce"].indexOf(s)&&(r=Qx),-1!==["accuracy","acc"].indexOf(s)?a="acc":-1!==["crossentropy","ce"].indexOf(s)&&(a="ce"),i=r,n=""+a}else{const e=nb(s);i=e,n=""+rb(s)}let t;Zg(n,(()=>{t=i})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Cb(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const s=this.testFunction;return lg(this.testLoop(s,i,r,n.verbose,n.steps))}finally{$b(a[0],e),$b(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new ig("Verbose mode is not implemented yet.");ie(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const s="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await s.next();if(i=Yo((()=>{if(t.value){const{xs:n,ys:r}=kb(e,t.value),s=n.concat(r),c=Yo((()=>a(s)));if(Jo(s),0===u)for(let e=0;e<c.length;++e)i.push(ku(0));const l=s[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=Yo((()=>lu(i[e],hu(l,t)))),u>0&&Jo(n)}Jo(c),o+=l,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=du(i[e],o),Jo(t)}return lg(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ag(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ag(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ag("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),i=new hb;if(e instanceof Xa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ag(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ag(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const s=gb(a,i);return n?s:s[0]}retrieveSymbolicTensors(e){const t=og(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],i=a.map((e=>e.name));for(let r=0;r<e.length;++r){const s=i.indexOf(e[r]);if(-1!==s&&(t[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ag(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Yo((()=>{const r=this.checkNumSamples(e);if(n)throw new ig("Verbose predictLoop() is not implemented yet.");const a=Ab(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){const n=Yo((()=>{const n=a[t][0],r=a[t][1],i=Tb(e,n,r),s=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)s.push({key:this.inputs[e],value:i[e]});else s.push({key:this.inputs[0],value:i});const o=new hb(s);return gb(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return lg(i.map((e=>fc(e,0))))}))}predict(e,t={}){const n=Mb(e);Fb(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Cb(r),this.predictLoop(n,r)}finally{$b(n,e)}}predictOnBatch(e){Fb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new rg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===qx?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=bg(e.map((e=>e.shape[0])));r.sort();const a=bg(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new ag(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new ag(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!pe(r,a))throw new ag(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=_b(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=_b(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Bx,Wx,Ux];for(let a=0;a<e.length;++a){const i=e[a],s=t[a],o=n[a];if(null!=s){if(s===Ux&&1===i.shape[i.shape.length-1])throw new ag(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(s)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ag(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ag(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,i){const[s,o]=this.standardizeUserDataXY(e,t,a,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=wb(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Nb(o[t],null,e[t]))}return[s,o,u]}testLoop(e,t,n,r=0,a){return Yo((()=>{const i=this.checkNumSamples(t,n,a,"steps"),s=[];if(r>0)throw new ig("Verbose mode is not implemented yet.");if(null!=a)throw new ig("steps mode in testLoop() is not implemented yet");{const r=Ab(i,n),a=ed(ay(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=oy(a,i,o-i),c=Db(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)s.push(ku(0));for(let e=0;e<l.length;++e){const t=l[e];s[e]=lu(s[e],hu(o-i,t))}}for(let e=0;e<s.length;++e)s[e]=du(s[e],i)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;cg(e,r)>1&&(a+=`_${cg(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map((e=>e.read())),o=this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new hb(e),o=gb(this.outputs,s,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Sb(n,a[e]));const i=Wl(n);t.push(i),u=0===e?n:lu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Wl(t(r[a],o[a]))}Qo(n),i.push(n)}return u=Wl(u),this.calculateLosses().forEach((e=>{u=lu(u,e)})),u}),!0,s);return[o].concat(i)}}makeTestFunction(){this.testFunction=e=>Yo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const s=new hb(i),o=gb(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=Wl(r(a[e],o[e]));n=0===e?i:lu(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=Wl(n(a[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,s,o,u,c,l,p,d;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Cb(h);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,h);a=m[0],i=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ig("validationData including sample weights is not supported yet."):new ag(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,c,null,null,t,h);l=n[0],p=n[1],g=l.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];l=Tb(a,e,t),s=a,a=Tb(a,0,e),p=Tb(i,e,t),o=i,i=Tb(i,0,e),g=l.concat(p)}else null!=r.validationSteps&&(y=!0);const x=a.concat(i).concat(d);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,N;y?(e.makeTestFunction(),w=e.testFunction,N=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],N=v.slice());const S=Ox(r.callbacks,r.yieldEvery),k=await async function(e,t,n,r,a,i,s,o,u,c,l,p,d,h,f){null==a&&(a=32),null==i&&(i=1),null==l&&(l=!0),null==d&&(d=0);let m=!1;null!=u&&null!=c&&(m=!0);const g=e.checkNumSamples(n,a,h,"steps_per_epoch");let y;null!=g&&(y=ay(0,g)),null==s&&(s=1);const{callbackList:x,history:b}=_x(o,s,i,d,g,h,a,m,p);x.setModel(e),e.history=b,await x.onTrainBegin(),e.stopTraining_=!1;for(let s=d;s<i;++s){await x.onEpochBegin(s);const i={};{if("batch"===l)throw new ig("batch shuffling is not implemneted yet");l&&Y(y);const s=ed(y),o=Ab(g,a);for(let l=0;l<o.length;++l){const p={};if(await x.onBatchBegin(l,p),Yo((()=>{const d=o[l][0],h=o[l][1],f=oy(s,d,h-d);p.batch=l,p.size=h-d;const g=Db(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];p[t]=n,Qo(n)}if(l===o.length-1&&m){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Qo(a),i["val_"+n]=a}}})),await x.onBatchEnd(l,p),Ex(p),e.stopTraining_)break}s.dispose()}if(await x.onEpochEnd(s,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,x,v,h,r.epochs,r.verbose,S,w,g,r.shuffle,N,r.initialEpoch,null);return k}finally{e.isTraining=!1,$b(a,t),$b(i,n),$b(s,t),$b(o,n),$b(l,u),$b(p,c),null!=d&&Jo(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ie(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ie(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ie(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,s;if(a)if(Eb(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ig("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,s=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const l=Ox(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:h}=_x(l,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await d.onEpochBegin(f);let l=0,p=0;for(r||(m=await t.iterator());!r||l<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${l} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=kb(e,t.value),i={};i.batch=p,i.size=r[0].shape[0],await d.onBatchBegin(p,i);const s=[];if(null!=n.classWeight){const t=wb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await Nb(a[e],null,t[e]))}const c=r.concat(a).concat(s),h=o(c);Jo(c);for(let e=0;e<u.length;++e){const t=u[e],n=h[e];i[t]=n,Qo(n)}await d.onBatchEnd(p,i),Ex(i),p++,l++}if(r?l>=n.batchesPerEpoch:t.done){if(a){let t;t=Eb(n.validationData)?pg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):pg(e.evaluate(i,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,c),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),s=[];for(const e of i){const t=await e.data();s.push(t[0])}return Jo(i),$b(n[0],e),$b(n[1],t),lg(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Xo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=dg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>dg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=dg(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[dg(rb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>dg(rb(e))));{const e={};for(const t in this.metrics)e[t]=dg(rb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Fx(lb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=hg(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>hg(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=hg(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>hg(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=hg(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Hi(e);if(0===t.length)throw new ag(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ag(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ag("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Oi(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${db}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Oi(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Bi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;ab(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){ab(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zb.className="Model",Ao(zb);class Bb extends zb{}async function Lb(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Fx(lb(n),t);if(null!=e.weightsManifest){const t=await Fs(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Jo(t)}return r}Bb.className="Functional",Ao(Bb);class Pb extends zb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ox("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ag(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Pb||e instanceof zb;let n;if(t){if(n=e,1!==n.outputs.length)throw new ag("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ag("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ag("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=kx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ag(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ag("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Nx(this.outputs[0])}this.inboundNodes=[],new bx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:og(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(px(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ag("Legacy serialization format not supported yet.");a=t}else ie(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const s=new e(i);if(!(s instanceof Pb))throw new ig(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of a){const t=Fx(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new ag("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ag("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ub(e){return new zb(e)}function qb(e){return new Pb(e)}function Wb(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ki(e,t);if(0===n.length)n.push(qs(e,t));else if(n.length>1)throw new ag(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ag("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const i=null==n.strict||n.strict,s=null!=r.weightData&&null!=r.weightSpecs&&i,o=Fx(lb(a),void 0,s),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ag("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ri(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Jo(e),Jo(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Vb(e){return kx(e)}function jb(e,t){Rx.registerCallbackConstructor(e,t)}Pb.className="Sequential",Ao(Pb);class Gb extends To{getConfig(){return{}}}class Hb extends Gb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ig(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Qc(e)}(e,t)}}Hb.className="elu",Ao(Hb);class Kb extends Gb{apply(e){return $p(e)}}Kb.className="selu",Ao(Kb);class Xb extends Gb{apply(e){return Sp(e)}}Xb.className="relu",Ao(Xb);class Zb extends Gb{apply(e){return Yo((()=>Kl(6,Sp(e))))}}Zb.className="relu6",Ao(Zb);class Yb extends Gb{apply(e){return e}}Yb.className="linear",Ao(Yb);class Jb extends Gb{apply(e){return mc(e)}}Jb.className="sigmoid",Ao(Jb);class Qb extends Gb{apply(e){return function(e){return Yo((()=>{const t=lu(.5,hu(.2,e));return Tc(t,0,1)}))}(e)}}Qb.className="hardSigmoid",Ao(Qb);class ev extends Gb{apply(e){return Nl(e)}}ev.className="softplus",Ao(ev);class tv extends Gb{apply(e){return function(e){return Yo((()=>du(e,lu($u(e),1))))}(e)}}tv.className="softsign",Ao(tv);class nv extends Gb{apply(e){return yc(e)}}nv.className="tanh",Ao(nv);class rv extends Gb{apply(e,t=-1){return qp(e,t)}}rv.className="softmax",Ao(rv);class av extends Gb{apply(e,t=-1){return El(e,t)}}av.className="logSoftmax",Ao(av);class iv extends Gb{apply(e,t=1){return Yo((()=>hu(mc(hu(e,t)),e)))}}iv.className="swish",Ao(iv);class sv extends Gb{apply(e){return Yo((()=>hu(e,yc(Nl(e)))))}}function ov(e){return e.getClassName()}function uv(e,t={}){return yg(e,Do.getMap().classNameMap,t,"activation")}function cv(e){if(null==e){return uv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},uv(t)}return e instanceof Gb?e:uv(e)}function lv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}sv.className="mish",Ao(sv);class pv extends To{}class dv extends pv{constructor(e){super(),lv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Yo((()=>{let t=Vl([1]);return this.hasL1&&(t=lu(t,Il(hu(this.l1,$u(e))))),this.hasL2&&(t=lu(t,Il(hu(this.l2,gy(e))))),pc(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}dv.className="L1L2",Ao(dv);const hv={l1l2:"L1L2"};function fv(e){return mg(e)}function mv(e,t={}){return yg(e,Do.getMap().classNameMap,t,"regularizer")}function gv(e){return null==e?null:"string"==typeof e?mv({className:e in hv?hv[e]:e,config:{}}):e instanceof pv?e:mv(e)}class yv extends wx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=lx(e);let n=Sp(e);return null!=this.maxValue&&(n=Tc(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yv.className="ReLU",Ao(yv);class xv extends wx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=lx(e);return fl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xv.className="LeakyReLU",Ao(xv);class bv extends wx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=qy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gv(e.alphaRegularizer),this.alphaConstraint=_g(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ag(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=px(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new gx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=lx(e),lp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Uy(this.alphaInitializer),alphaRegularizer:fv(this.alphaRegularizer),alphaConstraint:Og(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}bv.className="PReLU",Ao(bv);class vv extends wx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ig(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=lx(e);return Qc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}vv.className="ELU",Ao(vv);class wv extends wx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=lx(e);return hu(n,Cs(ul(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}wv.className="ThresholdedReLU",Ao(wv);class Nv extends wx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new rv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=lx(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Sv(e,t,n){if("number"==typeof e)return og(e,t);if(e.length!==t)throw new ag(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const i=e[a];if((r=i)!==parseInt(r.toString(),10))throw new ag(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e;var r}function kv(e,t,n,r,a=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((i+r-1)/r)}function Iv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ry([n-t,0]);else{if("same"!==r)throw new ag(`Unsupport padding mode: ${r}.`);e*=t}return e}function Ev(e,t){return Yo((()=>(Gg(t),"channelsFirst"===t?Xs(e,[0,2,3,1]):e)))}function Cv(e,t){return Yo((()=>(Gg(t),"channelsFirst"===t?Xs(e,[0,2,3,4,1]):e)))}function Tv(e,t,n,r=[1,1],a="valid",i,s,o=null){return Yo((()=>{if(null==i&&(i="channelsLast"),Gg(i),3!==e.rank&&4!==e.rank)throw new ag(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ag(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Ev(e,i);if("causal"===a)throw new ig("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Dd({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=Xs(u,[0,3,1,2])),u}))}Nv.className="Softmax",Ao(Nv);class Dv extends wx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Dv.verifyArgs(t),this.rank=e,Sg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ig(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Sv(t.kernelSize,e,"kernelSize"),this.strides=Sv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Hg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gg(this.dataFormat),this.activation=cv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=qy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_g(t.biasConstraint),this.biasRegularizer=gv(t.biasRegularizer),this.activityRegularizer=gv(t.activityRegularizer),this.dilationRate=Sv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ag(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ag(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ag(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ug("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ng(e.kernelSize,"number",1,3))throw new ag(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ov(this.activation),useBias:this.useBias,biasInitializer:Uy(this.biasInitializer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),biasConstraint:Og(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Av extends Dv{constructor(e,t){super(e,t),this.kernel=null,Av.verifyArgs(t),this.filters=t.filters,Sg(this.filters,"filters"),this.kernelInitializer=qy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_g(t.kernelConstraint),this.kernelRegularizer=gv(t.kernelRegularizer)}build(e){e=px(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Yo((()=>{let t;e=lx(e);const n=null==this.bias?null:this.bias.read(),r=Ig(this.activation.getClassName());if(null!=r&&2===this.rank)t=Tv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",i,s=1){return Yo((()=>{if(null==i&&(i="channelsLast"),Gg(i),3!==e.shape.length)throw new ag(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ag(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ag(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=Xs(e,[0,2,1])),"causal"===a)throw new ig("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Rc(e,t,r,"same"===a?"same":"valid","NWC",s);return null!=n&&(o=xy(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Tv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ig("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",i,s){return Yo((()=>{if(null==i&&(i="channelsLast"),Gg(i),4!==e.rank&&5!==e.rank)throw new ag(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ag(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Cv(e,i);if("causal"===a)throw new ig("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=zc(o,t,r,"same"===a?"same":"valid","NDHWC",s),null!=n&&(o=xy(o,n)),"channelsFirst"===i&&(o=Xs(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=px(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=kv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Uy(this.kernelInitializer),kernelRegularizer:fv(this.kernelRegularizer),kernelConstraint:Og(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ag(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Mv extends Av{constructor(e){super(2,e),Mv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ng(e.kernelSize,"number",1,2))throw new ag(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Mv.className="Conv2D",Ao(Mv);class $v extends Av{constructor(e){super(3,e),$v.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ag(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$v.className="Conv3D",Ao($v);class Ov extends Mv{constructor(e){if(super(e),this.inputSpec=[new gx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ag(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=px(e)).length)throw new ag("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=lx(e);if(4!==t.shape.length)throw new ag(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const s=n[a],o=n[i],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],p=this.strides[1],d=[r,Iv(s,l,u,this.padding),Iv(o,p,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Xs(t,[0,2,3,1]));let h=Fc(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=Xs(h,[0,3,1,2])),null!=this.bias&&(h=xy(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=px(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const i=this.kernelSize[0],s=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Iv(t[r],o,i,this.padding),t[a]=Iv(t[a],u,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ov.className="Conv2DTranspose",Ao(Ov);class Rv extends $v{constructor(e){if(super(e),this.inputSpec=[new gx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ag(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=px(e)).length)throw new ag("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=lx(e);if(5!==t.shape.length)throw new ag(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i,s;"channelsFirst"===this.dataFormat?(s=2,a=3,i=4):(s=1,a=2,i=3);const o=n[s],u=n[a],c=n[i],l=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Iv(o,h,l,this.padding),Iv(u,f,p,this.padding),Iv(c,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Xs(t,[0,2,3,4,1]));let y=Lc(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Xs(y,[0,4,1,2,3])),null!==this.bias&&(y=xy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=px(e)).slice();let n,r,a,i;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,i=4):(n=4,r=1,a=2,i=3);const s=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[r]=Iv(t[r],c,s,this.padding),t[a]=Iv(t[a],l,o,this.padding),t[i]=Iv(t[i],p,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Rv.className="Conv3DTranspose",Ao(Rv);class _v extends Av{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ag("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ag("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ag(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=qy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gv(t.depthwiseRegularizer),this.depthwiseConstraint=_g(t.depthwiseConstraint),this.pointwiseInitializer=qy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gv(t.pointwiseRegularizer),this.pointwiseConstraint=_g(t.pointwiseConstraint)}build(e){if((e=px(e)).length<this.rank+2)throw new ag(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ag(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new gx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t;if(e=lx(e),1===this.rank)throw new ig("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Xs(e,[0,2,3,1])),t=Op(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Xs(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Uy(this.depthwiseInitializer),e.pointwiseInitializer=Uy(this.pointwiseInitializer),e.depthwiseRegularizer=fv(this.depthwiseRegularizer),e.pointwiseRegularizer=fv(this.pointwiseRegularizer),e.depthwiseConstraint=Og(this.depthwiseConstraint),e.pointwiseConstraint=Og(this.pointwiseConstraint),e}}_v.className="SeparableConv";class Fv extends _v{constructor(e){super(2,e)}}Fv.className="SeparableConv2D",Ao(Fv);class zv extends Av{constructor(e){super(1,e),zv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ng(e.kernelSize,"number",1,1))throw new ag(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}zv.className="Conv1D",Ao(zv);class Bv extends wx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Yo((()=>{if(e=lx(e),"channelsLast"===this.dataFormat){const t=cy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=cy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Bv.className="Cropping2D",Ao(Bv);class Lv extends wx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,wg(Ug,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Yo((()=>{let t=lx(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Xs(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Th.resizeNearestNeighbor(t,[e,r]):Th.resizeBilinear(t,[e,r]);return Xs(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Th.resizeNearestNeighbor(t,[e,r]):Th.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lv.className="UpSampling2D",Ao(Lv);class Pv extends Dv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=qy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_g(e.depthwiseConstraint),this.depthwiseRegularizer=gv(e.depthwiseRegularizer)}build(e){if((e=px(e)).length<4)throw new ag(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ag(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{let t=function(e,t,n=[1,1],r="valid",a,i){return Yo((()=>{null==a&&(a="channelsLast"),Gg(a);let s=Ev(e,a);if(4!==e.rank)throw new ag(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ag(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=jc(s,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(s=Xs(s,[0,3,1,2])),s}))}(e=lx(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=px(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=kv(t,this.kernelSize[0],this.padding,this.strides[0]),i=kv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,i]:[e[0],a,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Uy(this.depthwiseInitializer),e.depthwiseRegularizer=fv(this.depthwiseRegularizer),e.depthwiseConstraint=Og(this.depthwiseRegularizer),e}}function Uv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ag("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function qv(e,t,n,r=!1,a,i,s=!1,o=!1){return Yo((()=>{const u=t.shape.length;if(u<3)throw new ag(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ay(2,u));if(t=Xs(t,c),null!=i)throw new ig("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Cs(Cs(a,"bool"),"float32")).rank===u-1&&(a=nl(a,-1)),a=Xs(a,c)),r&&(t=Ip(t,0),null!=a&&(a=Ip(a,0)));const l=[];let p,d=n;const h=t.shape[0],f=cd(t);let m,g;null!=a&&(m=cd(a));for(let t=0;t<h;++t){const n=f[t],r=Yo((()=>e(n,d)));if(null==a)p=r[0],d=r[1];else{const e=Yo((()=>{const e=m[t],n=Au(tp(e),e),a=lu(hu(r[0],e),hu(d[0],n)),i=d.map(((t,a)=>lu(hu(r[1][a],e),hu(t,n))));return{output:a,newStates:i}}));p=e.output,d=e.newStates}o&&l.push(p)}return o&&(g=Zp(l,1)),[p,g,d]}))}Pv.className="DepthwiseConv2D",Ao(Pv);class Wv extends wx{constructor(e){let t;if(super(e),null==e.cell)throw new ag("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yv({cells:e.cell}):e.cell,null==t.stateSize)throw new ag("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new gx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ay(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ux(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Yo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ig("Constants support is not implemented in RNN yet.");ux(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new gx({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pe(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new ag(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new gx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new ng("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ag("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vl([n,e]))):this.states_=[Vl([n,this.cell.stateSize])];else if(null==e)Jo(this.states_),null!=this.keptStates&&(Jo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vl([n,e]))):this.states_[0]=Vl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ag(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Jo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!pe(r.shape,i))throw new ag(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Qo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Uv(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let i=[],s=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new gx({shape:e.shape}));s=s.concat(this.stateSpec)}if(null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof yx){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=lx(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new ag(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},o=qv(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const p=this.returnSequences?c:u;return this.returnState?[p].concat(l):p}))}getInitialState(e){return Yo((()=>{let t=Vl(e.shape);return t=Il(t,[1,2]),t=sy(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?dy(t,[1,e]):t)):this.cell.stateSize>1?[dy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Wv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Fx(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Wv.className="RNN",Ao(Wv);class Vv extends wx{}class jv extends Vv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Sg(this.units,"units"),this.activation=cv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=px(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==(e=e).length)throw new ag(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jv({ones:()=>tp(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jv({ones:()=>tp(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;a=fy(null!=i?hu(e,i):e,this.kernel.read()),null!=this.bias&&(a=xy(a,this.bias.read())),null!=s&&(n=hu(n,s));let o=lu(a,fy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}jv.className="SimpleRNNCell",Ao(jv);class Gv extends Wv{constructor(e){e.cell=new jv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Jo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Gv.className="SimpleRNN",Ao(Gv);class Hv extends Vv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ag("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Sg(this.units,"units"),this.activation=cv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=px(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==(e=e).length)throw new ag(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jv({ones:()=>tp(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jv({ones:()=>tp(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let s,o,u;0<this.dropout&&this.dropout<1&&(e=hu(e,a[0]));let c=fy(e,this.kernel.read());this.useBias&&(c=xy(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hu(r,i[0]));const l=this.recurrentKernel.read(),[p,d]=Gp(l,[2*this.units,this.units],l.rank-1),h=fy(r,p),[f,m,g]=Gp(c,3,c.rank-1),[y,x]=Gp(h,2,h.rank-1);s=this.recurrentActivation.apply(lu(f,y)),o=this.recurrentActivation.apply(lu(m,x));const b=fy(hu(o,r),d);u=this.activation.apply(lu(g,b));const v=lu(hu(s,r),hu(lu(1,wl(s)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),recurrentActivation:ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Hv.className="GRUCell",Ao(Hv);class Kv extends Wv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Jo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Kv.className="GRU",Ao(Kv);class Xv extends Vv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Sg(this.units,"units"),this.activation=cv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gv(e.kernelRegularizer),this.recurrentRegularizer=gv(e.recurrentRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.kernelConstraint=_g(e.kernelConstraint),this.recurrentConstraint=_g(e.recurrentConstraint),this.biasConstraint=_g(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=px(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Sy{apply(t,r){const a=e.apply([n]),i=(new Iy).apply([n]),s=e.apply([2*n]);return py(py(a,i),s)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ag(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jv({ones:()=>tp(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jv({ones:()=>tp(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(e=hu(e,i[0]));let p=fy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hu(r,s[0])),p=lu(p,fy(r,this.recurrentKernel.read())),this.useBias&&(p=xy(p,this.bias.read()));const[d,h,f,m]=Gp(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(h),c=lu(hu(u,a),hu(o,this.activation.apply(f))),l=this.recurrentActivation.apply(m);const g=hu(l,this.activation.apply(c));return[g,g,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ov(this.activation),recurrentActivation:ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fv(this.kernelRegularizer),recurrentRegularizer:fv(this.recurrentRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Xv.className="LSTMCell",Ao(Xv);class Zv extends Wv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Xv(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Jo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Zv.className="LSTM",Ao(Zv);class Yv extends Vv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Yo((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let i;for(let s=0;s<this.cells.length;++s){const o=this.cells[s];n=r[s],i=0===s?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),a.push(i.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;ux(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Zg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Fx(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return fx(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}mx(t)}}function Jv(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:i}=e,s=()=>null!=i?i(t(),n):by(t(),n),o=()=>vy(s,t,r);return!a||a<=1?Qo(o().clone()):Array(a).fill(void 0).map(o).map((e=>Qo(e.clone())))}Yv.className="StackedRNNCells",Ao(Yv);class Qv extends Wv{constructor(e){if(e.unroll)throw new ig("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ig("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new gx({ndim:5})]}call(e,t){return Yo((()=>{if(null!=this.cell.dropoutMask&&(Jo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ag("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Yo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Vl([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new ng("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ag("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vl(a))):this.states_=[Vl(a)];else if(null==e)Jo(this.states_),null!=this.keptStates&&(Jo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vl(a))):this.states_[0]=Vl(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ag(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Jo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!pe(n.shape,r))throw new ag(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Qo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:i,dilationRate:s}=this.cell,o="channelsFirst"===t,u=e[o?3:2],c=e[o?4:3],l=kv(u,r[0],a,i[0],s[0]),p=kv(c,r[1],a,i[1],s[1]);return[...e.slice(0,2),...o?[n,l,p]:[l,p,n]]}}Qv.className="ConvRNN2D";class ew extends Xv{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:i,dilationRate:s}=e;super(Object.assign({},e,{units:t})),this.filters=t,Sg(this.filters,"filters"),this.kernelSize=Sv(n,2,"kernelSize"),this.kernelSize.forEach((e=>Sg(e,"kernelSize"))),this.strides=Sv(r||1,2,"strides"),this.strides.forEach((e=>Sg(e,"strides"))),this.padding=a||"valid",Hg(this.padding),this.dataFormat=i||"channelsLast",Gg(this.dataFormat),this.dilationRate=Sv(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>Sg(e,"dilationRate")))}build(e){var t;e=px(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ag(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Sy{apply(e,t){return ly([n.apply([r]),jl([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Yo((()=>{if(3!==e.length)throw new ag(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jv({ones:()=>tp(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=(e,t,n)=>t&&t[n]?hu(t[n],e):e;let u=o(r,s,0),c=o(r,s,1),l=o(r,s,2),p=o(r,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jv({ones:()=>tp(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let h=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[y,x,b,v]=Gp(this.kernel.read(),4,3),[w,N,S,k]=this.useBias?Gp(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),c=this.inputConv(c,x,N,this.padding),l=this.inputConv(l,b,S,this.padding),p=this.inputConv(p,v,k,this.padding);const[I,E,C,T]=Gp(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,I),f=this.recurrentConv(f,E),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T);const D=this.recurrentActivation.apply(lu(u,h)),A=this.recurrentActivation.apply(lu(c,f)),M=lu(hu(A,i),hu(D,this.activation.apply(lu(l,m)))),$=hu(this.recurrentActivation.apply(lu(p,g)),this.activation.apply(M));return[$,$,M]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=Oc(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xy(a,n,this.dataFormat):a}recurrentConv(e,t){return Oc(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ew.className="ConvLSTM2DCell",Ao(ew);class tw extends Qv{constructor(e){const t=new ew(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}tw.className="ConvLSTM2D",Ao(tw);class nw extends wx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return vy((()=>by(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}nw.className="Dropout",Ao(nw);class rw extends nw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}rw.className="SpatialDropout1D",Ao(rw);class aw extends wx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Sg(this.units,"units"),this.activation=cv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=qy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=qy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_g(e.kernelConstraint),this.biasConstraint=_g(e.biasConstraint),this.kernelRegularizer=gv(e.kernelRegularizer),this.biasRegularizer=gv(e.biasRegularizer),this.activityRegularizer=gv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=px(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=px(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e),r=Ig(this.activation.getClassName());let a;return null!=r?a=fy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=fy(n,this.kernel.read()),null!=this.bias&&(a=xy(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:ov(this.activation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:fv(this.kernelRegularizer),biasRegularizer:fv(this.biasRegularizer),activityRegularizer:fv(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),biasConstraint:Og(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}aw.className="Dense",Ao(aw);class iw extends wx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=px(e);for(const t of e.slice(1))if(null==t)throw new ag(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ty(e,1)]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=lx(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Xs(n,e)}return function(e){if(e.rank<=1)throw new ag(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ty(e.shape,1)];return pc(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}iw.className="Flatten",Ao(iw);class sw extends wx{constructor(e){super(e),this.supportsMasking=!0,this.activation=cv(e.activation)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ov(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}sw.className="Activation",Ao(sw);class ow extends wx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Yo((()=>{return e=lx(e),t=e,n=this.n,Yo((()=>{if(2!==t.shape.length)throw new ag(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return dy(sy(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ow.className="RepeatVector",Ao(ow);class uw extends wx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new ag("Can only specifiy one unknown dimension.");i=e}else a*=t}const s=ty(e);if(null!==i){if(0===a||s%a!=0)throw new ag(n);r[i]=s/a}else if(s!==a)throw new ag(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return pc(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}uw.className="Reshape",Ao(uw);class cw extends wx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ay(1,e.dims.length+1);if(!pe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new gx({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=px(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Xs(lx(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}cw.className="Permute",Ao(cw);class lw extends wx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=lx(e);return Wu(ep(n,this.maskValue),-1)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e),r=Wu(ep(n,this.maskValue),-1,!0);return hu(n,Cs(r,n.dtype))}))}}lw.className="Masking",Ao(lw);class pw extends wx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(pg(e.inputLength))}this.inputDim=e.inputDim,Sg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Sg(this.outputDim,"outputDim"),this.embeddingsInitializer=qy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gv(e.embeddingsRegularizer),this.activityRegularizer=gv(e.activityRegularizer),this.embeddingsConstraint=_g(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Yo((()=>this.maskZero?(e=lx(e),ep(e,gu(e))):null))}computeOutputShape(e){if(e=px(e),null==this.inputLength)return[...e,this.outputDim];const t=pg(this.inputLength);if(t.length!==e.length-1)throw new ag(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],i=e[r+1];if(null!=a&&null!=i&&a!==i)throw new ag(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=lx(e);"int32"!==n.dtype&&(n=iy(n,"int32"));const r=my(this.embeddings.read(),pc(n,[n.size]));return pc(r,px(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Uy(this.embeddingsInitializer),embeddingsRegularizer:fv(this.embeddingsRegularizer),activityRegularizer:fv(this.activityRegularizer),embeddingsConstraint:Og(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}pw.className="Embedding",Ao(pw);class dw extends wx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ig}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],i=t[r];if(null==a||null==i||a<0||i<0)n.push(null);else if(1===a)n.push(i);else if(1===i)n.push(a);else{if(a!==i)throw new ag("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[px(e)]),(e=e).length<2)throw new ag(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=bg(t),t.length>1)throw new ag(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===bg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Yo((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=ry(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=sy(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],i=e.slice(1).concat([a]);let s=pc(r,[a].concat(ty(e.slice(1))));s=Xs(s,[1,0]),s=pc(s,i),t.push(s),n=!0}else if(e>1){const a=ay(1,e).concat([0]);t.push(Xs(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=pc(Xs(pc(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(ay(0,a-1));r=Xs(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=bg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Yo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ag("`mask` should be an Array");if(!Array.isArray(e))throw new ag("`inputs` should be an Array");if(t.length!==e.length)throw new ag(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:nl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Fl(n,t[e]);return n}))}}class hw extends dw{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lu(t,e[n]);return t}))}}hw.className="Add",Ao(hw);class fw extends dw{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=hu(t,e[n]);return t}))}}fw.className="Multiply",Ao(fw);class mw extends dw{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lu(t,e[n]);return hu(1/e.length,t)}))}}mw.className="Average",Ao(mw);class gw extends dw{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ou(t,e[n]);return t}))}}gw.className="Maximum",Ao(gw);class yw extends dw{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Kl(t,e[n]);return t}))}}yw.className="Minimum",Ao(yw);class xw extends dw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ag("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(pe(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new ag("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Yo((()=>ly(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ag("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ag("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ag("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ag(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Yo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Cs(tp(e[n]),"bool")):t[n].rank<e[n].rank?r.push(nl(t[n],-1)):r.push(t[n]);const a=fc(r,this.axis);return qu(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bw(e,t){for(;e<0;)e+=t;return e}xw.className="Concatenate",Ao(xw);class vw extends dw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ig("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ag(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ag(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>bw(t,e[n].shape.length))):[bw(this.axes,n.shape.length),bw(this.axes,r.shape.length)],this.normalize&&(n=zx(n,t[0]),r=zx(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ig("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ie(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ig("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return Yo((()=>{let n,s;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=pc(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=pc(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=i[0]===i[1]?Il(hu(e,t),i[0]):Il(hu(Xs(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;s=Hs(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);s=Xp(s,t)}return 1===s.shape.length&&(s=nl(s,1)),s}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[bw(this.axes,e.length),bw(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ig("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vw.className="Dot",Ao(vw);class ww extends wx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e);return vy((()=>lu(hy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ww.className="GaussianNoise",Ao(ww);class Nw extends wx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=lx(e);return this.rate>0&&this.rate<1?vy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return hu(n,hy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Nw.className="GaussianDropout",Ao(Nw);class Sw extends wx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||lx(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=lx(e),r=-1.7580993408473766;let a=cl(bp(n),this.rate);a=iy(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,s=-i*r*this.rate,o=lu(hu(t,a),hu(lu(a,-1),r));return lu(hu(o,i),s)};return vy(r,(()=>lx(e)),t.training||!1)}return e}))}}function kw(e,t,n,r,a,i=.001){let s;if(2===e.rank)s=wc(e,t,n,r,a,i);else if(3===e.rank)s=Nc(e,t,n,r,a,i);else{if(4!==e.rank)throw new ig(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=Sc(e,t,n,r,a,i)}return s}Sw.className="AlphaDropout",Ao(Sw);class Iw extends wx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=qy(e.betaInitializer||"zeros"),this.gammaInitializer=qy(e.gammaInitializer||"ones"),this.movingMeanInitializer=qy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=qy(e.movingVarianceInitializer||"ones"),this.betaConstraint=_g(e.betaConstraint),this.gammaConstraint=_g(e.gammaConstraint),this.betaRegularizer=gv(e.betaRegularizer),this.gammaRegularizer=gv(e.gammaRegularizer)}build(e){e=px(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ag(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new gx({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training,r=lx(e),a=r.shape,i=a.length,s=ay(0,i),o=this.axis>=0?this.axis:this.axis+i;s.splice(o,1);const u=og(1,i);u[o]=a[o];const c=s.slice();c.sort();const l=!pe(c,ay(0,i).slice(0,i-1));if(!n)return(()=>{if(l){const e=pc(this.movingMean.read(),u),t=pc(this.movingVariance.read(),u),n=this.center?pc(this.beta.read(),u):null,a=this.scale?pc(this.gamma.read(),u):null;return kw(r,e,t,n,a,this.epsilon)}return kw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,h]=function(e,t,n,r,a=.001){return pe(r.slice().sort(),ay(0,e.rank-1))?function(e,t,n,r,a=.001){return Yo((()=>{const i=Yl(e,r),s=i.mean,o=i.variance;return[kw(e,s,o,n,t,a),s,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Yo((()=>{const i=Yl(e,r),s=i.mean,o=i.variance,u=[];for(const t of ay(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=pc(s,u),l=pc(o,u),p=null==t?null:pc(t,u),d=null==n?null:pc(n,u);return[kw(e,c,l,d,p,a),s,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{Yo((()=>{const r=1-n,a=e.read(),i=hu(Au(a,t),r);e.write(Au(a,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,h,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Uy(this.betaInitializer),gammaInitializer:Uy(this.gammaInitializer),movingMeanInitializer:Uy(this.movingMeanInitializer),movingVarianceInitializer:Uy(this.movingVarianceInitializer),betaRegularizer:fv(this.betaRegularizer),gammaRegularizer:fv(this.gammaRegularizer),betaConstraint:Og(this.betaConstraint),gammaConstraint:Og(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Iw.className="BatchNormalization",Ao(Iw);class Ew extends wx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=qy(e.betaInitializer||"zeros"),this.gammaInitializer=qy(e.gammaInitializer||"ones"),this.betaRegularizer=gv(e.betaRegularizer),this.gammaRegularizer=gv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=px(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==bg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=lx(e),r=n.shape,a=r.length;return Yo((()=>{let{mean:e,variance:t}=Yl(n,this.axis,!0);const i=og(1,a);for(const e of this.axis)i[e]=r[e];const s=e=>null!=e&&e.shape.length!==a?pc(e,i):e;let o=s(this.gamma.read()),u=s(this.beta.read());const c=[],l=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(c.push(r[e]),l.push(1)):(c.push(1),l.push(r[e]));return e=al(e,c),t=al(t,c),o=al(o,l),u=al(u,l),kw(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Uy(this.betaInitializer),gammaInitializer:Uy(this.gammaInitializer),betaRegularizer:fv(this.betaRegularizer),gammaRegularizer:fv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ew.className="LayerNormalization",Ao(Ew);class Cw extends wx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ag(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ag(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ag(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new gx({ndim:4})]}computeOutputShape(e){let t,n;return e=px(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Yo((()=>{return t=lx(e),n=this.padding,r=this.dataFormat,Yo((()=>{if(4!==t.rank)throw new ag(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ag("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ag(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],rp(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Tw(e,t,n,r,a,i){return Yo((()=>{let s;Gg(a),Kg(i),Hg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=Ev(e,a);const o="same"===r?"same":"valid";return s="max"===i?Pl(e,t,n,o):dc(e,t,n,o),"channelsFirst"===a&&(s=Xs(s,[0,3,1,2])),s}))}function Dw(e,t,n,r,a,i){return Yo((()=>{let s;Gg(a),Kg(i),Hg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=Cv(e,a);const o="same"===r?"same":"valid";return s="max"===i?Ul(e,t,n,o):hc(e,t,n,o),"channelsFirst"===a&&(s=Xs(s,[0,4,1,2,3])),s}))}Cw.className="ZeroPadding2D",Ao(Cw);class Aw extends wx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ag(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Sg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ag(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Sg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Hg(this.padding),this.inputSpec=[new gx({ndim:3})]}computeOutputShape(e){const t=kv((e=px(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t),e=sy(lx(e),2);const n=this.poolingFunction(lx(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xp(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Mw extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Tw(e,t,n,r,a,"max")}}Mw.className="MaxPooling1D",Ao(Mw);class $w extends Aw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Tw(e,t,n,r,a,"avg")}}$w.className="AveragePooling1D",Ao($w);class Ow extends wx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ag(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Sg(this.poolSize,"poolSize"),Sg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gg(this.dataFormat),Hg(this.padding),this.inputSpec=[new gx({ndim:4})]}computeOutputShape(e){e=px(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=kv(t,this.poolSize[0],this.padding,this.strides[0]),n=kv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(lx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Rw extends Ow{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Tw(e,t,n,r,a,"max")}}Rw.className="MaxPooling2D",Ao(Rw);class _w extends Ow{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Tw(e,t,n,r,a,"avg")}}_w.className="AveragePooling2D",Ao(_w);class Fw extends wx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ag(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Sg(this.poolSize,"poolSize"),Sg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gg(this.dataFormat),Hg(this.padding),this.inputSpec=[new gx({ndim:5})]}computeOutputShape(e){e=px(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=kv(t,this.poolSize[0],this.padding,this.strides[0]),n=kv(n,this.poolSize[1],this.padding,this.strides[1]),r=kv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(lx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zw extends Fw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Dw(e,t,n,r,a,"max")}}zw.className="MaxPooling3D",Ao(zw);class Bw extends Fw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Gg(a),Hg(r),Dw(e,t,n,r,a,"avg")}}Bw.className="AveragePooling3D",Ao(Bw);class Lw extends wx{constructor(e){super(e),this.inputSpec=[new gx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ig}}class Pw extends Lw{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=lx(e);return Wl(t,1)}))}}Pw.className="GlobalAveragePooling1D",Ao(Pw);class Uw extends Lw{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=lx(e);return kl(t,1)}))}}Uw.className="GlobalMaxPooling1D",Ao(Uw);class qw extends wx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gg(this.dataFormat),this.inputSpec=[new gx({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ig}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ww extends qw{call(e,t){return Yo((()=>{const t=lx(e);return"channelsLast"===this.dataFormat?Wl(t,[1,2]):Wl(t,[2,3])}))}}Ww.className="GlobalAveragePooling2D",Ao(Ww);class Vw extends qw{call(e,t){return Yo((()=>{const t=lx(e);return"channelsLast"===this.dataFormat?kl(t,[1,2]):kl(t,[2,3])}))}}Vw.className="GlobalMaxPooling2D",Ao(Vw);class jw extends wx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Fx(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Gw extends jw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=px(e)).length<3)throw new ag(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=px(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Yo((()=>qv(((e,n)=>[lx(this.layer.call(e,t)),[]]),e=lx(e),[],!1,null,null,!1,!0)[1]))}}Gw.className="TimeDistributed",Ao(Gw);class Hw extends jw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Fx(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Fx(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,wg(Vg,"BidirectionalMergeMode",a),e.weights)throw new ig("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):lg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Uv(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new ag("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new gx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),s.push(...r)}if(null!=r)throw new ig("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof yx;for(const e of i)if(e instanceof yx!==o)throw new ag("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=t.initialState;let r,a,i,s;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=Ip(a,1)),"concat"===this.mergeMode?s=ly([r,a]):"sum"===this.mergeMode?s=lu(r,a):"ave"===this.mergeMode?s=hu(.5,lu(r,a)):"mul"===this.mergeMode?s=hu(r,a):null==this.mergeMode&&(s=[r,a]),this.returnState?null==this.mergeMode?s.concat(i):[s].concat(i):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Zg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Fx(t.layer);if(delete t.layer,null!=t.numConstants)throw new ig("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Kw(e){return new Sx(e)}function Xw(e){return new vv(e)}function Zw(e){return new yv(e)}function Yw(e){return new xv(e)}function Jw(e){return new bv(e)}function Qw(e){return new Nv(e)}function eN(e){return new wv(e)}function tN(e){return new zv(e)}function nN(e){return new Mv(e)}function rN(e){return new Ov(e)}function aN(e){return new $v(e)}function iN(e){return new Rv(e)}function sN(e){return new Fv(e)}function oN(e){return new Bv(e)}function uN(e){return new Lv(e)}function cN(e){return new Pv(e)}function lN(e){return new sw(e)}function pN(e){return new aw(e)}function dN(e){return new nw(e)}function hN(e){return new rw(e)}function fN(e){return new iw(e)}function mN(e){return new ow(e)}function gN(e){return new uw(e)}function yN(e){return new cw(e)}function xN(e){return new pw(e)}function bN(e){return new hw(e)}function vN(e){return new mw(e)}function wN(e){return new xw(e)}function NN(e){return new gw(e)}function SN(e){return new yw(e)}function kN(e){return new fw(e)}function IN(e){return new vw(e)}function EN(e){return new Iw(e)}function CN(e){return new Ew(e)}function TN(e){return new Cw(e)}function DN(e){return new $w(e)}function AN(e){return DN(e)}function MN(e){return DN(e)}function $N(e){return new _w(e)}function ON(e){return $N(e)}function RN(e){return $N(e)}function _N(e){return new Bw(e)}function FN(e){return _N(e)}function zN(e){return _N(e)}function BN(e){return new Pw(e)}function LN(e){return new Ww(e)}function PN(e){return new Uw(e)}function UN(e){return new Vw(e)}function qN(e){return new Mw(e)}function WN(e){return new Rw(e)}function VN(e){return new zw(e)}function jN(e){return new Kv(e)}function GN(e){return new Hv(e)}function HN(e){return new Zv(e)}function KN(e){return new Xv(e)}function XN(e){return new Gv(e)}function ZN(e){return new jv(e)}function YN(e){return new tw(e)}function JN(e){return new ew(e)}function QN(e){return new Wv(e)}function eS(e){return new Yv(e)}function tS(e){return new Hw(e)}function nS(e){return new Gw(e)}Hw.className="Bidirectional",Ao(Hw);const rS=PN,aS=UN,iS=qN,sS=WN;function oS(e){return new ww(e)}function uS(e){return new Nw(e)}function cS(e){return new Sw(e)}function lS(e){return new lw(e)}function pS(e,t){return Hx(e,t)}function dS(e,t){return Yx(e,t)}function hS(e,t){return Jx(e,t)}function fS(e,t){return Kx(e,t)}function mS(e,t){return Qx(e,t)}function gS(e,t){return Zx(e,t)}function yS(e,t){return function(e,t){return Yo((()=>{const n=Xx(e,t),r=function(e,t){return Yo((()=>Cs(Il(Fl(Kc(e,1),Kc(t,0))),"float32")))}(e,t),a=lu(n,r);return Cs(Xc(ul(a,0),du(n,a),0),"float32")}))}(e,t)}function xS(e,t){return Vx(e,t)}function bS(e,t){return Lx(e,t)}function vS(e,t){return Px(e,t)}function wS(e,t){return Px(e,t)}function NS(e,t){return Px(e,t)}function SS(e,t){return Bx(e,t)}function kS(e,t){return Bx(e,t)}function IS(e,t){return Bx(e,t)}function ES(e){return new dv(e)}function CS(e){return lv(t=e),new dv({l1:null!=t?t.l1:null,l2:0});var t}function TS(e){return lv(t=e),new dv({l2:null!=t?t.l2:null,l1:0});var t}class DS extends Tx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zb))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function AS(e,t){return e<t}function MS(e,t){return e>t}class $S extends DS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ig("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=AS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=MS:this.monitorFunc=AS,this.monitorFunc===AS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===AS?1/0:-1/0}async onEpochEnd(e,t){await Ix(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const OS={earlyStopping:function(e){return new $S(e)}};var RS,_S;He().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(RS||(RS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_S||(_S={}));const FS={};function zS(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};FS[e]=n}function BS(e){return FS[e]}function LS(e){delete FS[e]}function PS(e,t,n,r,a){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return US(t.inputNames[i.inputIndexStart],n,r,a);if("tensors"===i.type)return t.inputNames.slice(e,s).map((e=>US(e,n,r,a)));const o=US(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===i.type?u[0]:ze(o.shape,u)}const s=t.attrParams[e];return s&&s.value}function US(e,t,n,r){const[a,i]=VS(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[WS(a,e)]));return void 0!==s?t[WS(a,s)][i]:void 0}function qS(e,t){const[n,r,a]=VS(e);return[WS(n,t&&t.currentContextId),r,a]}function WS(e,t){return t?`${e}-${t}`:e}function VS(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function jS(e,t,n){let r=PS("pad",e,t,n);if("explicit"===r){r=PS("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function GS(e){return e.kept?e:Ts(e)}const HS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],KS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XS=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],ZS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],YS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],JS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QS=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ek=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],tk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],nk=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],rk=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ak=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],ik=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],sk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ok=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],uk=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ck=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],lk=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],pk=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class dk{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[k,I,E,C,T,D,A,M,$,O,R,_,F,z,B,L,P,U,q].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],i=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||i.push(e[t.name]),e)),{});let o=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const p=Object.keys(s);p.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=qS(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(l).length?p.forEach((e=>{const t=s[e];0===t.children.length&&u.push(t)})):Object.keys(l).forEach((e=>{const[t]=qS(e),n=s[t];null!=n&&(n.signatureKey=l[e],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((e=>{const[t]=qS(e),n=s[t];n&&(n.signatureKey=c[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:s,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return i.length>0&&(h.initNodes=i),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=BS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=fk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=kk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=kk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=gk(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=gk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Sk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Sk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=mk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Ek(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ek(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Nk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Nk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Ik(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=bk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=bk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=vk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=xk(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=qS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:yk(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,i]=qS(e),s=r[a];if(null!=s.outputs){const e=s.outputs.indexOf(i);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=qS(s[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,i.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function hk(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=He().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function fk(e,t,n,r=!1){const a=e[t];return null!=a?hk(a.s,r):n}function mk(e,t,n){const r=e[t];return r?r.b:n}function gk(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function yk(e){switch("string"==typeof e&&(e=RS[e]),e){case RS.DT_FLOAT:case RS.DT_HALF:return"float32";case RS.DT_INT32:case RS.DT_INT64:case RS.DT_INT8:case RS.DT_UINT8:return"int32";case RS.DT_BOOL:return"bool";case RS.DT_DOUBLE:return"float32";case RS.DT_STRING:return"string";default:return null}}function xk(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function bk(e,t,n){const r=e[t];return r&&r.type?yk(r.type):n}function vk(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>yk(e))):n}function wk(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Nk(e,t,n){const r=e[t];return r&&r.shape?wk(r.shape):n}function Sk(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function kk(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>hk(e,r))):n}function Ik(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>wk(e))):n}function Ek(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Ck{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return US(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return US(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return gk(this.node.rawAttrs,e,t);if(null!=n.s)return fk(this.node.rawAttrs,e,t);if(null!=n.b)return mk(this.node.rawAttrs,e,t);if(null!=n.shape)return Nk(this.node.rawAttrs,e,t);if(null!=n.type)return bk(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Sk(this.node.rawAttrs,e,t);if(null!=n.list.s)return kk(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Ik(this.node.rawAttrs,e,t);if(null!=n.list.b)return Ek(this.node.rawAttrs,e,t);if(null!=n.list.type)return vk(this.node.rawAttrs,e,t)}return t}}function Tk(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],i=t[r];ie(a<0||i<0||a===i,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Dk(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Ak(e,t,n){let r=Mk(e,n);const a=!Dk(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Mk(e.shape,r)})),!Dk(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Mk(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],i=t[r];if(a>=0&&i>=0&&a!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:i}return n}class $k{constructor(e,t,n,r,a,i,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=ku(0),Qo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Tk(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Qo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Mi([],[0].concat(this.elementShape));const n=this.readMany(e);return Tk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Zp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Mi([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Tk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),fc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,cd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,i=[];Yo((()=>{t=pc(t,[1,n,a]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:r[n-1],0],o=[1,e[n],a];i[n]=pc(gc(t,s,o),this.elementShape)}return i}));const s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,i)}}class Ok{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Tk(t,e.shape,"TensorList shape mismatch: "),Qo(e)})),this.idTensor=ku(0),this.maxNumElements=r,Qo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ok([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Tk(e,this.elementShape,"TensorList shape mismatch: ");const r=Ak(this.elementShape,this.tensors,e);return Yo((()=>{const e=this.tensors.map((e=>pc(e,r)));return Zp(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ak(this.elementShape,this.tensors,e),r=this.tensors.pop();return Tk(r.shape,e,"TensorList shape mismatch: "),pc(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Tk(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Tk(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Ak(this.elementShape,this.tensors,t);return pc(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Tk(this.elementShape,t.shape,"TensorList shape mismatch: "),Qo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Tk(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Ak(this.elementShape,this.tensors,n);return 0===e.length?Mi([],[0].concat(r)):Yo((()=>{const t=e.map((e=>pc(this.tensors[e],r)));return Zp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Tk(this.elementShape,t,"TensorList shape mismatch: ");const n=Ak(this.elementShape,this.tensors,t);return 0===this.size()?Mi([],[0].concat(n)):Yo((()=>{const e=this.tensors.map((e=>pc(e,n)));return fc(e,0)}))}}function Rk(e,t,n){const[r,a]=PS("fusedOps",e,t,n),i="biasadd"===r,s=!i,o="prelu"===a,u="fusedbatchnorm"===r,c=PS("numArgs",e,t,n);if(i){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=PS("strides",e,t,n),p=jS(e,t,n),d=PS("dataFormat",e,t,n).toUpperCase(),h=PS("dilations",e,t,n);let[f,m]=PS("args",e,t,n);return s&&(m=f,f=void 0),{stride:l,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:PS("leakyreluAlpha",e,t,n)}}function _k(e,t,n){return{boxes:PS("boxes",e,t,n),scores:PS("scores",e,t,n),maxOutputSize:PS("maxOutputSize",e,t,n),iouThreshold:PS("iouThreshold",e,t,n),scoreThreshold:PS("scoreThreshold",e,t,n),softNmsSigma:PS("softNmsSigma",e,t,n)}}class Fk{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ku(0),this.tensorMap=new Map,Qo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ku(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Yo((()=>{const e=cd(t),r=n.length,a=e.length;ie(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Qo(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Yo((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],i=this.findWithDefault(a,t);e.push(i)}return Zp(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function zk(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Yo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[lu(PS("a",e,t,n),PS("b",e,t,n))];case"AddN":return[Uu(PS("tensors",e,t,n))];case"FloorMod":case"Mod":return[Zl(PS("a",e,t,n),PS("b",e,t,n))];case"Mul":return[hu(PS("a",e,t,n),PS("b",e,t,n))];case"RealDiv":case"Div":return[du(PS("a",e,t,n),PS("b",e,t,n))];case"DivNoNan":return[Zc(PS("a",e,t,n),PS("b",e,t,n))];case"FloorDiv":return[pu(PS("a",e,t,n),PS("b",e,t,n))];case"Sub":return[Au(PS("a",e,t,n),PS("b",e,t,n))];case"Minimum":return[Kl(PS("a",e,t,n),PS("b",e,t,n))];case"Maximum":return[Ou(PS("a",e,t,n),PS("b",e,t,n))];case"Pow":return[Du(PS("a",e,t,n),PS("b",e,t,n))];case"SquaredDifference":return[Kp(PS("a",e,t,n),PS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Yo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[$u(PS("x",e,t,n))];case"Acos":return[Lu(PS("x",e,t,n))];case"Acosh":return[Pu(PS("x",e,t,n))];case"Asin":return[Gu(PS("x",e,t,n))];case"Asinh":return[Hu(PS("x",e,t,n))];case"Atan":return[Ku(PS("x",e,t,n))];case"Atan2":return[Xu(PS("x",e,t,n),PS("y",e,t,n))];case"Atanh":return[Zu(PS("x",e,t,n))];case"Ceil":return[Cc(PS("x",e,t,n))];case"Complex":return[Di(PS("real",e,t,n),PS("imag",e,t,n))];case"Cos":return[Pc(PS("x",e,t,n))];case"Cosh":return[Uc(PS("x",e,t,n))];case"Elu":return[Qc(PS("x",e,t,n))];case"Erf":return[el(PS("x",e,t,n))];case"Exp":return[tl(PS("x",e,t,n))];case"Expm1":return[rl(PS("x",e,t,n))];case"Floor":return[sl(PS("x",e,t,n))];case"Log":return[bl(PS("x",e,t,n))];case"Log1p":return[vl(PS("x",e,t,n))];case"Imag":return[ll(PS("x",e,t,n))];case"Neg":return[wl(PS("x",e,t,n))];case"Reciprocal":return[Np(PS("x",e,t,n))];case"Real":return[wp(PS("x",e,t,n))];case"Relu":return[Sp(PS("x",e,t,n))];case"Round":return[Ap(PS("x",e,t,n))];case"Selu":return[$p(PS("x",e,t,n))];case"Sigmoid":return[mc(PS("x",e,t,n))];case"Sin":return[Fp(PS("x",e,t,n))];case"Sign":return[_p(PS("x",e,t,n))];case"Sinh":return[zp(PS("x",e,t,n))];case"Softplus":return[Nl(PS("x",e,t,n))];case"Sqrt":return[fu(PS("x",e,t,n))];case"Square":return[mu(PS("x",e,t,n))];case"Tanh":return[yc(PS("x",e,t,n))];case"Tan":return[Qp(PS("x",e,t,n))];case"ClipByValue":return[Tc(PS("x",e,t,n),PS("clipValueMin",e,t,n),PS("clipValueMax",e,t,n))];case"Relu6":return[kp(PS("x",e,t,n))];case"Rsqrt":return[Mp(US(e.inputNames[0],t,n))];case"Prod":return[pp(PS("x",e,t,n),PS("axes",e,t,n))];case"LeakyRelu":return[fl(PS("x",e,t,n),PS("alpha",e,t,n))];case"Prelu":return[lp(PS("x",e,t,n),PS("alpha",e,t,n))];case"IsNan":return[hl(US(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=PS("thenBranch",e,t,n),a=PS("elseBranch",e,t,n),i=PS("cond",e,t,n),s=PS("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=PS("body",e,t,n),a=PS("cond",e,t,n),i=PS("args",e,t,n),s=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id));let u=await s[0].data();s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let c=i;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const i=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await i[0].data(),i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":return[GS(PS("pred",e,t,n))];case"Switch":{const r=PS("pred",e,t,n);let a=PS("data",e,t,n);return a.kept||(a=GS(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==US(e,t,n)));return r?[GS(US(r,t,n))]:void 0}case"Enter":{const r=PS("frameName",e,t,n),a=PS("tensor",e,t,n);return n.enterFrame(r),[GS(a)]}case"Exit":{const r=PS("tensor",e,t,n);return n.exitFrame(),[GS(r)]}case"NextIteration":{const r=PS("tensor",e,t,n);return n.nextIteration(),[GS(r)]}case"TensorArrayV3":{const r=PS("size",e,t,n),a=PS("dtype",e,t,n),i=PS("elementShape",e,t,n),s=PS("dynamicSize",e,t,n),o=PS("clearAfterRead",e,t,n),u=PS("identicalElementShapes",e,t,n),c=PS("name",e,t,n),l=new $k(c,a,r,i,u,s,o);return n.addTensorArray(l),[l.idTensor,ku(1)]}case"TensorArrayWriteV3":{const r=PS("tensorArrayId",e,t,n),a=PS("index",e,t,n),i=PS("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(a,i),[s.idTensor]}case"TensorArrayReadV3":{const r=PS("tensorArrayId",e,t,n),a=PS("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=PS("tensorArrayId",e,t,n),a=PS("indices",e,t,n),i=PS("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{const r=PS("tensorArrayId",e,t,n),a=PS("indices",e,t,n),i=PS("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(a,i),[s.idTensor]}case"TensorArrayConcatV3":{const r=PS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),i=PS("dtype",e,t,n);return[a.concat(i)]}case"TensorArraySplitV3":{const r=PS("tensorArrayId",e,t,n),a=PS("tensor",e,t,n),i=PS("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(i,a),[s.idTensor]}case"TensorArraySizeV3":{const r=PS("tensorArrayId",e,t,n);return[ku(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=PS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=PS("tensorListId",e,t,n),a=PS("index",e,t,n),i=PS("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(a,i),[s.idTensor]}case"TensorListGetItem":{const r=PS("tensorListId",e,t,n),a=PS("index",e,t,n),i=PS("elementShape",e,t,n),s=PS("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=PS("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const i=new Ok([],n,e.dtype,r),s=cd(e,0);return t.forEach(((e,t)=>{i.setItem(e,s[t])})),i}(PS("tensor",e,t,n),r,PS("elementShape",e,t,n),PS("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=PS("elementShape",e,t,n),a=PS("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=function(e,t,n){return new Ok([],e,t,n)}(r,a,PS(i,e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{const r=PS("tensorListId",e,t,n),a=PS("indices",e,t,n),i=PS("elementShape",e,t,n),s=PS("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,s,i)]}case"TensorListStack":{const r=PS("tensorListId",e,t,n),a=PS("elementShape",e,t,n),i=PS("elementDType",e,t,n),s=PS("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,i,s)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Tk(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=cd(e);return new Ok(a,t,r)}(PS("tensor",e,t,n),PS("elementShape",e,t,n),PS("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=PS("tensorListId",e,t,n),a=n.getTensorList(r.id),i=PS("dtype",e,t,n),s=PS("elementShape",e,t,n);return[a.concat(i,s)]}case"TensorListPushBack":{const r=PS("tensorListId",e,t,n),a=PS("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const r=PS("tensorListId",e,t,n),a=PS("elementShape",e,t,n),i=PS("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{const r=PS("tensor",e,t,n),a=PS("elementShape",e,t,n),i=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const i=Mk(e.shape.slice(1),n),s=0===r?0:e.size/r,o=Yo((()=>{const n=[];e=pc(e,[1,r,s]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],s];n[r]=pc(gc(e,o,u),i)}return e.dispose(),n})),u=new Ok([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,PS("lengths",e,t,n),a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Yo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=PS("stride",e,t,n),a=PS("pad",e,t,n),i=PS("dataFormat",e,t,n).toUpperCase(),s=PS("dilation",e,t,n);return[Rc(PS("x",e,t,n),PS("filter",e,t,n),r,a,i,s)]}case"Conv2D":{const r=PS("strides",e,t,n),a=jS(e,t,n),i=PS("dataFormat",e,t,n).toUpperCase(),s=PS("dilations",e,t,n);return[Oc(PS("x",e,t,n),PS("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:s,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Rk(e,t,n);return[Dd({x:PS("x",e,t,n),filter:PS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[s[1],s[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:s,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Rk(e,t,n);return[$d({x:PS("x",e,t,n),filter:PS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[s[1],s[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=PS("outputShape",e,t,n),a=PS("strides",e,t,n),i=jS(e,t,n);return[Fc(PS("x",e,t,n),PS("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=PS("strides",e,t,n),a=jS(e,t,n),i=PS("dilations",e,t,n),s=PS("dataFormat",e,t,n).toUpperCase();return[jc(PS("input",e,t,n),PS("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"Conv3D":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("dataFormat",e,t,n).toUpperCase(),s=PS("dilations",e,t,n);return[zc(PS("x",e,t,n),PS("filter",e,t,n),[r[1],r[2],r[3]],a,i,[s[1],s[2],s[3]])]}case"AvgPool":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("kernelSize",e,t,n);return[dc(PS("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("kernelSize",e,t,n);return[Pl(PS("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("kernelSize",e,t,n),s=PS("includeBatchInIndex",e,t,n),{result:o,indexes:u}=ql(PS("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,s);return[o,u]}case"AvgPool3D":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("kernelSize",e,t,n);return[hc(PS("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("kernelSize",e,t,n);return[Ul(PS("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=PS("strides",e,t,n),a=PS("pad",e,t,n),i=PS("dilations",e,t,n),s=r[1],o=r[2],u=i[1],c=i[2];return[Hc(PS("x",e,t,n),PS("filter",e,t,n),[s,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=PS("shape",e,t,n),a=PS("dtype",e,t,n);return[Cu(r,PS("value",e,t,n),a)]}case"LinSpace":return[yl(PS("start",e,t,n),PS("stop",e,t,n),PS("num",e,t,n))];case"Multinomial":{const r=PS("logits",e,t,n),a=PS("numSamples",e,t,n),i=PS("seed",e,t,n);return[Ql(r,a,i)]}case"OneHot":{const r=PS("indices",e,t,n),a=PS("depth",e,t,n),i=PS("onValue",e,t,n),s=PS("offValue",e,t,n);return[Ks(r,a,i,s)]}case"Ones":return[jl(PS("shape",e,t,n),PS("dtype",e,t,n))];case"OnesLike":return[tp(PS("x",e,t,n))];case"RandomUniform":return[bp(PS("shape",e,t,n),PS("minval",e,t,n),PS("maxval",e,t,n),PS("dtype",e,t,n))];case"Range":return[vp(PS("start",e,t,n),PS("stop",e,t,n),PS("step",e,t,n),PS("dtype",e,t,n))];case"TruncatedNormal":{const r=PS("shape",e,t,n),a=PS("mean",e,t,n),i=PS("stdDev",e,t,n),s=PS("seed",e,t,n);return[sd(r,a,i,PS("dtype",e,t,n),s)]}case"Zeros":return[Vl(PS("shape",e,t,n),PS("dtype",e,t,n))];case"ZerosLike":return[gu(PS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o,softNmsSigma:u}=_k(e,t,n),c=await Th.nonMaxSuppressionWithScoreAsync(r,a,i,s,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o}=_k(e,t,n),u=PS("padToMaxOutputSize",e,t,n),c=await Th.nonMaxSuppressionPaddedAsync(r,a,i,s,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o}=_k(e,t,n);return[await Th.nonMaxSuppressionAsync(r,a,i,s,o)]}case"Where":{const r=Cs(PS("condition",e,t,n),"bool"),a=[await dd(r)];return r.dispose(),a}case"ListDiff":return Rp(PS("x",e,t,n),PS("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Yo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=PS("x",e,t,n),a=PS("k",e,t,n),i=PS("sorted",e,t,n),s=id(r,a,i);return[s.values,s.indices]}case"Unique":{const r=PS("x",e,t,n),a=od(r);return[a.values,a.indices]}case"UniqueV2":{const r=PS("x",e,t,n),a=PS("axis",e,t,n),i=od(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Yo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=PS("images",e,t,n),a=PS("size",e,t,n),i=PS("alignCorners",e,t,n),s=PS("halfPixelCenters",e,t,n);return[Th.resizeBilinear(r,[a[0],a[1]],i,s)]}case"ResizeNearestNeighbor":{const r=PS("images",e,t,n),a=PS("size",e,t,n),i=PS("alignCorners",e,t,n),s=PS("halfPixelCenters",e,t,n);return[Th.resizeNearestNeighbor(r,[a[0],a[1]],i,s)]}case"CropAndResize":{const r=PS("image",e,t,n),a=PS("boxes",e,t,n),i=PS("boxInd",e,t,n),s=PS("cropSize",e,t,n),o=PS("method",e,t,n),u=PS("extrapolationValue",e,t,n);return[Th.cropAndResize(r,a,i,s,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Yo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=PS("default",e,t,n);return[US(e.name,t,n)||r];case"Placeholder":return[US(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[GS(PS("x",e,t,n))];case"IdentityN":return PS("x",e,t,n).map((e=>GS(e)));case"Shape":return[ed(PS("x",e,t,n).shape,"int32")];case"ShapeN":return PS("x",e,t,n).map((e=>ed(e.shape)));case"Size":return[ku(PS("x",e,t,n).size,"int32")];case"Rank":return[ku(PS("x",e,t,n).rank,"int32")];case"NoOp":return[ku(1)];case"Print":const a=PS("x",e,t,n),i=PS("data",e,t,n),s=PS("message",e,t,n),o=PS("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Yo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Kc(PS("a",e,t,n),PS("b",e,t,n))];case"NotEqual":return[ep(PS("a",e,t,n),PS("b",e,t,n))];case"Greater":return[ul(PS("a",e,t,n),PS("b",e,t,n))];case"GreaterEqual":return[cl(PS("a",e,t,n),PS("b",e,t,n))];case"Less":return[ml(PS("a",e,t,n),PS("b",e,t,n))];case"LessEqual":return[gl(PS("a",e,t,n),PS("b",e,t,n))];case"LogicalAnd":return[Fl(PS("a",e,t,n),PS("b",e,t,n))];case"LogicalNot":return[zl(PS("a",e,t,n))];case"LogicalOr":return[Bl(PS("a",e,t,n),PS("b",e,t,n))];case"Select":case"SelectV2":return[Xc(PS("condition",e,t,n),PS("a",e,t,n),PS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Yo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Hs(PS("a",e,t,n),PS("b",e,t,n),PS("transposeA",e,t,n),PS("transposeB",e,t,n))];case"Einsum":return[Jc(PS("equation",e,t,n),...PS("tensors",e,t,n))];case"Transpose":return[Xs(PS("x",e,t,n),PS("perm",e,t,n))];case"_FusedMatMul":const[r,a]=PS("fusedOps",e,t,n),i="biasadd"===r,s="prelu"===a,o=PS("numArgs",e,t,n),u=PS("leakyreluAlpha",e,t,n);if(i){if(s&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=PS("args",e,t,n);return[Od({a:PS("a",e,t,n),b:PS("b",e,t,n),transposeA:PS("transposeA",e,t,n),transposeB:PS("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Yo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[vc(PS("x",e,t,n),PS("mean",e,t,n),PS("variance",e,t,n),PS("offset",e,t,n),PS("scale",e,t,n),PS("epsilon",e,t,n))];case"LRN":return[xl(PS("x",e,t,n),PS("radius",e,t,n),PS("bias",e,t,n),PS("alpha",e,t,n),PS("beta",e,t,n))];case"Softmax":return[qp(PS("x",e,t,n))];case"LogSoftmax":return[El(PS("x",e,t,n))];case"SparseToDense":return[xd(PS("sparseIndices",e,t,n),PS("outputShape",e,t,n),PS("sparseValues",e,t,n),PS("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Yo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[kl(PS("x",e,t,n),r,a)]}case"Mean":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[Wl(PS("x",e,t,n),r,a)]}case"Min":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[Hl(PS("x",e,t,n),r,a)]}case"Sum":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[Il(PS("x",e,t,n),r,a)]}case"All":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[qu(PS("x",e,t,n),r,a)]}case"Any":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[Wu(PS("x",e,t,n),r,a)]}case"ArgMax":{const r=PS("axis",e,t,n);return[Vu(PS("x",e,t,n),r)]}case"ArgMin":{const r=PS("axis",e,t,n);return[ju(PS("x",e,t,n),r)]}case"Prod":{const r=PS("axis",e,t,n),a=PS("keepDims",e,t,n);return[pp(PS("x",e,t,n),r,a)]}case"Cumsum":{const r=PS("axis",e,t,n),a=PS("exclusive",e,t,n),i=PS("reverse",e,t,n);return[qc(PS("x",e,t,n),r,a,i)]}case"Bincount":const r=PS("x",e,t,n),a=PS("weights",e,t,n),i=PS("size",e,t,n);return[kc(r,a,i)];case"DenseBincount":{const r=PS("x",e,t,n),a=PS("weights",e,t,n),i=PS("size",e,t,n),s=PS("binaryOutput",e,t,n);return[Wc(r,a,i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Yo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=PS("n",e,t,n),a=PS("axis",e,t,n);let i=PS("tensors",e,t,n);return i=i.slice(0,r),[fc(i,a)]}case"Gather":{const r=PS("x",e,t,n),a=PS("indices",e,t,n);return[ol(r,Cs(a,"int32"),0)]}case"GatherV2":{const r=PS("axis",e,t,n),a=PS("batchDims",e,t,n),i=PS("x",e,t,n),s=PS("indices",e,t,n);return[ol(i,Cs(s,"int32"),r,a)]}case"Reverse":{const r=PS("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=PS("x",e,t,n);return[Ip(i,a)]}case"ReverseV2":{const r=PS("axis",e,t,n),a=PS("x",e,t,n);return[Ip(a,r)]}case"Slice":{const r=PS("begin",e,t,n),a=PS("size",e,t,n);return[gc(PS("x",e,t,n),r,a)]}case"StridedSlice":{const r=PS("begin",e,t,n),a=PS("end",e,t,n),i=PS("strides",e,t,n),s=PS("beginMask",e,t,n),o=PS("endMask",e,t,n),u=PS("ellipsisMask",e,t,n),c=PS("newAxisMask",e,t,n),l=PS("shrinkAxisMask",e,t,n),p=PS("x",e,t,n);return[Jp(p,r,a,i,s,o,u,c,l)]}case"Pack":return Yo((()=>{const r=PS("axis",e,t,n),a=PS("tensors",e,t,n),i=a[0].shape,s=Xp(a[0]).shape,o=a.map((e=>{const t=pe(e.shape,i);if(!t&&!pe(Xp(e).shape,s))throw new Error("the input tensors shape does not match");return t?e:pc(e,i)}));return[Zp(o,r)]}));case"Unpack":{const r=PS("axis",e,t,n),a=PS("tensor",e,t,n);return cd(a,r)}case"Tile":{const r=PS("reps",e,t,n);return[al(PS("x",e,t,n),r)]}case"Split":case"SplitV":{const r=PS("axis",e,t,n),a=PS("numOrSizeSplits",e,t,n),i=PS("x",e,t,n);return Gp(i,a,r)}case"ScatterNd":{const r=PS("indices",e,t,n),a=PS("values",e,t,n),i=PS("shape",e,t,n);return[yd(r,a,i)]}case"GatherNd":{const r=PS("x",e,t,n),a=PS("indices",e,t,n);return[bd(r,a)]}case"SparseToDense":{const r=PS("sparseIndices",e,t,n),a=PS("outputShape",e,t,n),i=PS("sparseValues",e,t,n),s=PS("defaultValue",e,t,n);return[xd(r,i,a,i.dtype===s.dtype?s:Cs(s,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Yo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:s}=Mh.sparseFillEmptyRows(PS("indices",e,t,n),PS("values",e,t,n),PS("denseShape",e,t,n),PS("defaultValue",e,t,n));return[r,a,i,s]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Mh.sparseReshape(PS("inputIndices",e,t,n),PS("inputShape",e,t,n),PS("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Mh.sparseSegmentMean(PS("data",e,t,n),PS("indices",e,t,n),PS("segmentIds",e,t,n))];case"SparseSegmentSum":return[Mh.sparseSegmentSum(PS("data",e,t,n),PS("indices",e,t,n),PS("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Yo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Wp(PS("x",e,t,n))];case"IFFT":return[Vp(PS("x",e,t,n))];case"RFFT":return[Hp(PS("x",e,t,n))];case"IRFFT":return[jp(PS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Yo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=$h.stringNGrams(PS("data",e,t,n),PS("dataSplits",e,t,n),PS("separator",e,t,n),PS("nGramWidths",e,t,n),PS("leftPad",e,t,n),PS("rightPad",e,t,n),PS("padWidth",e,t,n),PS("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:i}=$h.stringSplit(PS("input",e,t,n),PS("delimiter",e,t,n),PS("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[$h.stringToHashBucketFast(PS("input",e,t,n),PS("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Cs(PS("x",e,t,n),PS("dtype",e,t,n))];case"ExpandDims":{const r=PS("axis",e,t,n);return[nl(PS("x",e,t,n),r)]}case"Squeeze":{const r=PS("axis",e,t,n);return[Xp(PS("x",e,t,n),r)]}case"Reshape":return[pc(PS("x",e,t,n),PS("shape",e,t,n))];case"MirrorPad":return[Xl(PS("x",e,t,n),PS("padding",e,t,n),PS("mode",e,t,n))];case"PadV2":case"Pad":return[rp(PS("x",e,t,n),PS("padding",e,t,n),PS("constantValue",e,t,n))];case"SpaceToBatchND":{const r=PS("blockShape",e,t,n),a=PS("paddings",e,t,n);return[up(PS("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=PS("blockShape",e,t,n),a=PS("crops",e,t,n);return[bc(PS("x",e,t,n),r,a)]}case"DepthToSpace":{const r=PS("blockSize",e,t,n),a=PS("dataFormat",e,t,n).toUpperCase();return[Vc(PS("x",e,t,n),r,a)]}case"BroadcastTo":return[Ec(PS("x",e,t,n),PS("shape",e,t,n))];case"BroadcastArgs":return[Ic(PS("s0",e,t,n),PS("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=PS("keyDType",e,t,n),i=PS("valueDType",e,t,n),s=new Fk(a,i);return r.addHashTable(e.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=PS("tableHandle",e,t,n,r),i=PS("keys",e,t,n),s=PS("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{const a=PS("tableHandle",e,t,n,r),i=PS("keys",e,t,n),s=PS("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=PS("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=BS(e.op);if(a&&a.customExecutor)return a.customExecutor(new Ck(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ve(a)?a.then((e=>[].concat(e))):[].concat(a)}class Bk{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Lk(e,t,n,r){const a=new Set,i=[];let s=null,o=null;const u=new Set,c=Object.keys(e).map((e=>VS(e)[0]));let l=[];null!=r&&(l=r.map((e=>VS(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Wk(e)||Vk(e)||jk(e))&&null==s&&(s=e,o=s.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):i.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:i,dynamicNode:s,syncInputs:o}}const Pk=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Uk=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],qk=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Wk(e){return Pk.indexOf(e.op)>=0}function Vk(e){return Uk.indexOf(e.op)>=0}function jk(e){return qk.indexOf(e.op)>=0}class Gk{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Gk(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Lk(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,i=[],s=Object.keys(a).map((e=>VS(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;s.forEach((e=>{r.has(e.name)&&i.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&i.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&i.push(e)}));const u=new Set,c=[];for(;i.length>0;){const e=i.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&i.push(e)}))}return c}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[VS(e)[0]])),a=t.map((e=>VS(e)[0]));let i=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);const s=this.getCompilationKey(r,i);let o=this.compiledMap.get(s);null==o&&(o=this.compile(e,i),this.compiledMap.set(s,o));const u={},c={};return Yo((()=>{const n=new Bk(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=VS(t),i=[];i[a]=e[t],r[n]=i}));const i=this.getFrozenTensorIds(r),s={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=zk(t,r,n,this._resourceManager);if(Ve(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,i,a,s)}}return null==this.parent&&n.dispose(i),t.map((e=>US(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,i,s){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const i=function(e,t,n){return t[WS(e,n.currentContextId)]}(e.name,n,r);null!=i&&i.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=s[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=qS(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete s[e.id]}else null!=n&&s[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=He().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const i=new Bk(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,i,t,n);const s=t.map((e=>US(e,this.tensorsMap,i))),o=s.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),s}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),i=a.map((e=>this.graph.nodes[VS(e)[0]])),s=n.map((e=>VS(e)[0]));let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:p}=Lk(e,o,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=VS(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){const e=this.processStack(i,d,t,h,g,m,s,f,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Wk(e)&&!US(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return h}processStack(e,t,n,r,a,i,s,o,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&PS("isConstant",e.node,r,n)&&([l]=qS(e.node.name,n)),null==r[e.node.name]){const p=zk(e.node,r,n,this._resourceManager);l||([l]=qS(e.node.name,n));const d=n.currentContext;Ve(p)?c.push(p.then((c=>(r[l]=c,n.currentContext=d,this.checkTensorForDisposal(l,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,u),c)))):(r[l]=p,this.checkTensorForDisposal(l,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,i){e.children.forEach((e=>{const[s]=qS(e.name,n);!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!US(e,r,n)))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!US(e,r,n)))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=VS(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ie(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ie(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=VS(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=VS(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Hk{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Kk{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Hk}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=qs(e,this.loadOptions);else{const t=Ki(e,this.loadOptions);if(0===t.length)t.push(qs(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ri(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Gk(dk.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=dk.Instance.transformGraph(e.modelInitializer);this.initializer=new Gk(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Hi(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Xa||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Xk(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Kk(e,t);return await n.load(),n}const Zk="3.13.0";var Yk,Jk=n(377);function Qk(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(aI(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const s=Qk(e[i],t,n,r);a[i]=s}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function eI(e,t=nI){return tI(e,t)}function tI(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(aI(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=tI(e.map((e=>e[i])),t,n);a[i]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function nI(e){return null===e?null:aI(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function rI(e,t){const n=new Map;Qk(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Ve(t)){const r=await t;n.set(e,r)}}return Qk(e,t,n)}function aI(e){let t=!1;if(He().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Xa)&&!(e instanceof Promise)&&!t)}function iI(e){return e instanceof Xa?{value:e.clone(),recurse:!1}:aI(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class sI{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class oI extends sI{constructor(){super(oI.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function uI(e){return new pI(e)}function cI(e){return new dI(e)}oI.INITIAL_CAPACITY=32;class lI{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bI(this,e)}filter(e){return new yI(this,e)}map(e){return new xI(this,e)}mapAsync(e){return new vI(this,e)}serialMapAsync(e){return new vI(this,e).serial()}flatmap(e){return new NI(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new gI(this,e,t)}columnMajorBatch(e,t=!0,n=nI){return this.rowMajorBatch(e,t).map((e=>eI(e,n)))}concatenate(e,t){return new SI(uI([this,e]),t)}take(e){return e<0||null==e?this:new mI(this,e)}skip(e){return e<0||null==e?this:new fI(this,e)}prefetch(e){return new II(this,e)}shuffle(e,t){return new EI(this,e,t)}serial(){return new hI(this)}}class pI extends lI{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return Qk(e,t)}(t,iI)),done:!1};var t}}class dI extends lI{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class hI extends lI{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class fI extends lI{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Jo(e.value)}return this.upstream.next()}}class mI extends lI{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class gI extends lI{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class yI extends lI{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Jo(e.value)}}}class xI extends lI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ci(e.value),n=this.transform(e.value),r=ci(n);for(const e of t)ui(e,r)||e.dispose();return{value:n,done:!1}}}class bI extends lI{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class vI extends lI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ci(e.value),n=await this.transform(e.value),r=ci(n);for(const e of t)ui(e,r)||e.dispose();return{value:n,done:!1}}}class wI extends lI{constructor(){super(),this.outputQueue=new oI,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class NI extends wI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ci(e.value),n=this.transform(e.value),r=ci(n);this.outputQueue.pushAll(n);for(const e of t)ui(e,r)||e.dispose();return!0}}class SI extends lI{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Yk||(Yk={}));class kI extends lI{constructor(e,t=Yk.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await rI(this.iterators,(function(e){return e instanceof lI?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Yk.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Yk.SHORTEST:return{value:null,done:!0};case Yk.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class II extends lI{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new sI(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class EI extends II{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Jk.alea(n||Oa().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class CI{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ie(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),TI((async()=>(await n.iterator()).columnMajorBatch(e,t,MI)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,TI((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,TI((async()=>(await t.iterator()).filter((t=>Yo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return TI((async()=>(await t.iterator()).map((t=>Yo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return TI((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return TI((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,TI((async()=>{return n=cI((async()=>({value:await t.iterator(),done:!1}))).take(e),new SI(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,TI((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Jk.alea(t||Oa().toString());return TI((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,TI((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function TI(e,t=null){return new class extends CI{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function DI(e){return TI((async()=>uI(e)),e.length)}function AI(e){if(!aI(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return TI((async()=>function(e,t=Yk.FAIL){return new kI(e,t)}(await rI(e,(e=>{if(e instanceof CI)return{value:e.iterator(),recurse:!1};if(aI(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),Yk.SHORTEST)),t)}function MI(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Xa||Ee(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Xa?Zp(e):Mi(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}CI.MAX_BUFFER_SIZE=1e4;class $I extends CI{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const OI='"',RI=Symbol("out"),_I=Symbol("field"),FI=Symbol("quote"),zI=Symbol("quoteafterquote"),BI=Symbol("quoteinquote");class LI extends CI{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new $I(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ie(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ie(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ie(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const i=this.fullColumnNames[a],s=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||s){const o=t[a];let u=null;if(""===o)if(s&&void 0!==s.default)u=s.default;else{if(s&&(s.required||s.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=s&&"bool"===s.dtype?this.getBoolean(o):o;else if(s&&s.dtype)switch(s.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}s&&s.isLabel?r[i]=u:n[i]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let i=RI;for(let t=0;t<a;t++)switch(i){case RI:switch(e.charAt(t)){case OI:r=t+1,i=FI;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),i=RI;break;default:i=_I,r=t}break;case _I:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),i=RI,r=t+1);break;case FI:e.charAt(t)===OI&&(i=zI);break;case zI:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),i=RI,r=t+1;break;case OI:i=FI;break;default:i=BI}break;case BI:e.charAt(t)===OI&&(i=FI)}if(i===zI?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class PI extends lI{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(He().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new PI(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ce(t));return n.set(e,n.length-e.length),Mi(n,t)}}class UI extends lI{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ed([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,i=t+r;this.cropBox=td([r,n,i,a],[1,4])}else this.cropBox=td([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(He().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new UI(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ie("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=io(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Yo((()=>{const t=nl(Cs(e,"float32"),0);let n;n=Th.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return pc(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class qI{}class WI extends lI{split(e){return new VI(this,e)}}class VI extends WI{constructor(e,t){super(),this.upstream=e,this.impl=new jI(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class jI extends wI{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class GI extends lI{decodeUTF8(){return new HI(this)}}class HI extends WI{constructor(e){super(),this.upstream=e,this.impl=new KI(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class KI extends wI{constructor(e){if(super(),this.upstream=e,He().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=He().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class XI extends GI{constructor(e,t={}){super(),this.file=e,this.options=t,ie(e instanceof Uint8Array||!!He().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}}function ZI(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class YI extends qI{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(ZI(this.input)&&He().get("IS_NODE")){const e=n(792);this.input=e.readFileSync(this.input.substr(7))}return new XI(this.input,this.options)}}class JI extends qI{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return ZI(this.url)?new YI(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;var i;"string"==typeof e?r=e:(r=e.url,a={method:(i=e).method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity});const s=await(n||Ra)(r,a);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new XI(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}}function QI(e,t={}){return new LI(new JI(e),t)}function eE(e){const t=cI(e);return TI((async()=>t))}function tE(e){return TI((async()=>{const t=await e();return cI((()=>t.next()))}))}async function nE(e,t){return UI.create(e,t)}async function rE(e){return PI.create(e)}const aE="3.13.0";function iE(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const sE=pd;class oE extends X{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new K(this,Ko())}nextDataId(){return oE.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,He().get("IS_NODE")&&aa("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&De(n[0])){const a=n.map((e=>_a(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?ef(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Es(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Ko().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Oa();return e(),{kernelMs:Oa()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){iE([e],"where");const t=this.readSync(e.dataId);return sE(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function uE(e,t,n){return({inputs:r,attrs:a,backend:i})=>{const{x:s}=r;if(iE(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,u=o.data.get(s.dataId).values,c=ce(s.shape),l=n||s.dtype,p=Ne(l,c);for(let e=0;e<c;++e)p[e]=t(u[e],a);return o.makeTensorInfo(s.shape,l,p)}}function cE(e,t,n){return({inputs:r,attrs:a,backend:i})=>{const{x:s}=r;if(iE(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,u=o.data.get(s.dataId).values,c=n||s.dtype,l=t(u,c,a);return o.makeTensorInfo(s.shape,c,l)}}oE.nextDataId=0,ou("cpu",(()=>new oE),1);const lE=uE(Kt,(e=>e>=0?e:Math.exp(e)-1)),pE={kernelName:Kt,backendName:"cpu",kernelFunc:lE};function dE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const hE={kernelName:dn,backendName:"cpu",kernelFunc:dE};function fE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r;iE([a],"leakyRelu");const s=ce(a.shape),o=n.data.get(a.dataId).values,u=we("float32",s);for(let e=0;e<o.length;e++)u[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const mE={kernelName:xn,backendName:"cpu",kernelFunc:fE};function gE(e){return(t,n,r,a,i)=>{const s=Qs(t,n),o=s.length,u=_e(s),c=we(i,ce(s)),l=t.length,p=n.length,d=_e(t),h=_e(n),f=Ys(t,s),m=Ys(n,s);if(f.length+m.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=We(t,o,u),i=n.slice(-l);f.forEach((e=>i[e]=0));const s=qe(i,l,d),g=n.slice(-p);m.forEach((e=>g[e]=0));const y=qe(g,p,h);c[t]=e(r[s],a[y])}return[c,s]}}const yE=gE(((e,t)=>e<0?t*e:e));function xE(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;iE([r,a],"prelu");const i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[o,u]=yE(r.shape,a.shape,i,s,"float32");return n.makeTensorInfo(u,"float32",o)}const bE={kernelName:tr,backendName:"cpu",kernelFunc:xE},vE=uE(sr,(e=>Math.max(0,e))),wE={kernelName:sr,backendName:"cpu",kernelFunc:vE},NE=uE(dr,(e=>Math.min(Math.max(0,e),6))),SE={kernelName:dr,backendName:"cpu",kernelFunc:NE};function kE(e){return(t,n,r)=>{const a=we(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const IE=kE((e=>1/(1+Math.exp(-e)))),EE=uE(Sr,(e=>1/(1+Math.exp(-e)))),CE={kernelName:Sr,backendName:"cpu",kernelFunc:EE};function TE(e,t,n,r,a){if("linear"===n)return dE({inputs:{x:t},backend:e});if("relu"===n)return vE({inputs:{x:t},backend:e});if("elu"===n)return lE({inputs:{x:t},backend:e});if("relu6"===n)return NE({inputs:{x:t},backend:e});if("prelu"===n)return xE({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return fE({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return EE({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function DE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",s)},o}const AE={kernelName:kt,backendName:"cpu",kernelFunc:DE};function ME(e,t,n="float32"){if("complex64"===n)return DE({inputs:{real:ME(e,t,"float32"),imag:ME(e,t,"float32")},backend:e});const r=Le(ce(t),n);return e.makeTensorInfo(t,n,r)}function $E(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const OE={kernelName:ar,backendName:"cpu",kernelFunc:$E};function RE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return dE({inputs:{x:a},backend:n});const e=ME(n,a.shape,a.dtype),t=RE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=DE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=$E({inputs:{input:a},backend:n}),t=RE({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!Ie(a.dtype,i)){const e=dE({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=$a([0],a.dtype),[r,i]=gE(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}const _E={kernelName:wt,backendName:"cpu",kernelFunc:RE};function FE(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:i,b:s}=n,o=a;iE([i,s],e);const u=o.data.get(i.dataId).values,c=o.data.get(s.dataId).values,l="string"===i.dtype?$f(u):u,p="string"===i.dtype?$f(c):c,d=r||i.dtype,[h,f]=t(i.shape,s.shape,l,p,d);return o.makeTensorInfo(f,d,h)}:({inputs:e,backend:a})=>{const{a:i,b:s}=e,o=a;if("complex64"===i.dtype||"complex64"===s.dtype){const e=RE({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=RE({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(l.dataId),d=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(h.dataId).values,[g,y,x]=n(i.shape,s.shape,u,c,f,m),b=o.makeTensorInfo(x,"float32",g),v=o.makeTensorInfo(x,"float32",y),w=DE({inputs:{real:b,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(s.dataId).values,a=r||i.dtype,[u,c]=t(i.shape,s.shape,e,n,a);return o.makeTensorInfo(c,a,u)}}}function zE(e){return(t,n,r,a,i,s)=>{const o=Qs(t,n),u=ce(o),c=o.length,l=_e(o),p=we("float32",u),d=we("float32",u),h=Ys(t,o),f=Ys(n,o),m=ef(r,a),g=ef(i,s),y=t.length,x=_e(t),b=n.length,v=_e(n);if(h.length+f.length===0)for(let t=0;t<p.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){const n=We(t,c,l),r=n.slice(-y);h.forEach((e=>r[e]=0));const a=qe(r,y,x),i=n.slice(-b);f.forEach((e=>i[e]=0));const s=qe(i,b,v),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}const BE=gE(((e,t)=>e+t)),LE=zE(((e,t,n,r)=>({real:e+n,imag:t+r}))),PE=FE(tt,BE,LE),UE={kernelName:tt,backendName:"cpu",kernelFunc:PE};function qE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=ce(a.shape),o=xe(i,s),u=ce(o);ie(s===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const WE={kernelName:or,backendName:"cpu",kernelFunc:qE};function VE(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:s,transposeB:o}=r;iE([a,i],"matMul");const u=a.shape.length,c=i.shape.length,l=s?a.shape[u-2]:a.shape[u-1],p=o?i.shape[c-1]:i.shape[c-2],d=s?a.shape[u-1]:a.shape[u-2],h=o?i.shape[c-2]:i.shape[c-1],f=a.shape.slice(0,-2),m=i.shape.slice(0,-2),g=ce(f),y=ce(m),x=Qs(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,h]);ie(l===p,(()=>`Error in matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));const b=o?[y,h,p]:[y,p,h],v=qE({inputs:{x:a},backend:n,attrs:{shape:s?[g,l,d]:[g,d,l]}}),w=qE({inputs:{x:i},backend:n,attrs:{shape:b}}),N=s?v.shape[1]:v.shape[2],S=s?v.shape[2]:v.shape[1],k=o?w.shape[1]:w.shape[2],I=Math.max(g,y),E=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,T=_e(v.shape),D=_e(w.shape),[A,M,$]=s?[T[0],1,T[1]]:[T[0],T[1],1],[O,R,_]=o?[1,D[1],D[0]]:[D[1],1,D[0]],F=S*k,z=Es([I,S,k],v.dtype),B=z.values,L=n.blockSize;for(let e=0;e<I;e++)for(let t=0;t<S;t+=L)for(let n=0;n<k;n+=L)for(let r=0;r<N;r+=L){const a=Math.min(t+L,S),i=Math.min(n+L,k),s=Math.min(r+L,N);for(let o=t;o<a;o++)for(let t=n;t<i;t++){let n=0;for(let a=r;a<s;a++){const r=Math.min(e,g-1)*A,i=Math.min(e,y-1)*_;n+=E[r+o*M+a*$]*C[a*O+t*R+i]}B[e*F+(o*k+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(x,z.dtype,z.values)}const jE={kernelName:gt,backendName:"cpu",kernelFunc:VE},GE={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:p}=r;let d,h,f;const m=[];d=VE({inputs:{a,b:i},attrs:{transposeA:u,transposeB:c},backend:n}),s&&(h=PE({inputs:{a:d,b:s},backend:n}),m.push(d),d=h),l&&(f=TE(n,d,l,o,p),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function HE(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const KE={kernelName:Je,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;iE(t,"abs");let r=new Float32Array(ce(t.shape));return r=HE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},XE=uE(Qe,(e=>Math.acos(e))),ZE={kernelName:Qe,backendName:"cpu",kernelFunc:XE},YE=uE(et,(e=>Math.acosh(e))),JE={kernelName:et,backendName:"cpu",kernelFunc:YE},QE={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;iE(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),i=Es(r[0].shape,r[0].dtype),s=i.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function eC(e,t,n,r,a){const i=t.length,s=ce(t),o=_e(t),u=_e(a),c=we(n,ce(a));for(let t=0;t<s;++t){const n=We(t,i,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[qe(a,i,u)]=e[t]}return c}function tC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:i}=n;iE(a,"transpose");const s=a.shape.length,o=new Array(s);for(let e=0;e<o.length;e++)o[e]=a.shape[i[e]];const u=eC(r.data.get(a.dataId).values,a.shape,a.dtype,i,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const nC={kernelName:Hr,backendName:"cpu",kernelFunc:tC},rC={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;iE(a,"all");const o=be(i,a.shape);let u=o;const c=$l(u,a.shape.length);let l=a;null!=c&&(l=tC({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Rl(u.length,a.shape.length)),Ml("all",u,l.shape.length);const[p,d]=Dl(l.shape,u),h=ce(d),f=Le(ce(p),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(s){const e=qE({inputs:{x:g},backend:n,attrs:{shape:Al(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},aC={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;iE(a,"any");const o=be(i,a.shape);let u=o;const c=$l(u,a.shape.length);let l=a;null!=c&&(l=tC({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Rl(u.length,a.shape.length)),Ml("any",u,l.shape.length);const[p,d]=Dl(l.shape,u),h=ce(d),f=Le(ce(p),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];n=n||r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(s){const e=qE({inputs:{x:g},backend:n,attrs:{shape:Al(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},iC={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;iE(a,"argMax");let s=be(i,a.shape);const o=$l(s,a.shape.length);let u=a;const c=[];null!=o&&(u=tC({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),s=Rl(s.length,u.shape.length)),s=[s[0]],Ml("argMax",s,u.shape.length);const[l,p]=Dl(u.shape,s),d=Le(ce(l),"int32"),h=ce(p),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*h;let n=f[t],r=0;for(let e=0;e<h;++e){const a=f[t+e];a>n&&(n=a,r=e)}d[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}},sC={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;iE(a,"argMin");let s=be(i,a.shape);const o=$l(s,a.shape.length);let u=a;const c=[];null!=o&&(u=tC({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),s=Rl(s.length,u.shape.length)),s=[s[0]],Ml("argMin",s,u.shape.length);const[l,p]=Dl(u.shape,s),d=Le(ce(l),"int32"),h=ce(p),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*h;let n=f[t],r=0;for(let e=0;e<h;++e){const a=f[t+e];a<n&&(n=a,r=e)}d[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}},oC=uE(ot,(e=>Math.asin(e))),uC={kernelName:ot,backendName:"cpu",kernelFunc:oC},cC=uE(ut,(e=>Math.asinh(e))),lC={kernelName:ut,backendName:"cpu",kernelFunc:cC},pC=uE(ct,(e=>Math.atan(e))),dC={kernelName:ct,backendName:"cpu",kernelFunc:pC},hC=gE(((e,t)=>Math.atan2(e,t))),fC=FE(pt,hC),mC={kernelName:pt,backendName:"cpu",kernelFunc:fC},gC=uE(lt,(e=>Math.atanh(e))),yC={kernelName:lt,backendName:"cpu",kernelFunc:gC};function xC(e,t,n,r,a,i){const s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,h=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Es(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*s-d,w=Math.max(0,v),N=Math.min(a.inHeight,l+v),S=n+y*x;for(let n=0;n<a.outWidth;++n){const s=n*o-h,l=Math.max(0,s),d=Math.min(a.inWidth,p+s);let y=f,x=0,v=0;for(let n=w;n<N;n+=u){const a=m+n*r[1];for(let n=l;n<d;n+=c){const s=e[a+n*r[2]+t];"max"===i&&s>y?y=s:"avg"===i&&(x+=s,v++)}if(isNaN(y))break}g[S+n*b+t]="avg"===i?x/v:y}}}return m}function bC(e,t,n,r,a=!1,i=!1){const s=Es(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=Es(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-h;let y=g;for(;y<0;)y+=c;const x=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){const p=o*u-f;let h=p;for(;h<0;)h+=l;const b=Math.min(r.inWidth,d+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<x;n+=c){const s=n-g;for(let o=h;o<b;o+=l){const u=o-p,c=m.get(e,n,o,t);c>v&&(v=c,w=a?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:s*d+u)}}s.set(w,e,n,o,t)}}return s}function vC(e,t,n,r,a,i){const s=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,h=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Es(a.outShape,n),v=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],k=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const I=w*s-m;let E=I;for(;E<0;)E+=c;const C=Math.min(a.inDepth,d+I),T=n+w*N;for(let n=0;n<a.outHeight;++n){const s=n*o-g;let d=s;for(;d<0;)d+=l;const m=Math.min(a.inHeight,h+s),w=T+n*S;for(let n=0;n<a.outWidth;++n){const s=n*u-y;let o=s;for(;o<0;)o+=p;const h=Math.min(a.inWidth,f+s),g=w+n*k;let N=x,S=0,I=0;for(let n=E;n<C;n+=c){const a=b+n*r[1];for(let n=d;n<m;n+=l){const s=a+n*r[2];for(let n=o;n<h;n+=p){const a=e[s+n*r[3]+t];if("max"===i&&a>N?N=a:"avg"===i&&(S+=a,I++),isNaN(N))break}if(isNaN(N))break}if(isNaN(N))break}v[g+t]="avg"===i?S/I:N}}}}return b}const wC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iE(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;ie(uc(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const c=Ju(a.shape,i,s,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&pe(c.inShape,c.outShape))l=dE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=_e(a.shape),r=xC(e,a.shape,a.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}},NC={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:c}=r;iE(a,"avgPool3d");const l=Qu(a.shape,i,s,1,o,u,c),p=vC(n.data.get(a.dataId).values,a.shape,a.dtype,_e(a.shape),l,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},SC={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:c}=r;iE([a,i],"avgPool3DGrad");const l=Qu(i.shape,s,o,1,u,c),p=l.strideDepth,d=l.strideHeight,h=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,x=l.dilationHeight,b=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,N=l.effectiveFilterWidth,S=v-1-l.padInfo.front,k=N-1-l.padInfo.left,I=w-1-l.padInfo.top,E=Es(i.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const i=n-S,s=r-I,o=a-k;let u=0;for(let n=0;n<v;n+=y){const r=(i+n)/p;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=x){const a=(s+n)/d;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let n=0;n<N;n+=b){const i=(o+n)/h;i<0||i>=l.outWidth||Math.floor(i)!==i||(u+=T.get(e,r,a,i,t))}}}E.set(u*C,e,n,r,a,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},kC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;iE([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=Ju(s.shape,o,u,1,c),p=l.strideHeight,d=l.strideWidth,h=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,x=l.effectiveFilterWidth,b=x-1-l.padInfo.left,v=y-1-l.padInfo.top,w=Es(s.shape,"float32"),N=1/(h*f),S=n.data.get(a.dataId).values,k=Es(a.shape,"float32",S);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=n-v,i=r-b;let s=0;for(let n=0;n<y;n+=m){const r=(a+n)/p;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const a=(i+n)/d;a<0||a>=l.outWidth||Math.floor(a)!==a||(s+=k.get(e,r,a,t))}}w.set(s*N,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},IC={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:i,offset:s,mean:o,variance:u}=t;ie(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),iE([a,o,u,i,s],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,h=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=h.length,x=d.length,b=p.length;let v=0,w=0,N=0,S=0;for(let e=0;e<l.length;++e)m[e]=f[v++]+(l[e]-p[w++])*h[N++]/Math.sqrt(d[S++]+c),v>=g&&(v=0),w>=b&&(w=0),N>=y&&(N=0),S>=x&&(S=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function EC(e,t,n,r,a){const i=So(r,t,n),s=ce(n),o=_e(r);if(i){const n=ko(t,o);return"string"===a?e.slice(n,n+s):e.subarray(n,n+s)}const u=Es(r,a,"string"===a?$f(e):e),c=Es(n,a);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));c.set(u.get(...r),...n)}return"string"===a?Of(c.values):c.values}function CC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r;iE(a,"slice");const[o,u]=Io(a,i,s);lo(a,o,u);const c=EC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const TC={kernelName:br,backendName:"cpu",kernelFunc:CC},DC={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;iE([a],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=Uh(a.shape,i,o),c=qh(u.length,i.length),l=Wh(a.shape,i,o),p=Vh(s,i.length),d=jh(l,s,i.length),h=qE({inputs:{x:a},backend:n,attrs:{shape:u}}),f=tC({inputs:{x:h},backend:n,attrs:{perm:c}}),m=qE({inputs:{x:f},backend:n,attrs:{shape:l}}),g=CC({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function AC(e,t,n,r,a){const i=ce(r),s=Le(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(s[r]+=i>0?t[n]:1)}return s}function MC(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],s=Es([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<i;a++){const i=e.get(o,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,a),o,i):s.set(s.get(o,i)+1,o,i))}return s}const $C={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=AC(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}},OC={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=Qs(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},RC=kE((e=>Math.ceil(e))),_C=cE(Nt,RC),FC={kernelName:Nt,backendName:"cpu",kernelFunc:_C},zC=uE(St,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),BC={kernelName:St,backendName:"cpu",kernelFunc:zC},LC={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ce(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,s=a.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function PC(e,t,n,r){const a=Ne(n,ce(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ce(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?$f(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=i[s++]}r+=e.shape[1]}))}return a}function UC(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const qC={kernelName:fn,backendName:"cpu",kernelFunc:UC};function WC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=be(a,t[0].shape)[0];let s=zh(t.map((e=>e.shape)),i);if(0===ce(s))return n.makeTensorInfo(s,t[0].dtype,[]);const o=t.filter((e=>ce(e.shape)>0));if(1===o.length)return dE({inputs:{x:o[0]},backend:n});if(Fh(o.map((e=>e.shape)),i),"complex64"===o[0].dtype){const e=o.map((e=>$E({inputs:{input:e},backend:n}))),t=o.map((e=>UC({inputs:{input:e},backend:n}))),r=WC({inputs:e,backend:n,attrs:{axis:i}}),a=WC({inputs:t,backend:n,attrs:{axis:i}}),s=DE({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const u=o.map((e=>{const t=ce(e.shape.slice(i));return qE({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));s=zh(u.map((e=>e.shape)),1);const l=1===u[0].shape[0],p=PC(c,s,t[0].dtype,l),d=zh(o.map((e=>e.shape)),i),h=n.makeTensorInfo(d,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const VC={kernelName:Et,backendName:"cpu",kernelFunc:WC};function jC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;iE([a,i],"conv2d");const p=cc(u),d=ec(a.shape,i.shape,s,c,o,l,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,b="channelsLast"===d.dataFormat,v=new ja(d.outShape,a.dtype),w=_e(a.shape),N=_e(i.shape),S=w[0],k=b?w[1]:w[2],I=b?w[2]:1,E=b?1:w[1],C=v.strides[0],T=b?v.strides[1]:v.strides[2],D=b?v.strides[2]:1,A=b?1:v.strides[1],M=n.data.get(a.dataId).values,$=n.data.get(i.dataId).values,O=v.values;for(let e=0;e<d.batchSize;++e){const t=e*S,n=e*C;for(let e=0;e<d.outHeight;++e){const r=n+e*T,a=e*d.strideHeight-x;for(let e=0;e<h;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const i=e*N[0],s=t+n*k;for(let e=0;e<d.outWidth;++e){const t=r+e*D,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=s+r*I;let o=i+e*N[1];for(let e=0;e<d.inChannels;++e){const n=M[a+e*E];for(let e=0;e<d.outChannels;++e)O[t+e*A]+=n*$[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const GC={kernelName:Ct,backendName:"cpu",kernelFunc:jC},HC={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;iE([a,i],"conv2dBackpropFilter");const p=cc(u),d=ec(a.shape,l,s,1,o,c,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,x=new ja(d.filterShape,"float32"),b=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,S=new ja(a.shape,a.dtype,w),k=new ja(i.shape,i.dtype,N);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/h)),n=Math.min(d.outHeight,(d.inHeight+v-e)/h);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),i=Math.min(d.outWidth,(d.inWidth+b-r)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let u=0;for(let c=0;c<d.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*h-v;for(let e=a;e<i;++e){const n=r+e*f-b;u+=y?S.get(c,t,n,s)*k.get(c,l,e,o):S.get(c,s,t,n)*k.get(c,o,l,e)}}x.set(u,e,r,s,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},KC={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;iE([a,i],"conv2dBackpropInput");const p=_e(i.shape),d=_e(a.shape);let h=cc(c);const f=ec(s,i.shape,o,1,u,l,!1,h),m=new ja(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,[b,v,w]=p,{batchSize:N,filterHeight:S,filterWidth:k,inChannels:I,inHeight:E,inWidth:C,outChannels:T,outHeight:D,outWidth:A,strideHeight:M,strideWidth:$}=f;h=f.dataFormat;const O=S-1-f.padInfo.top,R=k-1-f.padInfo.left,_="channelsLast"===h,F=m.strides[0],z=_?m.strides[1]:m.strides[2],B=_?m.strides[2]:1,L=_?1:m.strides[1],P=d[0],U=_?d[1]:d[2],q=_?d[2]:1,W=_?1:d[1];for(let e=0;e<N;++e)for(let t=0;t<I;++t)for(let n=0;n<E;++n){const r=n-O,a=Math.max(0,Math.ceil(r/M)),i=Math.min(D,(S+r)/M);for(let s=0;s<C;++s){const o=s-R,u=Math.max(0,Math.ceil(o/$)),c=Math.min(A,(k+o)/$);let l=0;for(let n=a;n<i;++n){const a=n*M-r;for(let r=u;r<c;++r){const i=P*e+U*n+q*r,s=b*(S-1-a)+v*(k-1-(r*$-o))+w*t;for(let e=0;e<T;++e)l+=y[i+W*e]*x[s+e]}}g[F*e+z*n+B*s+L*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},XC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r;iE([a,i],"conv3d");const c=tc(a.shape,i.shape,s,u,o),{filterDepth:l,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,x=g.left,b=g.top,v=new ja(c.outShape,a.dtype),w=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,S=v.values,k=_e(a.shape),I=_e(i.shape);for(let e=0;e<c.batchSize;++e){const t=e*k[0],n=e*v.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*v.strides[1],a=e*c.strideDepth-y;for(let e=0;e<l;++e){const n=a+e*h;if(n<0||n>=c.inDepth)continue;const i=e*I[0],s=t+n*k[1];for(let e=0;e<c.outHeight;++e){const t=r+e*v.strides[2],n=e*c.strideHeight-b;for(let e=0;e<p;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const a=i+e*I[1],o=s+r*k[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const i=a+e*I[2],s=o+t*c.inChannels;let u=i;for(let e=0;e<c.inChannels;++e){const t=w[s+e];for(let e=0;e<c.outChannels;++e)S[n+e]+=t*N[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},ZC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r;iE([a,i],"conv3dBackpropFilterV2");const c=_e(a.shape),l=_e(i.shape),p=tc(a.shape,u,s,1,o),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new ja(p.filterShape,"float32"),b=x.values,[v,w,N,S]=x.strides,k=n.data.get(i.dataId).values,[I,E,C,T]=l,D=n.data.get(a.dataId).values,[A,M,$,O]=c,R=p.padInfo.front,_=p.padInfo.left,F=p.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((R-e)/d)),n=Math.min(p.outDepth,(p.inDepth+R-e)/d),r=e*v;for(let a=0;a<g;++a){const i=Math.max(0,Math.ceil((F-a)/h)),s=Math.min(p.outHeight,(p.inHeight+F-a)/h),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((_-r)/f)),c=Math.min(p.outWidth,(p.inWidth+_-r)/f),l=r*N+o;for(let o=0;o<p.inChannels;++o){const m=o*S+l;for(let l=0;l<p.outChannels;++l){let g=0;for(let m=0;m<p.batchSize;++m){const p=m*A,y=m*I;for(let m=t;m<n;++m){const t=(e+m*d-R)*M+p,n=m*E+y;for(let e=i;e<s;++e){const i=(a+e*h-F)*$+t,s=e*C+n;for(let e=u;e<c;++e){const t=e*T+s;g+=D[(r+e*f-_)*O+i+o]*k[t+l]}}}}b[m+l]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},YC={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r;iE([a],"conv3dBackpropInputV2");const c=_e(a.shape),l=_e(i.shape),p=tc(u,i.shape,o,1,s),d=new ja(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,x=n.data.get(a.dataId).values,[b,v,w,N]=c,S=n.data.get(i.dataId).values,[k,I,E,C]=l,{batchSize:T,filterDepth:D,filterHeight:A,filterWidth:M,inChannels:$,inDepth:O,inHeight:R,inWidth:_,outChannels:F,outDepth:z,outHeight:B,outWidth:L,strideDepth:P,strideHeight:U,strideWidth:q}=p,W=D-1-p.padInfo.front,V=A-1-p.padInfo.top,j=M-1-p.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<$;++t)for(let n=0;n<O;++n){const r=n-W,a=Math.max(0,Math.ceil(r/P)),i=Math.min(z,(D+r)/P);for(let s=0;s<R;++s){const o=s-V,u=Math.max(0,Math.ceil(o/U)),c=Math.min(B,(A+o)/U);for(let l=0;l<_;++l){const p=l-j,d=Math.max(0,Math.ceil(p/q)),T=Math.min(L,(M+p)/q);let $=0;for(let n=a;n<i;++n){const a=n*P-r;for(let r=u;r<c;++r){const i=r*U-o;for(let s=d;s<T;++s){const o=b*e+v*n+w*r+N*s,u=k*(D-1-a)+I*(A-1-i)+E*(M-1-(s*q-p))+C*t;for(let e=0;e<F;++e)$+=x[o+e]*S[u+e]}}}h[f*e+m*n+g*s+y*l+t]=$}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},JC=uE(Ot,(e=>Math.cos(e))),QC={kernelName:Ot,backendName:"cpu",kernelFunc:JC},eT=uE(Rt,(e=>Math.cosh(e))),tT={kernelName:Rt,backendName:"cpu",kernelFunc:eT},nT={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,p,d,h]=a.shape,f=i.shape[0],[m,g]=o,y=Es([f,m,g,h],"float32"),x=n.data.get(i.dataId).values,b=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,w=_e(a.shape),N=_e(y.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],r=x[t+1],a=x[t+2],i=x[t+3],s=b[e];if(s>=l)continue;const o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const l=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(l<0||l>p-1)for(let n=0;n<g;n++)for(let r=0;r<h;r++){const a=r+n*N[2]+t*N[1]+e*N[0];y.values[a]=c}else if("bilinear"===u){const n=Math.floor(l),a=Math.ceil(l),o=l-n;for(let u=0;u<g;u++){const l=g>1?r*(d-1)+u*f:.5*(r+i)*(d-1);if(l<0||l>d-1){for(let n=0;n<h;n++){const r=n+u*N[2]+t*N[1]+e*N[0];y.values[r]=c}continue}const p=Math.floor(l),m=Math.ceil(l),x=l-p;for(let r=0;r<h;r++){let i=r+p*w[2]+n*w[1]+s*w[0];const c=v[i];i=r+m*w[2]+n*w[1]+s*w[0];const l=v[i];i=r+p*w[2]+a*w[1]+s*w[0];const d=v[i];i=r+m*w[2]+a*w[1]+s*w[0];const h=c+(l-c)*x,f=d+(v[i]-d)*x;i=r+u*N[2]+t*N[1]+e*N[0],y.values[i]=h+(f-h)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(a<0||a>d-1){for(let r=0;r<h;r++){const a=r+n*N[2]+t*N[1]+e*N[0];y.values[a]=c}continue}const o=Math.round(a),u=Math.round(l);for(let r=0;r<h;r++){const a=r+o*w[2]+u*w[1]+s*w[0],i=r+n*N[2]+t*N[1]+e*N[0];y.values[i]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},rT={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;iE(a,"cumsum");const u=$l([i],a.shape.length);let c=a;null!=u&&(c=tC({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=Rl(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const p=ai(c.dtype,"int32"),d=Le(ce(c.shape),p),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?0:h[n];else{const r=m(e,t-1);d[n]=s?h[r]+d[r]:h[n]+d[r]}}const g=n.makeTensorInfo(c.shape,p,d);if(null!=u){const e=tC({inputs:{x:g},backend:n,attrs:{perm:Ol(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}},aT={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=AC(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===a.shape.length){const e=MC(n.bufferSync(a),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},iT={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r;ie("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],p=u*i,d=c*i,h=l/(i*i),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*h);let g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const a=Math.floor(t/i),s=(r*i+t%i)*h;for(let t=0;t<h;++t){const r=t+s+l*(a+c*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,h],a.dtype,m)}};function sT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:c}=r;iE([a,i],"depthwiseConv2DNative");const l=_e(a.shape),p=_e(i.shape);let d=u;null==d&&(d=[1,1]),ie(uc(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));const h=ec(a.shape,i.shape,s,d,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,b=x.left,v=x.top,w=h.outChannels/h.inChannels,N=new ja(h.outShape,a.dtype),S=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=N.values;for(let e=0;e<h.batchSize;++e){const t=e*l[0],n=e*N.strides[0];for(let e=0;e<h.outHeight;++e){const r=n+e*N.strides[1],a=e*h.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=h.inHeight)continue;const i=e*p[0],s=t+n*l[1];for(let e=0;e<h.outWidth;++e){const t=r+e*N.strides[2],n=e*h.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const a=i+e*p[1],o=s+r*h.inChannels;let u=t,c=a;for(let e=0;e<h.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)I[u+e]+=t*k[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const oT={kernelName:Lt,backendName:"cpu",kernelFunc:sT},uT={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;iE([a,i],"depthwiseConv2dNativeBackpropFilter");const p=ec(a.shape,l,s,o,u,c,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new ja(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,b=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new ja(a.shape,a.dtype,v),N=n.data.get(i.dataId).values,S=new ja(i.shape,i.dtype,N);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(p.outHeight,(p.inHeight+x-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/h)),i=Math.min(p.outWidth,(p.inWidth+y-r)/h);for(let s=0;s<p.outChannels;++s){const o=Math.trunc(s/b),u=s%b;let c=0;for(let u=0;u<p.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*d-x;for(let e=a;e<i;++e){const n=r+e*h-y;c+=w.get(u,t,n,o)*S.get(u,l,e,s)}}g.set(c,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},cT={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;iE([a,i],"depthwiseConv2DNativeBackpropInput");const p=_e(a.shape),d=_e(i.shape),h=ec(l,i.shape,s,o,u,c,!0),f=new ja(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,b=n.data.get(a.dataId).values,[v,w,N]=p,S=n.data.get(i.dataId).values,[k,I,E]=d,{batchSize:C,filterHeight:T,filterWidth:D,inChannels:A,inHeight:M,inWidth:$,outChannels:O,outHeight:R,outWidth:_,strideHeight:F,strideWidth:z}=h,B=T-1-h.padInfo.top,L=D-1-h.padInfo.left,P=O/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<M;++n){const r=n-B,a=Math.max(0,Math.ceil(r/F)),i=Math.min(R,(T+r)/F);for(let s=0;s<$;++s){const o=s-L,u=Math.max(0,Math.ceil(o/z)),c=Math.min(_,(D+o)/z);let l=0;for(let n=a;n<i;++n){const a=n*F-r;for(let r=u;r<c;++r){const i=v*e+w*n+N*r,s=k*(T-1-a)+I*(D-1-(r*z-o))+E*t;for(let e=0;e<P;++e)l+=b[i+(t*P+e)]*S[s+e]}}m[g*e+y*n+x*s+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},lT={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=ce(r.shape),i=n.data.get(r.dataId).values,s=Es([a,a],r.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*a+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,s.dtype,s.values)}},pT={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:i,pad:s,dilations:o}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,p=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:N,filterWidth:S,dilationHeight:k,dilationWidth:I,outShape:E}=Yu(r.shape,a.shape,i,s,"NHWC",o),C=ce(E),T=E.length,D=Ne(r.dtype,C);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-b.top;for(let i=0;i<x;++i){const s=i*w-b.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<N;++t){const i=n+t*k;if(i>=0&&i<f)for(let n=0;n<S;++n){const h=s+n*I;if(h>=0&&h<m){const s=qe([e,i,h,o],l,_e(r.shape)),f=qe([t,n,o],d,_e(a.shape)),m=c[s]+p[f];m>u&&(u=m)}}}D[qe([e,t,i,o],T,_e(E))]=u}}}return{dataId:u.write($a(D,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},dT={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,c=t,l=ze(r.shape,c.data.get(r.dataId).values),p=ze(a.shape,c.data.get(a.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:N,dilationHeight:S,dilationWidth:k,outShape:I}=Yu(r.shape,a.shape,s,o,"NHWC",u);ie(i.rank===I.length,(()=>`Error in ${jt}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const E=ze(I,c.data.get(i.dataId).values),C=Pe(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-x.top;for(let r=0;r<y;++r){const a=r*v-x.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<h)for(let n=0;n<N;++n){const c=a+n*k;if(c>=0&&c<f){const a=l[e][r][c][i]+p[t][n][i];a>s&&(s=a,o=t,u=n)}}}C[o][u][i]+=E[e][t][r][i]}}}return{dataId:c.write($a(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},hT={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,c=t,l=ze(r.shape,c.data.get(r.dataId).values),p=ze(a.shape,c.data.get(a.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:N,dilationHeight:S,dilationWidth:k,outShape:I}=Yu(r.shape,a.shape,s,o,"NHWC",u);ie(i.rank===I.length,(()=>`Error in ${Vt}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const E=ze(I,c.data.get(i.dataId).values),C=Pe(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-x.top;for(let r=0;r<y;++r){const a=r*v-x.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<h)for(let n=0;n<N;++n){const c=a+n*k;if(c>=0&&c<f){const a=l[e][r][c][i]+p[t][n][i];a>s&&(s=a,o=r,u=c)}}}C[e][o][u][i]+=E[e][t][r][i]}}}return{dataId:c.write($a(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fT=gE(((e,t)=>e*t)),mT=zE(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),gT=FE(Wn,fT,mT),yT={kernelName:Wn,backendName:"cpu",kernelFunc:gT};function xT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;let o;iE(a,"sum"),o="bool"===a.dtype?RE({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):dE({inputs:{x:a},backend:n});const u=o.shape.length,c=be(i,o.shape),l=$l(c,u);let p=c,d=o;null!=l&&(d=tC({inputs:{x:o},backend:n,attrs:{perm:l}}),p=Rl(p.length,u)),Ml("sum",p,d.shape.length);const[h,f]=Dl(d.shape,p);let m=ME(n,h,ai(d.dtype,"int32"));const g=ce(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=x[t+e];y[e]=n}if(s){const e=m;m=qE({inputs:{x:m},backend:n,attrs:{shape:Al(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=l&&n.disposeIntermediateTensorInfo(d),m}const bT={kernelName:Er,backendName:"cpu",kernelFunc:xT},vT={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=lf(a,i.length);df(s.length,u,i);const{path:c,steps:l}=hf(o,u),p=l.length;let d=null,h=s.length;const f=[];for(let e=0;e<p;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=pf(h,u[t]);let a;ff(e)?a=i[t]:(a=tC({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);pe(a.shape,s)||(a=qE({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=gT({inputs:{a,b:d},backend:n}),f.push(d))}e<p-1&&(c[e]>=0&&(d=xT({inputs:{x:d},backend:n,attrs:{axis:c[e]-(s.length-h),keepDims:!1}}),f.push(d)),h--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},wT={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;iE([r,a],"eluGrad");const i=new Float32Array(ce(a.shape)),s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<s.length;++e){const t=s[e];i[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",i)}},NT=gE(((e,t)=>e===t?1:0)),ST=FE(Yt,NT,null,"bool"),kT={kernelName:Yt,backendName:"cpu",kernelFunc:ST},IT=Kh,ET=Xh,CT=Zh,TT=Yh,DT=Jh,AT=Qh,MT=uE(Zt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+IT*n);return t*(1-((((AT*r+DT)*r+TT)*r+CT)*r+ET)*r*Math.exp(-n*n))})),$T={kernelName:Zt,backendName:"cpu",kernelFunc:MT},OT=kE((e=>Math.exp(e))),RT=cE(Jt,OT,"float32"),_T={kernelName:Jt,backendName:"cpu",kernelFunc:RT};function FT(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:i}=r,s=a.shape.length,o=a.shape.slice();let u=i;return i<0&&(ie(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+i+1),o.splice(u,0,1),qE({inputs:{x:a},backend:n,attrs:{shape:o}})}const zT={kernelName:Qt,backendName:"cpu",kernelFunc:FT},BT=kE((e=>Math.expm1(e))),LT=cE(en,BT),PT={kernelName:en,backendName:"cpu",kernelFunc:LT},UT=gE(((e,t)=>e/t)),qT=FE(Gt,UT),WT={kernelName:Gt,backendName:"cpu",kernelFunc:qT},VT=gE(((e,t)=>e-t)),jT=zE(((e,t,n,r)=>({real:e-n,imag:t-r}))),GT=FE(Ur,VT,jT),HT={kernelName:Ur,backendName:"cpu",kernelFunc:GT};function KT(e,t,n){const r=e.shape,a=r[0],i=r[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,u=s.complexTensorInfos.imag,c=[a,i],l=ce(c),p=we("float32",l),d=we("float32",l);for(let e=0;e<a;e++){const r=CC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=CC({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=DE({inputs:{real:r,imag:a},backend:n}),{real:c,imag:l}=XT(s,t,n),h=ef(c,l);for(let t=0;t<i;t++){const n=af(h,t);p[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const h=n.makeTensorInfo(c,"float32",p),f=n.makeTensorInfo(c,"float32",d),m=DE({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function XT(e,t,n){const r=ce(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,s=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){const a=ZT(i,s,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),i=n.makeTensorInfo([],"float32",Ma(r,"float32")),s=dE({inputs:{x:i},backend:n}),u=WT.kernelFunc({inputs:{a:e,b:i},backend:n}),c=WT.kernelFunc({inputs:{a:t,b:s},backend:n}),l=n.data.get(u.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:p}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let r=0;r<t;r++){const o=uf(a*r,t,n),u=af(e,r);i+=u.real*o.real-u.imag*o.imag,s+=u.real*o.imag+u.imag*o.real}n&&(i/=t,s/=t),sf(r,i,s,a)}return r}(ef(i,s),r,t);return tf(e)}}function ZT(e,t,n,r,a){if(1===n)return{real:e,imag:t};const i=ef(e,t),s=n/2,o=nf(i),u=o.real,c=o.imag,l=[u.length],p=a.makeTensorInfo(l,"float32",u),d=a.makeTensorInfo(l,"float32",c),h=DE({inputs:{real:p,imag:d},backend:a}),f=rf(i),m=f.real,g=f.imag,y=[m.length],x=a.makeTensorInfo(y,"float32",m),b=a.makeTensorInfo(y,"float32",g),v=DE({inputs:{real:x,imag:b},backend:a}),w=ZT(u,c,s,r,a),N=w.real,S=w.imag,k=[N.length],I=a.makeTensorInfo(k,"float32",N),E=a.makeTensorInfo(k,"float32",S),C=DE({inputs:{real:I,imag:E},backend:a}),T=ZT(m,g,s,r,a),D=T.real,A=T.imag,M=[D.length],$=a.makeTensorInfo(M,"float32",D),O=a.makeTensorInfo(M,"float32",A),R=DE({inputs:{real:$,imag:O},backend:a}),_=of(n,r),F=[_.real.length],z=a.makeTensorInfo(F,"float32",_.real),B=a.makeTensorInfo(F,"float32",_.imag),L=DE({inputs:{real:z,imag:B},backend:a}),P=gT({inputs:{a:L,b:R},backend:a}),U=PE({inputs:{a:C,b:P},backend:a}),q=GT({inputs:{a:C,b:P},backend:a}),W=$E({inputs:{input:U},backend:a}),V=$E({inputs:{input:q},backend:a}),j=UC({inputs:{input:U},backend:a}),G=UC({inputs:{input:q},backend:a}),H=WC({inputs:[W,V],backend:a,attrs:{axis:0}}),K=WC({inputs:[j,G],backend:a,attrs:{axis:0}}),X=a.data.get(H.dataId).values,Z=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(I),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}const YT={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ce(r.shape),i=r.shape[r.shape.length-1],s=qE({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=KT(s,!1,n),u=qE({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}};function JT(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:i}=n,s=i||$e(a),o=Ne(s,ce(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,s,o)}const QT={kernelName:nn,backendName:"cpu",kernelFunc:JT},eD={kernelName:rn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,i=we(r.dtype,ce(r.shape)),[s,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let e=0;e<s;e++){const t=e*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let e=0;e<u;e++){const r=e*c;for(let a=0;a<c;a++){const s=Math.round(u-e-1),o=t+n+r+a;let p=l[o];s>=0&&s<u&&(p=l[t+n+s*c+a]),i[o]=p}}}}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tD=kE((e=>Math.floor(e))),nD=cE(an,tD),rD={kernelName:an,backendName:"cpu",kernelFunc:nD},aD=gE(((e,t)=>Math.floor(e/t))),iD=FE(sn,aD,null,"int32"),sD={kernelName:sn,backendName:"cpu",kernelFunc:iD},oD={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r;let m=jC({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d}});if(s){const e=m;m=PE({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=TE(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},uD={kernelName:ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r;let m=sT({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d}});if(s){const e=m;m=PE({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=TE(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function cD(e,t,n,r,a,i,s,o,u){const c=Es([r,i],n);for(let n=0;n<r;n++){const r=[];let l=0;for(let t=0;t<a;t++){const i=e[n*a+t];l+=i*s[t],r.push(i)}if(l<0||l>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(l*i+e))}return c}const lD={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=ce(r.shape),s=a.shape,o=s[s.length-1],[u,c,l,p]=so(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const d=cD(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,c,o,l,p,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}};function pD(e,t,n){const r=Es(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),i=a[0],s=a[2],o=t.locToIndex([i,s]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const dD={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r;iE([a,i],"gatherV2");const u=be(s,a.shape)[0],c=n.data.get(i.dataId).values,l=a.shape[u];for(let e=0;e<c.length;++e){const t=c[e];ie(t<=l-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${l-1}]`))}let p=o;null==o&&(p=0);const d=ce(i.shape),h=Mf(a,i,u,p),f=qE({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=qE({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=pD(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,x.dtype,x.values)}},hD=gE(((e,t)=>e>t?1:0)),fD=FE(ln,hD,null,"bool"),mD={kernelName:ln,backendName:"cpu",kernelFunc:fD},gD=gE(((e,t)=>e>=t?1:0)),yD=FE(pn,gD,null,"bool"),xD={kernelName:pn,backendName:"cpu",kernelFunc:yD},bD={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ce(r.shape),i=r.shape[r.shape.length-1],s=qE({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=KT(s,!0,n),u=qE({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}},vD=uE(mn,(e=>Number.isFinite(e)?1:0),"bool"),wD={kernelName:mn,backendName:"cpu",kernelFunc:vD},ND=uE(gn,(e=>Math.abs(e)===1/0?1:0),"bool"),SD={kernelName:gn,backendName:"cpu",kernelFunc:ND},kD=uE(yn,(e=>Number.isNaN(e)?1:0),"bool"),ID={kernelName:yn,backendName:"cpu",kernelFunc:kD},ED=gE(((e,t)=>e<t?1:0)),CD=FE(bn,ED,null,"bool"),TD={kernelName:bn,backendName:"cpu",kernelFunc:CD},DD=gE(((e,t)=>e<=t?1:0)),AD=FE(vn,DD,null,"bool"),MD={kernelName:vn,backendName:"cpu",kernelFunc:AD};function $D(e,t,n){const r=(t-e)/(n-1),a=Le(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const OD={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=$D(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},RD=kE((e=>Math.log(e))),_D=cE(Nn,RD),FD={kernelName:Nn,backendName:"cpu",kernelFunc:_D},zD=uE(Sn,(e=>Math.log1p(e))),BD={kernelName:Sn,backendName:"cpu",kernelFunc:zD},LD=gE(((e,t)=>e&&t)),PD=FE(kn,LD,null,"bool"),UD={kernelName:kn,backendName:"cpu",kernelFunc:PD},qD=uE(In,(e=>e?0:1),"bool"),WD={kernelName:In,backendName:"cpu",kernelFunc:qD},VD=gE(((e,t)=>e||t)),jD=FE(En,VD,null,"bool"),GD={kernelName:En,backendName:"cpu",kernelFunc:jD},HD={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r;iE(a,"LRN");const c=a.shape[3],l=c-1,p=n.data.get(a.dataId).values,d=ce(a.shape),h=new Float32Array(d);function f(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,l);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=p[e]*Math.pow(s+o*t,-u);h[e]=n}return n.makeTensorInfo(a.shape,a.dtype,h)}},KD={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;iE(s,"LRNGrad");const p=ce(s.shape),d=s.shape[3],h=n.data.get(s.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=c*a+u;for(let t=n;t<r;t++){let n=-2*c*l*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-l)),n*=h[e],g[t]+=n}}return n.makeTensorInfo(s.shape,a.dtype,g)}};function XD(e,t,n,r){const a=we(r,ce(n));for(let n=0;n<a.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}a[n]=i}return a}function ZD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=n;let u=a.shape;const c=u.length,l=be(i,u);let p=l;const d=$l(p,c);let h=o.data.get(a.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[d[t]];h=eC(h,u,a.dtype,d,e),p=Rl(p.length,c),u=e}iE(a,"max"),Ml("max",p,c);const[f,m]=Dl(u,p),g=XD(h,ce(m),f,a.dtype),y=o.write(g,f,a.dtype);let x=f;return s&&(x=Al(f,l)),{dataId:y,shape:x,dtype:a.dtype}}const YD={kernelName:An,backendName:"cpu",kernelFunc:ZD},JD=gE(((e,t)=>Math.max(e,t))),QD=FE(Mn,JD),eA={kernelName:Mn,backendName:"cpu",kernelFunc:QD},tA={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iE(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;ie(uc(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const c=Ju(a.shape,i,s,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&pe(c.inShape,c.outShape))l=dE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=_e(a.shape),r=xC(e,a.shape,a.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}},nA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:c}=r;iE(a,"maxPool3d");const l=Qu(a.shape,i,s,1,o,u,c),p=vC(n.data.get(a.dataId).values,a.shape,a.dtype,_e(a.shape),l,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},rA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:c}=r;iE([a,i],"maxPool3DGrad");const l=Qu(i.shape,s,o,1,u,c),p=function(e,t){const n=Es(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const x=y*r-d;let b=x;for(;b<0;)b+=s;const v=Math.min(t.inDepth,c+x);for(let r=0;r<t.outHeight;++r){const c=r*a-h;let d=c;for(;d<0;)d+=o;const w=Math.min(t.inHeight,l+c);for(let a=0;a<t.outWidth;++a){const h=a*i-f;let N=h;for(;N<0;)N+=u;const S=Math.min(t.inWidth,p+h);let k=Number.NEGATIVE_INFINITY,I=-1;for(let t=b;t<v;t+=s){const n=t-x;for(let r=d;r<w;r+=o){const a=r-c;for(let i=N;i<S;i+=u){const s=i-h,o=e.get(m,t,r,i,g);o>=k&&(k=o,I=n*l*p+a*l+s)}}}n.set(I,m,y,r,a,g)}}}return n}(n.bufferSync(i),l),d=l.strideDepth,h=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,x=l.effectiveFilterDepth,b=l.effectiveFilterHeight,v=l.effectiveFilterWidth,w=x-1-l.padInfo.front,N=v-1-l.padInfo.left,S=b-1-l.padInfo.top,k=Es(i.shape,"float32"),I=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const i=n-w,s=r-S,o=a-N;let u=0;for(let n=0;n<x;n+=m){const r=(i+n)/d;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){const i=(s+a)/h;if(!(i<0||i>=l.outHeight||Math.floor(i)!==i))for(let s=0;s<v;s+=y){const c=(o+s)/f;if(c<0||c>=l.outWidth||Math.floor(c)!==c)continue;const d=x*b*v-1-p.get(e,r,i,c,t)===n*b*v+a*v+s?1:0;0!==d&&(u+=I.get(e,r,i,c,t)*d)}}}k.set(u,e,n,r,a,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},aA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;iE([i,s],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:p}=r,d=Ju(o.shape,u,c,1,l,p),h=n.data.get(o.dataId).values,f=Es(d.outShape,o.dtype,bC(h,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,N=b-1-d.padInfo.top,S=Es(o.shape,"float32"),k=n.data.get(a.dataId).values,I=Es(a.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-N,i=r-w;let s=0;for(let n=0;n<b;n+=y){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=x){const o=(i+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=b*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==u&&(s+=I.get(e,r,o,t)*u)}}S.set(s,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},iA={kernelName:Fn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;iE(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=Ju(r.shape,a,i,[1,1],s),[p,d]=function(e,t,n,r,a){const i=xC(e,0,n,_e(t),a,"max"),s=bC(e,t,n,a,!0,r);return[i.values,s.values]}(c,r.shape,r.dtype,o,l),h=u.write(p,l.outShape,r.dtype),f=u.write(d,l.outShape,r.dtype);return[{dataId:h,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}},sA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=be(i,a.shape),u=ce(Dl(a.shape,o)[1]),c=[],l=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(l);const p=RE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=qT({inputs:{a:p,b:l},backend:n});c.push(d);const h=xT({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:s}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},oA={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;iE(a,"min");const o=be(i,a.shape);let u=o;const c=$l(u,a.shape.length);let l=a;null!=c&&(l=tC({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Rl(u.length,a.shape.length)),Ml("min",u,l.shape.length);const[p,d]=Dl(l.shape,u),h=ce(d),f=Le(ce(p),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(s){const e=qE({inputs:{x:g},backend:n,attrs:{shape:Al(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},uA=gE(((e,t)=>Math.min(e,t))),cA=FE(Ln,uA),lA={kernelName:Ln,backendName:"cpu",kernelFunc:cA},pA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,mode:s}=r;iE(a,"mirrorPad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+a.shape[t])),l="reflect"===s?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,h=_e(a.shape),f=ce(o),m=o.length,g=_e(o),y=we(a.dtype,f);for(let e=0;e<f;e++){let t=We(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-l:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+l);t=t.map(((e,t)=>e-u[t]));const n=qe(t,d,h);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},dA=gE(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),hA=FE(Un,dA),fA={kernelName:Un,backendName:"cpu",kernelFunc:hA};var mA=n(948);function gA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=a.shape.length;let o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);const u=be([o],a.shape),c=ZD({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=Al(c.shape,u),p=qE({inputs:{x:c},backend:n,attrs:{shape:l}}),d=GT({inputs:{a,b:p},backend:n}),h=RT({inputs:{x:d},backend:n}),f=xT({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=qE({inputs:{x:f},backend:n,attrs:{shape:l}}),g=qT({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const yA={kernelName:Dr,backendName:"cpu",kernelFunc:gA},xA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r;iE(a,"multinomial");const u=o?a:gA({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],p=n.data.get(u.dataId).values,d=[c,i],h=Le(ce(d),"int32");for(let e=0;e<c;++e){const t=e*l,n=new Float32Array(l-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=mA.alea(s.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();h[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){h[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",h)}};function bA(e,t,n){const r=Ma(-1,n);return fT([],t,r,e,n)}const vA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;iE(r,"neg");const a=n.data.get(r.dataId).values,[i,s]=bA(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,i)}},wA=Gd,NA={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r;iE(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,{selectedIndices:p}=wA(c,l,s,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},SA=Hd,kA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;iE(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,p=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:h}=SA(l,p,s,o,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},IA=Kd,EA={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;iE(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,p=n.data.get(i.dataId).values,d=s,h=o,f=u,m=c,{selectedIndices:g,selectedScores:y}=IA(l,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},CA=gE(((e,t)=>e!==t?1:0)),TA=FE(jn,CA,null,"bool"),DA={kernelName:jn,backendName:"cpu",kernelFunc:TA},AA={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:i,onValue:s,offValue:o}=r;iE(a,"oneHot");const u=ce(a.shape),c=new Float32Array(u*i);c.fill(o);const l=n.data.get(a.dataId).values;for(let e=0;e<u;++e)l[e]>=0&&l[e]<i&&(c[e*i+l[e]]=s);return n.makeTensorInfo([...a.shape,i],"int32",c)}};function MA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=$E({inputs:{input:r},backend:n}),t=MA({inputs:{x:e},backend:n}),a=UC({inputs:{input:r},backend:n}),i=MA({inputs:{x:a},backend:n}),s=DE({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return JT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const $A={kernelName:Yr,backendName:"cpu",kernelFunc:MA},OA={kernelName:Xn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=$E({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=UC({inputs:{input:a},backend:r}),s=MA({inputs:{x:i},backend:r}),o=DE({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return JT({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function RA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FT({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{se(i,e.shape,"All tensors passed to stack must have matching shapes"),ie(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=WC({inputs:t.map((e=>{const t=FT({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const _A={kernelName:Yn,backendName:"cpu",kernelFunc:RA},FA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;iE(a,"pad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),c=n.data.get(a.dataId).values,l=ce(a.shape),p=a.shape.length,d=_e(a.shape),h=ce(o),f=o.length,m=_e(o),g=we(a.dtype,h);0!==s&&g.fill(s);for(let e=0;e<l;e++)g[qe(We(e,p,d).map(((e,t)=>e+u[t])),f,m)]=c[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},zA=gE(((e,t)=>Math.pow(e,t))),BA=FE(er,zA),LA={kernelName:er,backendName:"cpu",kernelFunc:BA};function PA(e,t,n,r){const[a,i]=Dl(e,r),s=ai(t,"int32"),o=Le(ce(a),s),u=ce(i);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:s}}const UA={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;iE(a,"prod");const o=a.shape.length,u=be(i,a.shape),c=$l(u,o);let l=u,p=a;const d=[];null!=c&&(p=tC({inputs:{x:a},backend:n,attrs:{perm:c}}),d.push(p),l=Rl(l.length,o));const h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=PA(p.shape,p.dtype,h,l);let y=m;return s&&(y=Al(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function qA(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Le(0,r);const a=Le(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const WA={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:s}=n,o=qA(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},VA=uE(ir,(e=>1/e)),jA={kernelName:ir,backendName:"cpu",kernelFunc:VA},GA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;iE(a,"resizeBilinear");const u=_e(a.shape),[c,l]=o,[p,d,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ce([p,c,l,f])),y=[i&&c>1?d-1:d,i&&l>1?h-1:h],x=[i&&c>1?c-1:c,i&&l>1?l-1:l];let b=0;const v=y[0]/x[0],w=y[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<c;t++){let n;n=s?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],c=e*u[0]+i*u[1];for(let e=0;e<l;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(h-1,Math.ceil(t)),l=o+n*u[2],p=c+n*u[2],d=o+i*u[2],y=c+i*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[p+e],i=t+(m[d+e]-t)*r,s=i+(n+(m[y+e]-n)*r-i)*a;g[b++]=s}}}return n.makeTensorInfo([p,c,l,f],"float32",g)}},HA={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;iE([i,a],"resizeBilinearGrad");const o=_e(a.shape),[u,c,l,p]=a.shape,[,d,h]=i.shape,f=new Float32Array(u*c*l*p),m=[s&&d>1?c-1:c,s&&h>1?l-1:l],g=[s&&d>1?d-1:d,s&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],b=n.data.get(i.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),i=t+r*o[1],s=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<h;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),a=t-n,c=1-a,h=i+n*o[2],m=i+r*o[2],g=s+n*o[2],y=s+r*o[2],w=d*c,N=d*a,S=u*c,k=u*a;for(let e=0;e<p;e++){const t=b[v++];f[h+e]+=t*w,f[m+e]+=t*N,f[g+e]+=t*S,f[y+e]+=t*k}}}}return n.makeTensorInfo([u,l,c,p],"float32",f)}},KA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;iE(a,"resizeNearestNeighbor");const u=_e(a.shape),[c,l]=o,[p,d,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*c*l*f),y=[i&&c>1?d-1:d,i&&l>1?h-1:h],x=[i&&c>1?c-1:c,i&&l>1?l-1:l],b=y[0]/x[0],v=y[1]/x[1];let w=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=s?b*(e+.5):b*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));s&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<l;e++){const t=s?v*(e+.5):v*e;let n=Math.min(h-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,c,l,f],a.dtype,g)}},XA={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;iE([i,a],"resizeNearestNeighborGrad");const o=_e(a.shape),u=_e(i.shape),[c,l,p,d]=a.shape,[,h,f]=i.shape,m=new Float32Array(c*l*p*d),g=n.data.get(i.dataId).values,y=[s&&h>1?l-1:l,s&&f>1?p-1:p],x=[s&&h>1?h-1:h,s&&f>1?f-1:f],b=y[0]/x[0],v=y[1]/x[1],w=1/b,N=1/v,S=2*Math.ceil(w)+2,k=2*Math.ceil(N)+2;for(let e=0;e<c;e++){const t=e*o[0];for(let e=0;e<l;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-S/2);for(let r=0;r<p;r++){const i=n+r*o[2],c=Math.floor(r*N),y=Math.floor(c-k/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<S;i++){const c=i+a;if(c<0||c>=h)continue;const d=t+c*u[1],m=c*b;if(e===Math.min(l-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<k;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],i=t*v;r===Math.min(p-1,s?Math.round(i):Math.floor(i))&&(o+=g[a+n])}}m[i+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},ZA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r;iE(a,"reverse");const s=a.shape.length,o=be(i,a.shape);if(0===s)return dE({inputs:{x:a},backend:n});const u=new ja(a.shape,a.dtype),c=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},YA={kernelName:ea,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=we(r.dtype,ce(r.shape)),[c,l,p,d]=r.shape,[h,f]=Ph(s,l,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*p*l*d;for(let e=0;e<l;e++){const n=e*(p*d);for(let r=0;r<p;r++){const a=r*d;for(let s=0;s<d;s++){const o=[c,e,r,s],x=o[2],b=o[1];let v=(x-h)*g-(b-f)*m,w=(x-h)*m+(b-f)*g;v=Math.round(v+h),w=Math.round(w+f);let N=i;"number"!=typeof i&&(N=3===s?255:i[s]),v>=0&&v<p&&w>=0&&w<l&&(N=y[t+w*(p*d)+v*d+s]),u[t+n+a+s]=N}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},JA=uE(fr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),QA={kernelName:fr,backendName:"cpu",kernelFunc:JA},eM=kE((e=>1/Math.sqrt(e))),tM=cE(mr,eM),nM={kernelName:mr,backendName:"cpu",kernelFunc:tM};function rM(e,t,n,r,a,i,s,o,u,c){const l=[r/a,a],p=e.values,d=t.values;if(0===r)return Es(n,t.dtype);const h=Es(l,t.dtype);h.values.fill(u);for(let e=0;e<i;e++){const i=[];let u=0;for(let t=0;t<s;t++){const n=p[e*s+t];i.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<a;n++)c?h.values[u*a+n]+=d[e*a+n]:h.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return h}const aM={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:p}=co(0,a,s),d=rM(n.bufferSync(a),n.bufferSync(i),s,p,c,u,o,l,0,!0);return n.makeTensorInfo(s,d.dtype,d.values)}},iM={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t;iE([r,a,i],"select");const s=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,l=ai(a.dtype,i.dtype),p=Le(ce(a.shape),l);let d=0;const h=0===s||s>1||1===a.shape.length?1:ce(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?p[d++]=u[e]:p[d++]=c[e];return n.makeTensorInfo(a.shape,l,p)}},sM=Gh,oM=Hh,uM=uE(xr,(e=>e>=0?oM*e:sM*(Math.exp(e)-1))),cM={kernelName:xr,backendName:"cpu",kernelFunc:uM},lM=uE(Nr,(e=>e<0?-1:e>0?1:0)),pM={kernelName:Nr,backendName:"cpu",kernelFunc:lM},dM=uE(vr,(e=>Math.sin(e))),hM={kernelName:vr,backendName:"cpu",kernelFunc:dM},fM=uE(wr,(e=>Math.sinh(e))),mM={kernelName:wr,backendName:"cpu",kernelFunc:fM},gM=Math.log(1.1920928955078125e-7)+2,yM=uE(kr,(e=>{const t=e>-gM,n=e<gM,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),xM={kernelName:kr,backendName:"cpu",kernelFunc:yM},bM={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;iE([a],"spaceToBatchND");const o=ce(i),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const c=FA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=Uh(c.shape,i,o,!1),p=qh(l.length,i.length,!1),d=Wh(c.shape,i,o,!1),h=qE({inputs:{x:c},backend:n,attrs:{shape:l}}),f=tC({inputs:{x:h},backend:n,attrs:{perm:p}}),m=qE({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};function vM(e,t,n,r,a,i,s){const o=t[0],u=i[0],c=new Array(u),l=new Array(o),p=t[1];if(0===u){if(0!==o)throw new Error(yf(o));return[Ne(n,0),[0,p],Ne(a,0),c,l]}let d=!0,h=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p];if(n<0)throw new Error(xf(t,n));if(n>=u)throw new Error(bf(t,n,u));++f[n],d=d&&n>=h,h=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];c[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)l[e]=e;return[t,[o,p],n,c,l]}{const t=f[u-1],i=Ne(n,t*p),d=Ne(a,t),h=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p],a=h[n],s=(0===n?0:f[n-1])+a;h[n]++;for(let n=0;n<p;++n)i[s*p+n]=e[t*p+n];d[s]=r[t],l[t]=s}for(let e=0;e<u;++e)if(0===h[e]){const t=0===e?0:f[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;d[t]=s}return[i,[t,p],d,c,l]}}const wM={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values[0],[p,d,h,f,m]=vM(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function NM(e,t,n,r,a){const i=ce(r),s=t[0],o=a.length,u=[];let c=1,l=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==l)throw new Error(vf(l,e));l=e,u.push(1)}else{if(t<0)throw new Error(wf(e,t));c*=t,u.push(t)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(Sf(r,u));u[l]=e}if(ce(u)!==i)throw new Error(kf(r,u));const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*u[e+1]}const f=Ne(n,s*o);for(let t=0;t<s;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/h[e]),n%=h[e]}return[f,[s,o],u]}const SM={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[c,l,p]=NM(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}};function kM(e,t,n,r,a,i=!1,s=0){const o=r.length,u=[t[0],e.length/t[0]],c=u[1],l=o>0?a[o-1]+1:0;if(l<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=l;const d=p.reduce(((e,t)=>e*t),1),h=Ne(n,d);if(0===o)return l>0&&h.fill(s),[h,p];if(l<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=l)throw new Error(Cf(y,l));y>g&&h.fill(s,g*c,y*c);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Tf(t,r[t],u[0]));for(let t=0;t<c;t++)h[y*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)h[y*c+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<l&&h.fill(s,g*c,l*c),[h,p]}const IM={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[c,l]=kM(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},EM={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[c,l]=kM(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},CM={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:p,outputSize:d}=co(0,a,o),h=rM(n.bufferSync(a),n.bufferSync(i),o,d,l,c,u,p,n.data.get(s.dataId).values[0],!1);return n.makeTensorInfo(o,h.dtype,h.values)}},TM={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=be(s,a.shape)[0],u=gf(a,i,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map((e=>{const t=[...l];t[o]=e;const r=CC({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},DM=kE((e=>Math.sqrt(e))),AM=uE(Ir,(e=>Math.sqrt(e))),MM={kernelName:Ir,backendName:"cpu",kernelFunc:AM},$M={kernelName:Fr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;iE(n,"square");const a=r.data.get(n.dataId).values,i=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},OM=gE(((e,t)=>{const n=e-t;return n*n})),RM=FE(_r,OM),_M={kernelName:_r,backendName:"cpu",kernelFunc:RM},FM=uE(Jr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),zM={kernelName:Jr,backendName:"cpu",kernelFunc:FM};function BM(e,t,n,r){const a=Es(e,t.dtype);for(let e=0;e<a.size;e++){const i=a.indexToLoc(e),s=new Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+r[e];a.set(t.get(...s),...i)}return a}const LM={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:d}=r;iE(a,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:b,strides:v}=Eo(a.shape,i,s,o,u,c,l,p,d);let w;if(m)w=qE({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){ie(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ho(x,b,v),t=CC({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});w=qE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=BM(h,n.bufferSync(a),v,x);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class PM{constructor(e,t,n,r,a,i){this.separator=_a(e),this.nGramWidths=t,this.leftPad=_a(n),this.rightPad=_a(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,i){for(let s=0;s<a;++s){const o=this.getPadWidth(i),u=Math.max(0,o-s),c=Math.max(0,o-(a-(s+1))),l=i-(u+c),p=t+(u>0?0:s-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<l;++t)d+=e[p+t].length;d+=c*this.rightPad.length,d+=(u+c+l-1)*this.separator.length,n[r+s]=new Uint8Array(d);const h=n[r+s];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[p+t]),m(this.separator);if(l>0){m(e[p+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=Ne("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const s=new Array(i[a]);for(let n=0;n<a;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,s,a,u,i),a+=u})),this.preserveShort&&a===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,s,a,u,o)}}return[s,i]}}function UM(e,t,n,r,a,i,s,o){return new PM(n,r,a,i,s,o).compute(e,t)}const qM={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:p}=t,d=n.data.get(l.dataId).values,h=n.data.get(p.dataId).values,[f,m]=UM(d,h,a,i,s,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};function WM(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let i=e.indexOf(a);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(a,i);n&&0===t.length||r.push(t),a=i+1}}function VM(e,t,n){const r=e.length,a=[];let i=0,s=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;WM(e[u],t,n,a);const c=a.length-r;o[u]=c,i+=c,s=Math.max(s,c)}const u=Ne("int32",2*i),c=new Array(i),l=[r,s];let p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*p]=e,u[2*p+1]=t,c[p]=a[p],++p;return[u,c,l]}const jM={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values[0],[c,l,p]=VM(o,u,a),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};function GM(e,t){const n=Ne("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Aa(e[r]).modulo(t).getLowBitsUnsigned();return n}const HM={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=GM(n.data.get(i.dataId).values,a);return n.makeTensorInfo(i.shape,"int32",s)}},KM=uE(qr,(e=>Math.tan(e))),XM={kernelName:qr,backendName:"cpu",kernelFunc:KM},ZM=uE(Wr,(e=>Math.tanh(e)));function YM(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Es(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const i=e.locToIndex(a);r.values[t]=e.values[i]}return r}const JM={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;iE(a,"tile");const s=YM(n.bufferSync(a),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}},QM=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function e$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,i=t-n+1,s=Math.log(a),o=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*o*(a-o)/a)*Math.sign(i-a/2);e$(e,t,Math.max(n,Math.floor(t-i*o/a+u)),Math.min(r,Math.floor(t+(a-i)*o/a+u)))}const a=e[t];let i=n,s=r;for(te(e,n,t),QM(e[r],a)>0&&te(e,n,r);i<s;){for(te(e,i,s),i++,s--;QM(e[i],a)<0;)i+=1;for(;QM(e[s],a)>0;)s-=1}0===QM(e[n],a)?te(e,n,s):(s+=1,te(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function t$(e,t,n,r,a){const i=t[t.length-1],[s,o]=[e.length/i,i],u=we(n,s*r),c=we("int32",s*r);for(let t=0;t<s;t++){const n=t*o,i=e.subarray(n,n+o);let s=new Array(i.length);i.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(e$(s,r),s=s.slice(0,r)),a&&s.sort(QM);const l=t*r,p=u.subarray(l,l+r),d=c.subarray(l,l+r);for(let e=0;e<r;e++)p[e]=s[e].value,d[e]=s[e].index}const l=t.slice();return l[l.length-1]=r,[Es(l,n,u),Es(l,"int32",c)]}const n$={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r;iE(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=t$(o,a.shape,a.dtype,i,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}},r$={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:c}=n,[l,p,d,h]=a.shape,[f,m]=null!=c?c:[p,d],g=[l,f,m,h],y=_e(a.shape),x=y[0],b=y[1],v=y[2],w=we(a.dtype,ce(g));w.fill(u);const N=r.data.get(a.dataId).values,S=r.data.get(i.dataId).values;for(let e=0;e<l;++e){const t=1===i.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<h;++a){let i;const c=t[6]*r+t[7]*n+1;if(0===c)continue;const l=(t[0]*r+t[1]*n+t[2])/c,h=(t[3]*r+t[4]*n+t[5])/c,f=a$(l,d,o),m=a$(h,p,o);switch(s){case"nearest":i=s$(N,p,d,x,b,v,e,m,f,a,u);break;case"bilinear":i=o$(N,p,d,x,b,v,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}w[e*x+n*b+r*v+a]=i}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function a$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Q(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Q(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Q(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function i$(e,t,n,r,a,i,s,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[s*r+o*a+u*i+c]:l}function s$(e,t,n,r,a,i,s,o,u,c,l){return i$(e,t,n,r,a,i,s,Math.round(o),Math.round(u),c,l)}function o$(e,t,n,r,a,i,s,o,u,c,l){const p=Math.floor(o),d=Math.floor(u),h=p+1,f=d+1;return(h-o)*((f-u)*i$(e,t,n,r,a,i,s,p,d,c,l)+(u-d)*i$(e,t,n,r,a,i,s,p,f,c,l))+(o-p)*((f-u)*i$(e,t,n,r,a,i,s,h,d,c,l)+(u-d)*i$(e,t,n,r,a,i,s,h,f,c,l))}function u$(e,t,n,r){const a=be(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const s={},o=new Int32Array(n[a]),u=new ja(i,r,e),c=[],l=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(l)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==s[n])o[t]=s[n];else{const e=Object.keys(s).length;s[n]=e,o[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(s).length;const d=new ja(p,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const h=n.slice();return h[a]=p[1],{outputValues:d.values,outputShape:h,indices:o}}const c$={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;iE(i,"unique");const s=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:c}=u$(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},l$={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a.shape.length,o=a.shape[i],u=new Array(s-1);let c=0;for(let e=0;e<s;e++)e!==i&&(u[c++]=a.shape[e]);const l=new Array(s).fill(0),p=a.shape.slice();p[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){l[i]=e;const t=CC({inputs:{x:a},backend:n,attrs:{begin:l,size:p}});d[e]=qE({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},p$={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r;iE(a,"unsortedSegmentSum");const o=[],u=[],c=a.shape.length-i.shape.length;let l=i;for(let e=0;e<c;++e){const t=FT({inputs:{input:l},backend:n,attrs:{dim:e+1}});l=t,u.push(t)}for(let e=0;e<s;++e){const t=Ma(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=ST({inputs:{a:r,b:l},backend:n}),s=RE({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=gT({inputs:{a:s,b:a},backend:n}),p=xT({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(r),u.push(i),u.push(s),u.push(c),u.push(p)}const p=RA({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},d$=[GE,KE,ZE,JE,UE,QE,rC,aC,iC,sC,uC,lC,dC,mC,yC,wC,NC,SC,kC,jE,IC,DC,$C,OC,_E,FC,BC,AE,LC,VC,GC,HC,KC,XC,ZC,YC,QC,tT,nT,rT,aT,iT,oT,uT,cT,lT,pT,dT,hT,vT,pE,wT,kT,$T,_T,zT,PT,YT,QT,eD,rD,sD,oD,uD,lD,dD,mD,xD,hE,bD,qC,wD,SD,ID,mE,TD,MD,OD,FD,BD,UD,WD,GD,HD,KD,YD,eA,tA,nA,rA,aA,iA,sA,oA,lA,pA,fA,xA,yT,vA,NA,kA,EA,DA,AA,OA,_A,FA,LA,bE,UA,WA,OE,WT,jA,wE,SE,WE,GA,HA,KA,XA,ZA,YA,QA,nM,aM,iM,cM,CE,pM,hM,mM,TC,yA,xM,bM,wM,SM,IM,EM,CM,TM,MM,$M,_M,zM,LM,qM,jM,HM,HT,bT,XM,{kernelName:Wr,backendName:"cpu",kernelFunc:ZM},JM,n$,r$,nC,c$,l$,p$,$A];for(const e of d$)pa(e);const h$={},f$={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function m$(e,t){if(!(e in h$)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete h$[e]}),!1),1===e?n.getContext("webgl",f$)||n.getContext("experimental-webgl",f$):n.getContext("webgl2",f$)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;h$[e]=n}const n=h$[e];return null==n||n.isContextLost()?(delete h$[e],m$(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),h$[e])}var g$,y$,x$;function b$(e,t){return[t,e]}function v$(e){const t=ce(e);return fe(Math.ceil(t/4))}function w$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function N$(e,t){const n=e;let r,a,i,s,o,u,c,l,p,d;return 2===He().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,s=n.RGBA32F,o=n.RED,c=4,l=1,p=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,i=e.RGBA,s=n.RGBA,o=e.RGBA,c=4,l=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:p,textureTypeFloat:d}}function S$(e,t){const n=t();return He().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function k$(e){return!!(He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function I$(e,t){return O$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(g$||(g$={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(y$||(y$={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(x$||(x$={}));const E$=/ERROR: [0-9]+:([0-9]+):/g;function C$(e,t){if(S$(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function T$(e,t,n,r,a,i,s){const o=e.getAttribLocation(t,n);return-1!==o&&(S$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),S$(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s))),S$(e,(()=>e.enableVertexAttribArray(o))),!0)}function D$(e,t,n,r){S$(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),S$(e,(()=>e.activeTexture(e.TEXTURE0+n))),S$(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),S$(e,(()=>e.uniform1i(n,r)))}function A$(e,t,n){S$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),S$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function M$(e,t){S$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),S$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function $$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function O$(e,t,n){const r=S$(e,(()=>t()));if(null==r)throw new Error(n);return r}function R$(e,t=2){return ce(e.slice(0,e.length-t))}function _$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function F$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[R$(e),..._$(e)]),t}function z$(e){return e%2==0}function B$(e,t){if(pe(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(z$(n)&&z$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&z$(e[0])&&z$(t[0])}let L$,P$;function U$(e,t){return null!=e.getExtension(t)}function q$(e){try{if(null!=m$(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function W$(e){const t=N$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function V$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const j$=He();function G$(){let e,t,n,r,a,i,s,o,u,c;return 2===He().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function H$(e,t,n="index"){const r=_e(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function K$(e,t,n="index"){const r=_e(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function X$(e){const t=_e(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}j$.registerFlag("HAS_WEBGL",(()=>j$.getNumber("WEBGL_VERSION")>0)),j$.registerFlag("WEBGL_VERSION",(()=>q$(2)?2:q$(1)?1:0)),j$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),j$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===j$.get("WEBGL_VERSION"))),j$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),j$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),j$.registerFlag("WEBGL_PACK",(()=>j$.getBool("HAS_WEBGL"))),j$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_CLIP",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_PACK_REDUCE",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_CONV_IM2COL",(()=>j$.getBool("WEBGL_PACK"))),j$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==L$){const t=m$(e);L$=t.getParameter(t.MAX_TEXTURE_SIZE)}return L$}(j$.getNumber("WEBGL_VERSION")))),j$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==P$){const t=m$(e);P$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,P$)}(j$.getNumber("WEBGL_VERSION")))),j$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=j$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=m$(e);return t=U$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:U$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),j$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>j$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!bi())),j$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=m$(e);if(1===e){if(!U$(t,"OES_texture_float"))return!1}else if(!U$(t,"EXT_color_buffer_float"))return!1;return W$(t)}(j$.getNumber("WEBGL_VERSION")))),j$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!j$.getBool("WEBGL_FORCE_F16_TEXTURES")&&j$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),j$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=m$(e);if(1!==e){if(U$(t,"EXT_color_buffer_float"))return W$(t);const e="EXT_color_buffer_half_float";if(U$(t,e)){const n=t.getExtension(e);return function(e,t){const n=N$(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}return!!U$(t,"OES_texture_float")&&!!U$(t,"WEBGL_color_buffer_float")&&W$(t)}(j$.getNumber("WEBGL_VERSION")))),j$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=j$.getNumber("WEBGL_VERSION"))&&null!=m$(e).fenceSync;var e})),j$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>j$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),j$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),j$.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>bi()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),j$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),j$.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),j$.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),j$.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const Z$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Y$}=g;function J$(e,t,n){const r=[];if(e.forEach((e=>{const t=ce(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=uO(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?eO(e,r):Q$(e,r);const i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=Y$(e.shapeInfo.logicalShape,t.logicalShape),u=oO(s),c=s-i;let l;const p=["x","y","z","w","u","v"];l=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let h="return outputValue;";const f=1===ce(e.shapeInfo.logicalShape),m=1===ce(t.logicalShape);if(1!==i||f||m){if(f&&!m)h=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${d});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&pe(s,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=oO(u),l=Y$(e.shapeInfo.logicalShape,t.logicalShape),p=u-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=G$(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let c,l,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${tO}\n    ${nO}\n    ${rO}\n  `}(o);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pe(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),i=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),i=a*Math.ceil(e[e.length-2]/2);let s=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),l=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pe(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${K$(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=H$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${K$(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=H$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=H$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=H$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),l=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(p+=aO),[p,u,l,a,c,i,n.userCode].join("\n")}function Q$(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,i]=e.shapeInfo.texShape;if(1===a&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=iO(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${sO(e)}\n      }\n    `;const a=e.shapeInfo.texShape,i=a[0],s=a[1];if(1===s&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=iO(n);return 1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&pe(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=ve(n),u=s;if(u.length<n.length){const n=["row","col"];return`\n      ${Q$(cO(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${lO(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${sO(e)}\n      }\n    `;const c=i[0],l=i[1],p=iO(r);return 1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:u}=ve(n),c=o;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Q$(cO(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${lO(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${sO(e)}\n      }\n    `;const l=e.shapeInfo.texShape,p=l[0],d=l[1],h=e.shapeInfo.flatOffset;if(d===i&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=iO(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${i} + col * ${s} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:u,keptDims:c}=ve(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Q$(cO(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${lO(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${sO(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===o&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===i&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=iO(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,{newShape:u,keptDims:c}=ve(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Q$(cO(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${lO(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${a})) +\n          depth3;\n        ${sO(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${iO(n)};\n      vec2 uv = uvFromFlat(${d}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=ve(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Q$(cO(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${lO(t,i)});\n      }\n    `}const s=t[5],o=t[4]*s,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${sO(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===l&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${iO(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function eO(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${G$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=G$();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],u=G$();if(null!=i&&pe(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${eO(cO(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${lO(i,r)});\n        }\n      `}const o=G$();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=s[0],c=s[1],l=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${l*Math.ceil(n[1]/2)}, ${l}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=G$();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=u[0],l=u[1],p=Math.ceil(i[s-1]/2);let d=p*Math.ceil(i[s-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<s-1;e++)h=`int b${e}, `+h,d*=i[s-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const tO="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nO="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rO="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aO="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function iO(e){return`offset${e}`}function sO(e){const t=e.name,n=ce(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function oO(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function uO(e,t,n){const{newShape:r,keptDims:a}=ve(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):r,u=!e&&i>1&&!pe(t,n)&&r.length<i||s;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function cO(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function lO(e,t){return t.map((t=>e[t])).join(", ")}function pO(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!pe(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!pe(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function dO(e){return He().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class hO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=g$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=G$();this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?K$(["r","c","d"],e):H$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class fO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=g$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=G$();this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?K$(["r","c","d"],e):H$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class mO{constructor(e){this.variableNames=["A"],this.outTexUsage=y$.DOWNLOAD;const t=G$();this.outputShape=e,this.userCode=`\n      ${Z$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class gO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=y$.DOWNLOAD;const t=G$();this.outputShape=e,this.userCode=`\n      ${Z$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class yO{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=G$();this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":X$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class xO{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=G$();this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const i=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":X$(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function bO(e,t,n,r,a,i){!function(e,t){const n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return O$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return S$(e,(()=>e.bindTexture(o,s))),S$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),S$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),S$(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),S$(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===He().getNumber("WEBGL_VERSION")?S$(e,(()=>e.texImage2D(o,0,r,t,n,0,a,i,null))):S$(e,(()=>e.texStorage2D(o,1,r,t,n))),S$(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function vO(e){return e.internalFormatFloat}function wO(e){return e.internalFormatHalfFloat}function NO(e){return e.downloadTextureFormat}function SO(e){return e.internalFormatPackedFloat}function kO(e){return e.internalFormatPackedHalfFloat}class IO{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=He().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){h$[e]=t}(t,e)):this.gl=m$(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===He().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=I$(this.gl,e),U$(this.gl,t))this.textureHalfFloatExtension=I$(this.gl,t);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),U$(this.gl,r))this.colorBufferHalfFloatExtension=I$(this.gl,r);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",U$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!U$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=O$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return S$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),S$(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=O$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return S$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),S$(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return O$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=N$(this.gl,this.textureHalfFloatExtension)}get debug(){return He().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;S$(e,(()=>e.finish())),S$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),S$(e,(()=>e.deleteFramebuffer(this.framebuffer))),S$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),S$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),S$(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=b$(t,n);return bO(e,a,i,vO(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=b$(t,n);return bO(e,a,i,wO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=b$(t,n);return bO(e,a,i,NO(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){S$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===He().getNumber("WEBGL_VERSION")?S$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):S$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===He().getNumber("WEBGL_VERSION")?S$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):S$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),S$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,i){let s,o,u;S$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),s.set(a),2===He().getNumber("WEBGL_VERSION")?S$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,s))):S$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,s))),S$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=w$(t,n);return bO(e,a,i,kO(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=w$(t,n);return bO(e,a,i,SO(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(M$(this.gl,this.framebuffer),this.outputTexture=null),S$(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,i]=b$(t,n),s=new Uint8Array(t*n*4);return S$(e,(()=>e.readPixels(0,0,a,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,i){return function(e,t,n,r,a,i,s,o){const u=e,c=new Float32Array(function(e,t){const[n,r]=w$(e,t);return n*r*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();S$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const i=16*t*n;return S$(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),S$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),S$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(He().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return S$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=G$();return function(e,t){const n=O$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(S$(e,(()=>e.shaderSource(n,t))),S$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return O$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return S$(t,(()=>t.attachShader(n,this.vertexShader))),S$(t,(()=>t.attachShader(n,e))),function(e,t){if(S$(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&C$(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return S$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),T$(e,t,"clipSpacePos",n,3,20,0)&&T$(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&S$(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&C$(this.gl,this.program),S$(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return O$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),S$(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),D$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=w$(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&C$(this.gl,this.program),$$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),S$(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),S$(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=I$(this.gl,2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ye((()=>this.disposed||this.isQueryAvailable(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ye((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),A$(this.gl,e,this.framebuffer),this.debug&&$$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(A$(this.gl,this.outputTexture,this.framebuffer),this.debug&&$$(this.gl)):M$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;A$(r,e,this.framebuffer),this.debug&&$$(r),this.outputTexture=e,S$(r,(()=>r.viewport(0,0,t,n))),S$(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),S$(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:EO,bincountImpl:CO,bincountReduceImpl:TO,ceilImpl:DO,concatImpl:AO,equalImpl:MO,expImpl:$O,expm1Impl:OO,floorImpl:RO,gatherNdImpl:_O,gatherV2Impl:FO,greaterImpl:zO,greaterEqualImpl:BO,lessImpl:LO,lessEqualImpl:PO,linSpaceImpl:UO,logImpl:qO,maxImpl:WO,maximumImpl:VO,minimumImpl:jO,multiplyImpl:GO,negImpl:HO,notEqualImpl:KO,prodImpl:XO,rangeImpl:ZO,rsqrtImpl:YO,sigmoidImpl:JO,simpleAbsImpl:QO,sliceImpl:eR,sparseFillEmptyRowsImpl:tR,sparseReshapeImpl:nR,sparseSegmentReductionImpl:rR,sqrtImpl:aR,stridedSliceImpl:iR,stringNGramsImpl:sR,stringSplitImpl:oR,stringToHashBucketFastImpl:uR,subImpl:cR,tileImpl:lR,topKImpl:pR,transposeImpl:dR,uniqueImpl:hR}=V;function fR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function mR(e,t){return 1===t?[e]:fR(e,t)}class gR{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=dO(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=mR("rc",this.rank),t=oO(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class yR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=e.map(((e,t)=>t)),a=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(r,t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}(["r","c","d"],"inputShape"):H$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":X$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=vR(t,n),a=wR(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=bR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let s;return r===x$.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===x$.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===x$.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===x$.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===x$.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=vR(n,r),i=wR(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const s=bR(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=He().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bR(e,t,n,r,a){const i=function(e,t){switch(e){case x$.PACKED_2X2_FLOAT32:return SO(t);case x$.PACKED_2X2_FLOAT16:return kO(t);case x$.UNPACKED_FLOAT32:return vO(t);case x$.UNPACKED_FLOAT16:return wO(t);case x$.PACKED_4X1_UNSIGNED_BYTE:return NO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=w$(e[0],e[1]);s=t*n}else{const[t,n]=b$(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function vR(e,t){if(e===y$.UPLOAD)return x$.PACKED_2X2_FLOAT32;if(e===y$.RENDER||null==e)return function(e){return He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?x$.PACKED_2X2_FLOAT32:x$.UNPACKED_FLOAT32:e?x$.PACKED_2X2_FLOAT16:x$.UNPACKED_FLOAT16}(t);if(e===y$.DOWNLOAD||e===y$.PIXELS)return x$.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class NR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const SR="return abs(x);",kR="return x;";class IR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class ER{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length);const t=e.length,n=mR("rc",t),r=oO(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const CR=pd,TR={},DR=He().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class AR extends X{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!He().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof IO)t=e;else{const n=m$(He().getNumber("WEBGL_VERSION"),e);t=new IO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=m$(He().getNumber("WEBGL_VERSION"));t=new IO(e),this.binaryCache=((n=He().getNumber("WEBGL_VERSION"))in TR||(TR[n]={}),TR[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xR(this.gpgpu),this.numMBBeforeWarning=null==He().global.screen?1024:He().global.screen.height*He().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new K(this,Ko())}nextDataId(){return AR.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((He().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||He().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:y$.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(He().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:y$.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new IR(s,kR):new NR(s,kR);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;return u&&(c=Oa()),l="complex64"===r?ef(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Oa()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=a){let t;t=o?new IR(r,kR):new NR(r,kR);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(He().getBool("DEBUG")&&!He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===He().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==i&&He().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...v$(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);c=ef(e[0],e[1])}else if(null==l)c=this.getValuesFromTexture(e);else{const e=ce(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){const e=this.gpgpu.gl;S$(e,(()=>e.deleteBuffer(l)))}const p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ko().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:i,dtype:s,isPacked:o,texture:u}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new IR(a,kR):new NR(a,kR);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:s}],s),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),l=Ko().makeTensorFromDataId(c.dataId,c.shape,c.dtype),p=this.texData.get(c.dataId);return Object.assign({tensorRef:l},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Es(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!k$(n)){if(He().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ce(t);if(He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...v$(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),i}const i=He().getBool("WEBGL_PACK")&&!0===r,s=i?F$(t):t,o=i?new gO(s):new mO(s),u=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ue(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=ue(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);s.kernelMs=ne(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Oa(),endMs:null}}endTimer(e){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Oa(),e)}async getQueryTime(e){if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=DR){return He().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ce(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){aa("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return CR(e.shape,t)}packedUnaryOp(e,t,n){const r=new IR(e.shape,t),a=this.compileAndRun(r,[e],n);return Ko().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=QO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(He().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,SR,e.dtype);const t=new NR(e.shape,SR),n=this.compileAndRun(t,[e]);return Ko().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&De(n[0])){const a=n.map((e=>_a(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Ko().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new ER(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new gR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[R$(e.shape),..._$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[R$(t),..._$(t)],i=new yR(a,n),s=[n],o=this.runWebGLProgram(i,[r],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:i}=n;null!=t&&ie(ce(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const s=F$(a);let o;o=r?new fO(s):new hO(s);const u=[null!=t?t:v$(s)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,i){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===g$.DENSE){const t=null!=i?i:v$(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ce(s.shape))return o.values=we(s.dtype,0),s;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ce(t.shape)<=He().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!B$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:u}=uO(e.packedInputs,t.shape,i);let c="",l="",p="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=_e(o);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else l=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,h=2===o.length&&pe(t.shape,i),f=1===ce(t.shape),m=Ys(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&pe(i,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${s?u:""}_${o.length}_${f}_${m}_${h}_${c}_${l}_${p}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a+`${He().getNumber("WEBGL_VERSION")}`,i}(e,c,l),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=J$(a,s,t),u=function(e,t){const n=O$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(S$(e,(()=>e.shaderSource(n,t))),S$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=E$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map(((e,t)=>ge((t+1).toString(),i)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const u=s.slice(0,r-1),c=s.slice(r-1,r),l=s.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ge(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),c=e.createProgram(u);let l=null;const p=e.getUniformLocation(c,"NAN",!1);1===He().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const d=!1,h={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];h[r]=e.getUniformLocation(c,r,d),h[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,d),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(c,`${r}Shape`,d),m[`${r}TexShape`]=e.getUniformLocation(c,`${r}TexShape`,d))}let g,y,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",d),x=e.getUniformLocation(c,"outShapeStrides",d),y=e.getUniformLocation(c,"outTexShape",d));const b=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{b[n]=e.getUniformLocation(c,t.name,d)})),{program:t,fragmentShader:u,source:o,webGLProgram:c,uniformLocations:h,customUniformLocations:b,inShapeInfos:i,outShapeInfo:s,infLoc:l,nanLoc:p,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}(this.gpgpu,e,c,l))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(pO(t.inShapeInfos,n),pO([t.outShapeInfo],[r]));const i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),1===He().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],i=t.uniformLocations[a],s=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=uO(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(ce(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=_e(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const i=t.customUniformLocations[r],s=a[r];if("float"===n.type)e.gl.uniform1fv(i,s);else if("vec2"===n.type)e.gl.uniform2fv(i,s);else if("vec3"===n.type)e.gl.uniform3fv(i,s);else if("vec4"===n.type)e.gl.uniform4fv(i,s);else if("int"===n.type)e.gl.uniform1iv(i,s);else if("ivec2"===n.type)e.gl.uniform2iv(i,s);else if("ivec3"===n.type)e.gl.uniform3iv(i,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(i,s)}})),e.executeProgram()}(this.gpgpu,d,c,l,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=He().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Oa();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!He().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(He().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yo((()=>{if(!He().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=He().getBool("DEBUG");He().set("DEBUG",!1);const t=this.abs(ku(1e-8)).dataSync()[0];if(He().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=Oa());let l=t.texShape;if(null==l&&(l=function(e,t=!1){let n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,e=e.map(((t,n)=>n>=e.length-2?ee(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=ve(e);e=t.newShape}let r=ce(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=R$(e);let n=2,a=2;return e.length&&([n,a]=_$(e)),r=t*(n/2)*(a/2),fe(r).map((e=>2*e))}return fe(r)}(n,o),t.texShape=l),null!=a){const e=F$(n);let i,s=l[1],p=l[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([s,p]=w$(l[0],l[1])),i=o?new xO(e,d):new yO(e,d);const h=d?[p,s]:l,f=this.makeTensorInfo(h,r),m=this.texData.get(f.dataId);m.usage=d?y$.PIXELS:y$.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,p,a);const g=[[p,s]],y=!0,x=this.runWebGLProgram(i,[f],r,g,y),b=this.texData.get(x.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(x.dataId),t.values=null,u&&(this.uploadWaitMs+=Oa()-c)}else{const e=this.acquireTexture(l,s,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ce(t)}}AR.nextDataId=0,vi()&&ou("webgl",(()=>new AR),2);class MR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Qs(t,n),this.enableShapeUniforms=dO(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class $R{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Qs(t,n);const a=this.outputShape.length;this.enableShapeUniforms=dO(a);let i="";if(r)if(0===a||1===ce(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${oO(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=mR("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function OR(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const RR={kernelName:dn,backendName:"webgl",kernelFunc:OR};function _R(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(i.dataId),o=OR({inputs:{x:r},backend:n}),u=OR({inputs:{x:a},backend:n});return s.complexTensorInfos={real:o,imag:u},i}const FR={kernelName:kt,backendName:"webgl",kernelFunc:_R},zR="return (a < 0.) ? b * a : a;",BR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",LR={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,s=n.makeTensorInfo([],"float32",Ma(i,"float32")),o=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $R(BR,a.shape,s.shape):new MR(zR,a.shape,s.shape),u=n.runWebGLProgram(o,[a,s],"float32");return n.disposeIntermediateTensorInfo(s),u}},PR="return (a < 0.) ? b * a : a;",UR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qR={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $R(UR,r.shape,a.shape):new MR(PR,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],"float32")}};function WR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:i})=>{const{x:s}=a,o=i,u=r||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,u);return o.makeTensorInfo(s.shape,u,t)}let c;return c=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new IR(s.shape,t):new NR(s.shape,e),o.runWebGLProgram(c,[s],u)}}function VR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}){return({inputs:s,backend:o})=>{const{a:u,b:c}=s,l=o;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:c.shape},s=new MR(e,u.shape,c.shape);return l.runWebGLProgram(s,[a,i],ai(n.dtype,r.dtype))})),i=_R({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),i}const p=i||ai(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=a){const e=l.texData.get(u.dataId).values,t=l.texData.get(c.dataId).values,n="string"===u.dtype?$f(e):e,r="string"===u.dtype?$f(t):t,[i,s]=a(u.shape,c.shape,n,r,p),o=l.makeTensorInfo(s,p);return l.texData.get(o.dataId).values=i,o}let d;return d=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new $R(t,u.shape,c.shape,n):new MR(e,u.shape,c.shape),l.runWebGLProgram(d,[u,c],p)}}function jR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?UR:PR;if("leakyrelu"===e)return t?BR:zR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class GR{constructor(e,t,n,r=!1,a=!1,i=!1,s=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=dO(this.outputShape.length);const c=r?e[1]:e[2],l=Math.ceil(c/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",b="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${x};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class HR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Qs(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const KR="return a * b;";function XR(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=ai(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),i=new HR("return areal * breal - aimag * bimag;",r.shape,a.shape),s=new HR("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(i,o,"float32"),c=n.runWebGLProgram(s,o,"float32"),l=_R({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=GO(r.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=s,u}let s;return s=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $R(KR,r.shape,a.shape):new MR(KR,r.shape,a.shape),n.runWebGLProgram(s,[r,a],i)}const ZR={kernelName:Wn,backendName:"webgl",kernelFunc:XR};function YR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=n,o=ce(a.shape),u=xe(i,o),c=ce(u);ie(o===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const l=s.texData.get(a.dataId);return!l.isPacked||B$(a.shape,u)||null!==l.texture&&B$(l.shape,u)?(s.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[R$(e.shape),..._$(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[R$(t),..._$(t)],s=new yR(i,r),o=[r],u=n.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,s)}const JR={kernelName:or,backendName:"webgl",kernelFunc:YR};class QR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const s=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${de(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class e_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(s="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function t_(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Lh(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:u,outSize:c}=a[s];let l,p;l="mean"===n?0===s?new QR({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new QR({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new e_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),p=i,i=r.runWebGLProgram(l,[i],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return i}class n_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=oO(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class r_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=oO(this.rank),a=fR("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];const s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function a_(e,t,n){const r=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r_(e.shape,t):new n_(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function i_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;return function(e,t,n,r){const a=t,i=e.shape.length,s=be(a,e.shape);let o=s;const u=$l(o,i),c=null!=u;let l=e;c&&(l=a_(e,u,r),o=Rl(o.length,i)),Ml("sum",o,i);const[p,d]=Dl(l.shape,o);let h=p;n&&(h=Al(p,s));const f=ce(d),m=YR({inputs:{x:l},attrs:{shape:[ce(e.shape)/f,f]},backend:r}),g=t_(m,ii(e.dtype),"sum",r),y=YR({inputs:{x:g},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),c&&r.disposeIntermediateTensorInfo(l),y}(a,i,s,n)}const s_={kernelName:Er,backendName:"webgl",kernelFunc:i_};function o_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:i}=r,s=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[i[e]];let c;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=dR(e,a.shape,a.dtype,i,u);c=s.makeTensorInfo(u,a.dtype),s.texData.get(c.dataId).values=t}else c=a_(a,i,s);return c}const u_={kernelName:Hr,backendName:"webgl",kernelFunc:o_};function c_({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=r?t.shape[l-1]:t.shape[l-2],h=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ce(m),x=ce(g),b=Qs(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);ie(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,p,h]:[y,h,p],w=r?[x,f,d]:[x,d,f],N=YR({inputs:{x:e},backend:a,attrs:{shape:v}}),S=YR({inputs:{x:t},backend:a,attrs:{shape:w}}),k=[N,S],I=Math.max(y,x),E=n?N.shape[1]:N.shape[2],C=null!=i,T=null!=s,D="leakyrelu"===u,A=null!=u?jR(u,!0):null;let M;if((1===h||1===f)&&E>1e3&&!1===(C||T||D||null!=A)){let e=N,t=S;n&&(e=o_({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),k.push(e)),r&&(t=o_({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),k.push(t));const i=1===f;let s=e;1!==f&&(s=YR({inputs:{x:e},backend:a,attrs:{shape:[I,E,1]}}),k.push(s));const o=1===f?2:1;let u=t;i&&(u=YR({inputs:{x:t},backend:a,attrs:{shape:[I,1,E]}}),k.push(u));const c=XR({inputs:{a:s,b:u},backend:a});M=i_({inputs:{x:c},backend:a,attrs:{axis:o,keepDims:!0}}),k.push(c)}else{const u=ai(e.dtype,t.dtype),c=new GR(v,w,[I,h,f],n,r,C,A,T,D),l=[N,S];if(null!=i&&l.push(i),T&&l.push(s),D){const e=a.makeTensorInfo([],"float32",Ma(o,"float32"));l.push(e),k.push(e)}M=a.runWebGLProgram(c,l,u)}const $=YR({inputs:{x:M},backend:a,attrs:{shape:b}});k.push(M);for(const e of k)a.disposeIntermediateTensorInfo(e);return $}const l_={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:p}=r;return c_({a,b:i,transposeA:u,transposeB:c,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:p,activation:l})}},p_="return abs(x);",d_={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=QO(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IR(r.shape,p_):new NR(r.shape,p_),n.runWebGLProgram(a,[r],r.dtype)}},h_=WR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),f_={kernelName:Qe,backendName:"webgl",kernelFunc:h_},m_=WR({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),g_={kernelName:et,backendName:"webgl",kernelFunc:m_},y_="return a + b;",x_=VR({opSnippet:y_,packedOpSnippet:y_,supportsComplex:!0,cpuKernelImpl:EO}),b_={kernelName:tt,backendName:"webgl",kernelFunc:x_};class v_{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class w_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const N_={kernelName:nt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return OR({inputs:{x:a[0]},backend:r});if(a.length>He().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),i=e({inputs:a.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>ai(e,t))),s=a.map((e=>e.shape)),o=He().getBool("WEBGL_PACK")?new w_(a[0].shape,s):new v_(a[0].shape,s);return r.runWebGLProgram(o,a,i)}},S_={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=be(i,a.shape);let c=u;const l=$l(c,o);let p=a;null!=l&&(p=o_({inputs:{x:a},backend:n,attrs:{perm:l}}),c=Rl(c.length,o)),Ml("all",c,o);const[d,h]=Dl(p.shape,c),f=YR({inputs:{x:p},backend:n,attrs:{shape:[-1,ce(h)]}}),m=t_(f,f.dtype,"all",n);let g;return g=YR(s?{inputs:{x:m},backend:n,attrs:{shape:Al(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}},k_={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=be(i,a.shape);let c=u;const l=$l(c,o);let p=a;null!=l&&(p=o_({inputs:{x:a},backend:n,attrs:{perm:l}}),c=Rl(c.length,o)),Ml("any",c,o);const[d,h]=Dl(p.shape,c),f=YR({inputs:{x:p},backend:n,attrs:{shape:[-1,ce(h)]}}),m=t_(f,f.dtype,"any",n);let g;return g=YR(s?{inputs:{x:m},backend:n,attrs:{shape:Al(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}};class I_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class E_{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,u=oO(o),c=mR("coords",o);let l,p;if(1===i){p=o+1;const e=oO(p);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else p=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map((e=>"int "+e)),m=mR("sourceLocR",p-1).concat("inIdx.r"),g=mR("sourceLocG",p-1).concat("inIdx.g"),y=mR("sourceLocB",p-1).concat("inIdx.b"),x=mR("sourceLocA",p-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,N=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${N}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${s[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function C_(e,t,n,r=null){let a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const s=Lh(i),o={windowSize:s,inSize:i,batchSize:a,outSize:Math.ceil(i/s)},u=new I_(o,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const p=C_(e,t,n,l);return e.disposeIntermediateTensorInfo(l),p}function T_(e,t,n,r=null){const a=null!=r?r.shape:t.shape,i=Lh(a[a.length-1]),s=new E_(a,i,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(s,o,"int32");if(u.shape.length===t.shape.length){const r=T_(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function D_(e,t,n,r){const a=[n];if(Ml("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!He().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,u]=Dl(s.shape,a),c=ce(u),l=YR({inputs:{x:s},backend:e,attrs:{shape:[-1,c]}});n.push(l);const p=C_(e,l,r);n.push(p);const d=YR({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return T_(e,t,r)}const A_={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=be(i,a.shape);const o=$l(s,a.shape.length);let u=a;const c=[];null!=o&&(u=o_({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),s=Rl(s.length,u.shape.length)),Ml("argMax",[s[0]],u.shape.length);const l=D_(n,u,s[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},M_={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=be(i,a.shape);const o=$l(s,a.shape.length);let u=a;const c=[];null!=o&&(u=o_({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),s=Rl(s.length,u.shape.length)),Ml("argMin",[s[0]],u.shape.length);const l=D_(n,u,s[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},$_=WR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),O_={kernelName:ot,backendName:"webgl",kernelFunc:$_},R_=WR({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),__={kernelName:ut,backendName:"webgl",kernelFunc:R_},F_=WR({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),z_={kernelName:ct,backendName:"webgl",kernelFunc:F_},B_=VR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),L_={kernelName:pt,backendName:"webgl",kernelFunc:B_},P_=WR({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),U_={kernelName:lt,backendName:"webgl",kernelFunc:P_};class q_{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const b=4*Math.floor(i/4),v=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class W_{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let b="0.0";if(x||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(i/4),N=i%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===N}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===N}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===N}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const V_={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;V$(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;ie(uc(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const c=Ju(a.shape,i,s,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&pe(c.inShape,c.outShape))return OR({inputs:{x:a},backend:n});const l=new q_(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}},j_={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=Qu(a.shape,i,s,[1,1,1],o,u,c),p=new W_(l,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class G_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class H_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const K_={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,p=Qu(s.shape,o,u,[1,1,1],c,l),d=new H_(p);return n.runWebGLProgram(d,[a],s.dtype)}},X_={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;V$([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=Ju(s.shape,o,u,1,c),p=new G_(l);return n.runWebGLProgram(p,[a],s.dtype)}},Z_={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:s,transposeB:o}=r;return c_({a,b:i,transposeA:s,transposeB:o,backend:n})}};class Y_{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Qs(e,t),Qs(e,n);let s="0.0";null!=r&&(Qs(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Qs(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class J_{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Qs(e,t),Qs(e,n);let s="vec4(0.0)";null!=r&&(Qs(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Qs(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Q_={kernelName:on,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:i,offset:s,scale:o}=e;ie(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==s||a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,i];let l=null;null!=s&&(l=s.shape,c.push(s));let p=null;null!=o&&(p=o.shape,c.push(o));const d=He().getBool("WEBGL_PACK_NORMALIZATION")?new J_(r.shape,a.shape,i.shape,l,p,u):new Y_(r.shape,a.shape,i.shape,l,p,u);return t.runWebGLProgram(d,c,c[0].dtype)}};class eF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=oO(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return tF.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;const a=e.map(((e,t)=>`sourceLoc.${tF[t]} = start[${t}] + coords.${tF[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const tF=["x","y","z","w","u","v"];class nF{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=oO(this.rank),n=mR("coords",this.rank),r=mR("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}function rF(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r,[o,u]=Io(a,i,s);if(lo(a,o,u),0===ce(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=eR(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=So(a.shape,o,u);if(c||!l){const e=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nF(u):new eF(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),s=r.texData.get(i.dataId);Object.assign(s,a),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=ko(t,_e(e.shape));a.slice&&(o+=a.slice.flatOffset),s.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,u+1),i}(a,o,u,n)}const aF={kernelName:br,backendName:"webgl",kernelFunc:rF},iF={kernelName:yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;ie(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=Uh(a.shape,i,o),c=qh(u.length,i.length),l=Wh(a.shape,i,o),p=Vh(s,i.length),d=jh(l,s,i.length),h=[],f=YR({inputs:{x:a},backend:n,attrs:{shape:u}}),m=o_({inputs:{x:f},backend:n,attrs:{perm:c}}),g=YR({inputs:{x:m},backend:n,attrs:{shape:l}}),y=rF({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},sF={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.readSync(a.dataId),u=n.readSync(i.dataId),c=CO(o,u,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,c)}},oF={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.readSync(r.dataId),s=n.readSync(a.dataId),o=Qs(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},uF=VR({opSnippet:"return float(a != b);",cpuKernelImpl:KO,dtype:"bool"}),cF={kernelName:jn,backendName:"webgl",kernelFunc:uF};function lF(e){const{inputs:t,backend:n}=e,{input:r}=t;return OR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const pF={kernelName:ar,backendName:"webgl",kernelFunc:lF},dF={kernelName:wt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return OR({inputs:{x:i},backend:r});const t=Vl(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=_R({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=lF({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(t),n}if(!Ie(i.dtype,s)){const e=OR({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s)return function(e,t){const n=new NR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",we("bool",1)),t=uF({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},hF="return ceil(x);",fF=WR({opSnippet:hF,packedOpSnippet:hF,cpuKernelImpl:DO}),mF={kernelName:Nt,backendName:"webgl",kernelFunc:fF};class gF{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class yF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const xF={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:s}=r;let o;o=He().getBool("WEBGL_PACK_CLIP")?new yF(a.shape):new gF(a.shape);const u=[[i],[s]];return n.runWebGLProgram(o,[a],a.dtype,u)}};class bF{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function vF(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const wF={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),i=new bF(r.shape),s=[vF(r,a.complexTensorInfos.real),vF(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}};class NF{constructor(e){this.outputShape=[],this.outputShape=zh(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class SF{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zh(e,t);const n=this.outputShape,r=n.length,a=oO(r),i=mR("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=s[t],c=s.slice(-2),l=s.join();let p=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];p+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${kF(s,u,t)}),\n            vec2(${kF(c,u,t)}));\n        }`}const d=o.length,h=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${kF(s,u,h)}),\n          vec2(${kF(c,u,h)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function kF(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function IF(e){const{inputs:t,backend:n}=e,{input:r}=t;return OR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const EF={kernelName:fn,backendName:"webgl",kernelFunc:IF};function CF(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>lF({inputs:{input:e},backend:n}))),a=e.map((e=>IF({inputs:{input:e},backend:n}))),i=CF(r,t,n),s=CF(a,t,n),o=_R({inputs:{real:i,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=ce(e.shape.slice(t));return YR({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=zh(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=AO(i,s,r,o),c=zh(e.map((e=>e.shape)),t),l=n.makeTensorInfo(c,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}if(e.length>He().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=CF(e.slice(0,r),t,n),i=CF(e.slice(r),t,n),s=CF([a,i],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}if(He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new SF(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:i,outShape:s}=function(e,t,n){const r=zh(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>YR({inputs:{x:e},attrs:{shape:[-1,ce(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new NF(i.map((e=>e.shape))),u=n.runWebGLProgram(o,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=YR({inputs:{x:u},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(u),c}function TF(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=be(a,t[0].shape)[0],s=zh(t.map((e=>e.shape)),i);if(0===ce(s))return n.makeTensorInfo(s,t[0].dtype,[]);const o=t.filter((e=>ce(e.shape)>0));return 1===o.length?OR({inputs:{x:o[0]},backend:n}):(Fh(o.map((e=>e.shape)),i),CF(o,i,n))}const DF={kernelName:Et,backendName:"webgl",kernelFunc:TF};class AF{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let b="",v="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class MF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $F{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=dO(this.outputShape.length);const{dataFormat:n}=t,r=G$(),a="channelsLast"===n,i=a?0:1,s=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function OF({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h="channelsLast"===n.dataFormat;let f;const m=[];if((1!==p&&1!==d||!(l>1e3))&&c.isPacked&&h&&null!=c.texture&&u[2]%2!=0&&pe(c.shape.slice(-3),u.slice(-3))){const l=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,ie(B$(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const h=YR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(h);const g=c_({a:p,b:h,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),y=r.texData.get(g.dataId);ie(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,y.shape=n.outShape,f=OR({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const c=YR({inputs:{x:e},backend:r,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),l=YR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=c_({a:c,b:l,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});f=YR({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),m.push(c),m.push(l),m.push(p)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function RF({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:p,outHeight:d,dataFormat:h}=n,f="channelsLast"===h,m=u*c*l,g=d*p,y=[m,g],x=[],b=YR({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=YR({inputs:{x:t},backend:r,attrs:{shape:[1,m,ce(t.shape)/m]}});x.push(b),x.push(v);const w=new $F(y,n),N=[b.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(w,[b],"float32",N),k=YR({inputs:{x:S},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(S),x.push(k);const I=null!=a,E=null!=i,C="leakyrelu"===o,T=o?jR(o,!0):null,D=new GR(k.shape,v.shape,[1,g,n.outChannels],!0,!1,I,T,E,C),A=[k,v];if(a&&A.push(a),E&&A.push(i),C){const e=r.makeTensorInfo([],"float32",Ma(s,"float32"));A.push(e),x.push(e)}const M=r.runWebGLProgram(D,A,"float32"),$=YR({inputs:{x:M},backend:r,attrs:{shape:f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});x.push(M);for(const e of x)r.disposeIntermediateTensorInfo(e);return $}const _F={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,p=cc(u),d=ec(a.shape,i.shape,s,c,o,l,!1,p);let h;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=RF({x:a,filter:i,convInfo:d,backend:n});else{const e=new AF(d);h=n.runWebGLProgram(e,[a,i],"float32")}else h=OF({x:a,filter:i,convInfo:d,backend:n});const f=YR({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class FF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,c=i?2:3,l=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const PF={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,p=cc(u),d=ec(a.shape,l,s,1,o,c,!1,p),h=new FF(d);return n.runWebGLProgram(h,[a,i],"float32")}},UF={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,p=cc(c),d=ec(s,i.shape,o,1,u,l,!1,p),h=new zF(d);return n.runWebGLProgram(h,[a,i],"float32")}},qF={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,c=tc(a.shape,i.shape,s,u,o),l=new MF(c);return n.runWebGLProgram(l,[a,i],"float32")}},WF={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r,c=tc(a.shape,u,s,1,o),l=new BF(c);return n.runWebGLProgram(l,[a,i],"float32")}},VF={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r,c=tc(u,i.shape,o,1,s),l=new LF(c);return n.runWebGLProgram(l,[a,i],"float32")}},jF=WR({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),GF={kernelName:Ot,backendName:"webgl",kernelFunc:jF},HF=WR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),KF={kernelName:Rt,backendName:"webgl",kernelFunc:HF};class XF{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,s,o,u]=e,[c]=t,[l,p]=n;this.outputShape=[c,l,p,u];const d="bilinear"===r?1:0,[h,f]=[s-1+".0",o-1+".0"],[m,g,y]=l>1?[""+(s-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,b,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const ZF={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new XF(a.shape,i.shape,o,u,c);return n.runWebGLProgram(l,[a,i,s],"float32")}};class YF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${JF(r,"coords")})`,i=e[e.length-1];let s="",o="";t?(s=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(s=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${oO(r)} coords = getOutputCoords();\n        int end = ${QF(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${o};\n          ${QF(r,"coords")} = idx;\n          val += getX(${JF(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function JF(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function QF(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const ez={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r,u=a.shape.length,c=$l([i],u);let l=a;null!=c&&(l=o_({inputs:{x:a},backend:n,attrs:{perm:c}}));const p=Rl(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${i}`);const d=l.shape[p];let h=OR({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new YF(l.shape,!1,o),r=[[e]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(s){const e=new YF(l.shape,s,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=o_({inputs:{x:h},backend:n,attrs:{perm:Ol(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}},tz={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(i.dataId),r=CO(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=TO(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class nz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rz={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r,o=a.shape[0],u=("NHWC"===s?a.shape[1]:a.shape[2])*i,c=("NHWC"===s?a.shape[2]:a.shape[3])*i,l=("NHWC"===s?a.shape[3]:a.shape[1])/(i*i),p=new nz("NHWC"===s?[o,u,c,l]:[o,l,u,c],i,s);return n.runWebGLProgram(p,[a],a.dtype)}};class az{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dO(this.outputShape.length);const i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}class iz{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dO(this.outputShape.length);const i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,p=l;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<l;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<l&&(s%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<l)){const e=s%2==0?ee(u):u;u%2==0&&s%2==1||u%2!=0&&s%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<l&&(s%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<l&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<l&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<l&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<l&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const sz={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),ie(uc(s,l),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const p=ec(a.shape,i.shape,s,l,o,c,!0);let d;d=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new iz(p):new az(p);const h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[a,i],"float32",h)}};class oz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cz={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,p=ec(a.shape,l,s,o,u,c,!0),d=new oz(p);return n.runWebGLProgram(d,[a,i],"float32")}},lz={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,p=ec(l,i.shape,s,o,u,c,!0),d=new uz(p);return n.runWebGLProgram(d,[a,i],"float32")}};class pz{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const dz={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=ce(r.shape),s=YR({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new pz(i),u=n.runWebGLProgram(o,[s],s.dtype),c=YR({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),c}};class hz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${l}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fz={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,c=Yu(a.shape,i.shape,s,o,"NHWC",u);let l;const p=new hz(c);l=n.runWebGLProgram(p,[a,i],"float32");const d=YR({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),d}},mz={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=lf(a,i.length);df(s.length,u,i);const{path:c,steps:l}=hf(o,u),p=l.length;let d=null,h=s.length;const f=[];for(let e=0;e<p;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=pf(h,u[t]);let a;ff(e)?a=i[t]:(a=o_({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);pe(a.shape,s)||(a=YR({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=XR({inputs:{a,b:d},backend:n}),f.push(d))}e<p-1&&(c[e]>=0&&(d=i_({inputs:{x:d},backend:n,attrs:{axis:c[e]-(s.length-h),keepDims:!1}}),f.push(d)),h--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},gz=WR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),yz={kernelName:Kt,backendName:"webgl",kernelFunc:gz},xz={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $R("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new MR("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},bz=VR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:MO}),vz={kernelName:Yt,backendName:"webgl",kernelFunc:bz},wz=WR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Kh};\n  float a1 = ${Xh};\n  float a2 = ${Zh};\n  float a3 = ${Yh};\n  float a4 = ${Jh};\n  float a5 = ${Qh};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Nz={kernelName:Zt,backendName:"webgl",kernelFunc:wz},Sz=WR({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:$O,dtype:"float32"}),kz={kernelName:Jt,backendName:"webgl",kernelFunc:Sz};function Iz(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice();let u=a;return a<0&&(ie(-(s+1)<=a,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+a+1),o.splice(u,0,1),YR({inputs:{x:i},backend:r,attrs:{shape:o}})}const Ez={kernelName:Qt,backendName:"webgl",kernelFunc:Iz},Cz="return exp(x) - 1.0;",Tz=WR({opSnippet:Cz,packedOpSnippet:Cz,cpuKernelImpl:OO}),Dz={kernelName:en,backendName:"webgl",kernelFunc:Tz};class Az{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Mz(e,t,n){const r=n.texData.get(e.dataId),a=ce(e.shape),i=e.shape[e.shape.length-1],s=YR({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),o=s.shape,u=new Az("real",o,t),c=new Az("imag",o,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(u,l,"float32"),d=n.runWebGLProgram(c,l,"float32"),h=_R({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=YR({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(h),f}const $z={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Mz(r,!1,n)}};class Oz{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Rz(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||$e(a),"string"===i){const e=Ne(i,ce(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new Oz(r,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const _z={kernelName:nn,backendName:"webgl",kernelFunc:Rz};class Fz{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const zz={kernelName:rn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Fz(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Bz="return floor(x);",Lz=WR({opSnippet:Bz,packedOpSnippet:Bz,cpuKernelImpl:RO}),Pz={kernelName:an,backendName:"webgl",kernelFunc:Lz},Uz=VR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),qz={kernelName:sn,backendName:"webgl",kernelFunc:Uz};class Wz{constructor(e){this.variableNames=["A"];const t=G$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Vz{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=G$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const jz={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],p=[c,u,i];(o||s)&&(null==Gz&&(Gz=document.createElement("canvas").getContext("2d")),Gz.canvas.width=u,Gz.canvas.height=c,Gz.drawImage(a,0,0,u,c),a=Gz.canvas);const d=n.makeTensorInfo(l,"int32");n.texData.get(d.dataId).usage=y$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const h=He().getBool("WEBGL_PACK")?new Vz(p):new Wz(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}};let Gz;const Hz={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r,m=cc(l),g=ec(a.shape,i.shape,u,p,c,d,!1,m);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=RF({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=s,t=null!=o,r="leakyrelu"===h,u=h?jR(h,!1):null,c=new AF(g,e,u,t,r),l=[a,i];if(s&&l.push(s),o&&l.push(o),r){const e=n.makeTensorInfo([],"float32",Ma(f,"float32"));l.push(e),x.push(e)}y=n.runWebGLProgram(c,l,"float32")}else y=OF({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const b=YR({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Kz={kernelName:ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=r,f=[];let m=l;null==m&&(m=[1,1]),ie(uc(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=ec(a.shape,i.shape,u,m,c,p,!0),y=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=d?jR(d,y):null,b=[a,i],v=null!=s,w=null!=o,N="leakyrelu"===d;if(v&&b.push(s),w&&b.push(o),N){const e=n.makeTensorInfo([],"float32",Ma(h,"float32"));b.push(e),f.push(e)}let S;S=y?new iz(g,v,x,w,N):new az(g,v,x,w,N);const k=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,b,"float32",k);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class Xz{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=oO(t.length),a=oO(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Zz={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,s=i[i.length-1],o=ce(r.shape),[u,c,l,p]=so(r,a),d=YR({inputs:{x:a},backend:n,attrs:{shape:[c,s]}}),h=YR({inputs:{x:r},backend:n,attrs:{shape:[ce(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),i=_O(e,t,r.dtype,c,s,l,p,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new Xz(s,p,[c,l]),m=n.runWebGLProgram(f,[h,d],h.dtype),g=YR({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class Yz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=oO(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Jz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r,u=be(s,a.shape)[0];if(He().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];ie(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=Mf(a,i,u,o),l=ce(i.shape),p=[],d=YR({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=YR({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});p.push(d),p.push(h);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(h),t=n.bufferSync(d),r=FO(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new Yz(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);const y=YR({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const Qz={kernelName:un,backendName:"webgl",kernelFunc:Jz},eB=VR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zO,dtype:"bool"}),tB={kernelName:ln,backendName:"webgl",kernelFunc:eB},nB=VR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:BO}),rB={kernelName:pn,backendName:"webgl",kernelFunc:nB},aB={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Mz(r,!0,n)}},iB=WR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sB={kernelName:mn,backendName:"webgl",kernelFunc:iB},oB=WR({opSnippet:"return float(isinf(x));",dtype:"bool"}),uB={kernelName:gn,backendName:"webgl",kernelFunc:oB},cB=WR({opSnippet:"return float(isnan(x));",dtype:"bool"}),lB={kernelName:yn,backendName:"webgl",kernelFunc:cB},pB=VR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:LO,dtype:"bool"}),dB={kernelName:bn,backendName:"webgl",kernelFunc:pB},hB=VR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:PO,dtype:"bool"}),fB={kernelName:vn,backendName:"webgl",kernelFunc:hB},mB={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=UO(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},gB=WR({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:qO}),yB={kernelName:Nn,backendName:"webgl",kernelFunc:gB},xB=WR({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),bB={kernelName:Sn,backendName:"webgl",kernelFunc:xB},vB=VR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),wB={kernelName:kn,backendName:"webgl",kernelFunc:vB},NB=WR({opSnippet:"return float(!(x >= 1.0));"}),SB={kernelName:In,backendName:"webgl",kernelFunc:NB},kB=VR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),IB={kernelName:En,backendName:"webgl",kernelFunc:kB};class EB{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class CB{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const TB={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r,c=He().getBool("WEBGL_PACK_NORMALIZATION")?new CB(a.shape,i,s,o,u):new EB(a.shape,i,s,o,u);return n.runWebGLProgram(c,[a],a.dtype)}};class DB{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const AB={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,p=new DB(a.shape,o,u,c,l);return n.runWebGLProgram(p,[a,i,s],a.dtype)}};function MB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=a.shape.length,u=be(i,a.shape);let c=u;const l=$l(c,o),p=null!=l,d=n.shouldExecuteOnCPU([a]);let h=a;if(p){if(d){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[l[e]];const r=dR(e,a.shape,a.dtype,l,t);h=n.makeTensorInfo(t,a.dtype),n.texData.get(h.dataId).values=r}else h=a_(a,l,n);c=Rl(c.length,o)}Ml("max",c,o);const[f,m]=Dl(h.shape,c);let g,y=f;if(s&&(y=Al(f,u)),d){const e=n.texData.get(h.dataId).values,t=WO(e,ce(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=ce(t),i=YR({inputs:{x:e},attrs:{shape:[ce(e.shape)/a,a]},backend:r}),s=t_(i,e.dtype,"max",r),o=YR({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(h,m,y,n);return p&&n.disposeIntermediateTensorInfo(h),g}const $B={kernelName:An,backendName:"webgl",kernelFunc:MB},OB=VR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:VO}),RB={kernelName:Mn,backendName:"webgl",kernelFunc:OB},_B={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;V$(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;ie(uc(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const c=Ju(a.shape,i,s,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&pe(c.inShape,c.outShape))return OR({inputs:{x:a},backend:n});const l=new q_(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}},FB={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=Qu(a.shape,i,s,[1,1,1],o,c,u),p=new W_(l,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class zB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,p=u-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const LB={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,p=Qu(s.shape,o,u,[1,1,1],c,l),d=new W_(p,"max",!0),h=n.runWebGLProgram(d,[s],s.dtype),f=new BB(p),m=n.runWebGLProgram(f,[a,h],s.dtype);return n.disposeIntermediateTensorInfo(h),m}},PB={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;V$([i,s],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:p}=r,d=Ju(o.shape,u,c,1,l,p),h=new q_(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new zB(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},UB={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;ie(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];ie(uc(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const l=Ju(r.shape,a,i,c,s),[p,d]=function(e,t,n,r){let a=new q_(n,"max",!1);const i=r.runWebGLProgram(a,[e],"float32");return a=new q_(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(r,o,l,u);return[p,d]}},qB={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:i}=t,s=n,o=r.shape.length,u=be(i,r.shape);let c=u;const l=$l(c,o),p=null!=l,d=s.shouldExecuteOnCPU([r]),h=[];let f=r;if(p){if(d){const e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[l[e]];const n=dR(e,r.shape,r.dtype,l,t);f=s.makeTensorInfo(t,r.dtype),s.texData.get(f.dataId).values=n}else f=a_(r,l,s);h.push(f),c=Rl(c.length,o)}Ml("sum",c,o);const[m,g]=Dl(f.shape,c);let y=m;a&&(y=Al(m,u));const x=function(e,t,n,r){const a=ce(t),i=YR({inputs:{x:e},attrs:{shape:[ce(e.shape)/a,a]},backend:r}),s=t_(i,"float32","mean",r),o=YR({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(f,g,y,s);for(const e of h)s.disposeIntermediateTensorInfo(e);return x}},WB={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=be(i,a.shape);let c=u;const l=$l(c,o);let p=a;null!=l&&(p=o_({inputs:{x:a},backend:n,attrs:{perm:l}}),c=Rl(c.length,a.shape.length)),Ml("min",c,o);const[d,h]=Dl(p.shape,c),f=YR({inputs:{x:p},backend:n,attrs:{shape:[-1,ce(h)]}}),m=t_(f,f.dtype,"min",n);let g;return g=YR(s?{inputs:{x:m},backend:n,attrs:{shape:Al(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}},VB=VR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jO}),jB={kernelName:Ln,backendName:"webgl",kernelFunc:VB};class GB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=oO(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class HB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=oO(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=mR("rc",r),u=mR("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const KB={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:i}=n,s=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HB(r.shape,a,i):new GB(r.shape,a,i);return t.runWebGLProgram(s,[r],r.dtype)}},XB=VR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ZB={kernelName:Un,backendName:"webgl",kernelFunc:XB};class YB{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const JB=VR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),QB={kernelName:Gt,backendName:"webgl",kernelFunc:JB},eL="return a - b;",tL=VR({opSnippet:eL,packedOpSnippet:eL,supportsComplex:!0,cpuKernelImpl:cR}),nL={kernelName:Ur,backendName:"webgl",kernelFunc:tL};function rL(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=be([i],a.shape),o=MB({inputs:{x:a},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),u=Al(o.shape,s),c=YR({inputs:{x:o},backend:n,attrs:{shape:u}}),l=tL({inputs:{a,b:c},backend:n}),p=Sz({inputs:{x:l},backend:n}),d=i_({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:!1}}),h=YR({inputs:{x:d},backend:n,attrs:{shape:u}}),f=JB({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}const aL={kernelName:Dr,backendName:"webgl",kernelFunc:rL},iL={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r,u=o?a:rL({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],p=new YB(c,l,i),d=[[s]],h=n.runWebGLProgram(p,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),h}},sL={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=HO(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IR(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new NR(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},oL=Gd,uL={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){aa("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(i.dataId),{selectedIndices:p}=oL(c,l,s,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},cL=Hd,lL={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){aa("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),p=n.readSync(i.dataId),{selectedIndices:d,validOutputs:h}=cL(l,p,s,o,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},pL=Kd,dL={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){aa("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),p=n.readSync(i.dataId),d=s,h=o,f=u,m=c,{selectedIndices:g,selectedScores:y}=pL(l,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class hL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const fL={kernelName:Zn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:i,onValue:s,offValue:o}=r,u=ce(a.shape),c=new hL(u,i,s,o),l=YR({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const d=YR({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function mL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=lF({inputs:{input:r},backend:n}),t=mL({inputs:{x:e},backend:n}),a=IF({inputs:{input:r},backend:n}),i=mL({inputs:{x:a},backend:n}),s=_R({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return Rz({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gL={kernelName:Yr,backendName:"webgl",kernelFunc:mL},yL={kernelName:Xn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=lF({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=IF({inputs:{input:a},backend:r}),s=mL({inputs:{x:i},backend:r}),o=_R({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return Rz({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},xL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Iz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{se(i,e.shape,"All tensors passed to stack must have matching shapes"),ie(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=TF({inputs:t.map((e=>{const t=Iz({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class bL{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=oO(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class vL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=oO(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=mR("rc",r),u=mR("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const wL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;if(0===ce(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return Rz({backend:n,attrs:{shape:e,value:s,dtype:a.dtype}})}const o=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vL(a.shape,i,s):new bL(a.shape,i,s),u=[[s]];return n.runWebGLProgram(o,[a],a.dtype,u)},NL={kernelName:Jn,backendName:"webgl",kernelFunc:wL},SL=VR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kL={kernelName:er,backendName:"webgl",kernelFunc:SL},IL={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=[],c=be(i,a.shape);let l=c;const p=$l(l,o);let d,h=a;if(null!=p&&(h=o_({inputs:{x:a},backend:n,attrs:{perm:p}}),l=Rl(l.length,o),u.push(h)),Ml("prod",l,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=XO(h.shape,h.dtype,e,l);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=Dl(h.shape,l),r=ce(t),i=YR({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),s=t_(i,ii(a.dtype),"prod",n);d=YR({inputs:{x:s},backend:n,attrs:{shape:e}}),u.push(i),u.push(s)}if(s){u.push(d);const e=Al(d.shape,c);d=YR({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},EL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:s}=n,o=ZO(r,a,i,s);return t.makeTensorInfo([o.length],s,o)},CL={kernelName:rr,backendName:"webgl",kernelFunc:EL},TL=WR({opSnippet:"return 1.0 / x;"}),DL={kernelName:ir,backendName:"webgl",kernelFunc:TL},AL=WR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ML={kernelName:sr,backendName:"webgl",kernelFunc:AL},$L=WR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),OL={kernelName:dr,backendName:"webgl",kernelFunc:$L};class RL{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class _L{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const FL={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,c]=o,l=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _L(a.shape,u,c,i,s):new RL(a.shape,u,c,i,s);return n.runWebGLProgram(l,[a],"float32")}};class zL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],c=o[0]/u[0],l=o[1]/u[1],p=1/c,d=1/l,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BL={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new zL(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};class LL{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class PL{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const UL={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,c]=o,l=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new PL(a.shape,u,c,i,s):new LL(a.shape,u,c,i,s);return n.runWebGLProgram(l,[a],a.dtype)}};class qL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],c=o[0]/u[0],l=o[1]/u[1],p=1/c,d=1/l,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const WL={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new qL(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};class VL{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=oO(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class jL{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=mR("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=oO(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const GL={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,s=a.shape.length,o=be(i,a.shape);if(0===s)return OR({inputs:{x:a},backend:n});const u=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jL(a.shape,o):new VL(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class HL{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const KL={kernelName:ea,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=new HL(r.shape,i),[c,l]=Ph(s,r.shape[1],r.shape[2]),p=[[c,l,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,p)}},XL=WR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ZL={kernelName:fr,backendName:"webgl",kernelFunc:XL},YL=WR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:YO}),JL={kernelName:mr,backendName:"webgl",kernelFunc:YL};class QL{constructor(e,t,n,r,a,i,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=oO(a.length),u=oO(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const eP={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:p}=co(0,a,s),d=[p/c,c];if(0===p)return n.makeTensorInfo(s,a.dtype);const h=YR({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=YR({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new QL(u,o,h.shape.length,f.shape.length,l,d),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=YR({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}};class tP{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),a=s.join()}const i=oO(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const nP={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,s=new tP(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,i],ai(a.dtype,i.dtype))}},rP=WR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gh};\n  float scale = ${Hh};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),aP={kernelName:xr,backendName:"webgl",kernelFunc:rP},iP=WR({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:JO}),sP={kernelName:Sr,backendName:"webgl",kernelFunc:iP},oP=WR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),uP={kernelName:Nr,backendName:"webgl",kernelFunc:oP},cP=WR({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),lP={kernelName:vr,backendName:"webgl",kernelFunc:cP},pP=WR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),dP={kernelName:wr,backendName:"webgl",kernelFunc:pP},hP=WR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fP={kernelName:kr,backendName:"webgl",kernelFunc:hP},mP={kernelName:Cr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;ie(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const c=[],l=wL({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=Uh(l.shape,i,o,!1),d=qh(p.length,i.length,!1),h=Wh(l.shape,i,o,!1),f=YR({inputs:{x:l},backend:n,attrs:{shape:p}}),m=o_({inputs:{x:f},backend:n,attrs:{perm:d}}),g=YR({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},gP={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId),l=n.readSync(s.dataId)[0],[p,d,h,f,m]=tR(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},yP={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[c,l,p]=nR(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}},xP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[c,l]=rR(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},bP={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[c,l]=rR(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},vP={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:p}=co(0,a,o),d=new QL(c,u,a.shape.length,i.shape.length,l,[p,1],!1),h=n.runWebGLProgram(d,[i,a,s],i.dtype),f=YR({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),f}},wP={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=be(s,a.shape)[0],u=gf(a,i,o),c=a.shape.length,l=new Array(c).fill(0),p=a.shape.slice();return u.map((e=>{const t=[...p];t[o]=e;const r=rF({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},NP="return sqrt(x);",SP=WR({opSnippet:NP,packedOpSnippet:NP,cpuKernelImpl:aR}),kP={kernelName:Ir,backendName:"webgl",kernelFunc:SP},IP=WR({opSnippet:"return x * x;"}),EP={kernelName:Fr,backendName:"webgl",kernelFunc:IP},CP="return (a - b) * (a - b);",TP=VR({opSnippet:CP,packedOpSnippet:CP}),DP={kernelName:_r,backendName:"webgl",kernelFunc:TP},AP={kernelName:Jr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new NR(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}};class MP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=oO(n.length),i=oO(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}const $P={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:d}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:b,strides:v}=Eo(a.shape,i,s,o,u,c,l,p,d);let w;if(m)w=YR({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){ie(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ho(x,b,v),t=rF({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});w=YR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Es(a.shape,a.dtype,e),r=iR(h,t,v,x);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new MP(x,v,h);w=n.runWebGLProgram(e,[a],a.dtype)}const N=YR({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),N}},OP={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:p}=t,d=n.readSync(l.dataId),h=n.readSync(p.dataId),[f,m]=sR(d,h,a,i,s,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},RP={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(i.dataId),u=n.readSync(s.dataId)[0],[c,l,p]=oR(o,u,a),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},_P={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(i.dataId),o=uR(s,a);return n.makeTensorInfo(i.shape,"int32",o)}},FP=WR({opSnippet:"return tan(x);"}),zP={kernelName:qr,backendName:"webgl",kernelFunc:FP},BP=WR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),LP={kernelName:Wr,backendName:"webgl",kernelFunc:BP};class PP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=oO(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function UP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Fa(e))):e,r=Es(a.shape,a.dtype,t),s=lR(r,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new PP(a.shape,i);return n.runWebGLProgram(s,[a],a.dtype)}const qP={kernelName:Vr,backendName:"webgl",kernelFunc:UP};class WP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class VP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function jP(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function GP(e){let t=1;for(;t<e;)t*=2;return t}const HP={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r,o=He().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=He().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([a])||l<o||i>u){const e=n.readSync(a.dataId),[t,r]=pR(e,c,a.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[a,Rz({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,h=d?n.unpackTensor(a):a,f=ce(c)/l,m=YR({inputs:{x:h},attrs:{shape:[f,l]},backend:n});d&&jP(n,h);const g=GP(i),y=GP(l);let x=null;const b=()=>null===x?[m,m]:[m,x],v=(e,t,r)=>{const a=b(),i=new WP(r),s=[[l],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(i,a,"int32",s),jP(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=b(),r=new VP([f,e/2]),a=[[l],[null===x?1:0],[g]],i=x;x=n.runWebGLProgram(r,t,"int32",a),jP(n,i);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)v(o,e,x.shape)}let w=x;x=rF({inputs:{x},backend:n,attrs:{begin:0,size:[f,i]}}),jP(n,w);let N=Jz({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});jP(n,m);const S=c.slice(0,-1);S.push(i),w=x,x=YR({inputs:{x},attrs:{shape:S},backend:n}),jP(n,w);const k=N;return N=YR({inputs:{x:N},attrs:{shape:S},backend:n}),jP(n,k),[N,x]}};class KP{constructor(e,t,n,r,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const s="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const XP={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:c}=r,[l,p,d,h]=a.shape,[f,m]=null!=c?c:[p,d],g=new KP(p,d,s,o,u,[l,f,m,h]);return n.runWebGLProgram(g,[a,i],"float32")}},ZP={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;V$(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:c}=hR(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},YP={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a,o=s.shape.length,u=a.shape[i],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==i&&(c[l++]=s.shape[e]);const p=[],d=new Array(o).fill(0),h=s.shape.slice();h[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[i]=e;const t=rF({inputs:{x:s},backend:n,attrs:{begin:d,size:h}}),r=YR({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class JP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const QP={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r,o=a.shape.length,u=[];let c=0;const l=$l([c],o);let p=a;null!=l&&(p=o_({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(p),c=Rl(1,o)[0]);const d=Af(p.shape,c,s),h=ce([p.shape[c]]),f=YR({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=ii(a.dtype),g=(e,t,r,a,i)=>{const s=e.shape[0],o=e.shape[1],c=Df(o,i),l=new JP({windowSize:c,inSize:o,batchSize:s,numSegments:i},t),p=n.compileAndRun(l,[e,r],a);if(u.push(p),p.shape[1]===i)return p;const d=EL({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),h=UP({inputs:{x:d},backend:n,attrs:{reps:[o/c]}});return u.push(d),u.push(h),g(p,t,h,a,i)},y=YR({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:d}});let x=y;if(null!=l){u.push(y);const e=Ol(l);x=o_({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},eU=[l_,d_,f_,g_,b_,N_,S_,k_,A_,M_,O_,__,z_,L_,U_,V_,j_,K_,X_,Z_,Q_,iF,sF,oF,dF,mF,xF,FR,wF,DF,_F,PF,UF,qF,WF,VF,GF,KF,ZF,ez,tz,rz,sz,cz,lz,dz,fz,mz,yz,xz,vz,Nz,kz,Ez,Dz,$z,_z,zz,Pz,qz,jz,Hz,Kz,Zz,Qz,tB,rB,RR,aB,EF,sB,uB,lB,LR,dB,fB,mB,yB,bB,wB,SB,IB,TB,AB,$B,RB,_B,FB,LB,PB,UB,qB,WB,jB,KB,ZB,iL,ZR,sL,uL,lL,dL,cF,fL,yL,xL,NL,kL,qR,IL,CL,pF,QB,DL,ML,OL,JR,FL,BL,UL,WL,GL,KL,ZL,JL,eP,nP,aP,sP,uP,lP,dP,aF,aL,fP,mP,gP,yP,xP,bP,vP,wP,kP,EP,DP,AP,$P,OP,RP,_P,nL,s_,zP,LP,qP,HP,XP,u_,ZP,YP,QP,gL];for(const e of eU)pa(e);const tU={"tfjs-core":qo,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":aE,"tfjs-layers":db,"tfjs-converter":Zk,tfjs:"3.13.0"};function nU(){return nU=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},nU.apply(this,arguments)}var rU={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null};function aU(e){return"number"==typeof e}function iU(e){return!(!e||"object"!=typeof e||"function"!=typeof e.constructor)&&(!0===e.isBigNumber&&"object"==typeof e.constructor.prototype&&!0===e.constructor.prototype.isBigNumber||"function"==typeof e.constructor.isDecimal&&!0===e.constructor.isDecimal(e))}function sU(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isComplex||!1}function oU(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isFraction||!1}function uU(e){return e&&!0===e.constructor.prototype.isUnit||!1}function cU(e){return"string"==typeof e}var lU=Array.isArray;function pU(e){return e&&!0===e.constructor.prototype.isMatrix||!1}function dU(e){return Array.isArray(e)||pU(e)}function hU(e){return e&&e.isDenseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function fU(e){return e&&e.isSparseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function mU(e){return e&&!0===e.constructor.prototype.isRange||!1}function gU(e){return e&&!0===e.constructor.prototype.isIndex||!1}function yU(e){return"boolean"==typeof e}function xU(e){return e&&!0===e.constructor.prototype.isResultSet||!1}function bU(e){return e&&!0===e.constructor.prototype.isHelp||!1}function vU(e){return"function"==typeof e}function wU(e){return e instanceof Date}function NU(e){return e instanceof RegExp}function SU(e){return!(!e||"object"!=typeof e||e.constructor!==Object||sU(e)||oU(e))}function kU(e){return null===e}function IU(e){return void 0===e}function EU(e){return e&&!0===e.isAccessorNode&&!0===e.constructor.prototype.isNode||!1}function CU(e){return e&&!0===e.isArrayNode&&!0===e.constructor.prototype.isNode||!1}function TU(e){return e&&!0===e.isAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function DU(e){return e&&!0===e.isBlockNode&&!0===e.constructor.prototype.isNode||!1}function AU(e){return e&&!0===e.isConditionalNode&&!0===e.constructor.prototype.isNode||!1}function MU(e){return e&&!0===e.isConstantNode&&!0===e.constructor.prototype.isNode||!1}function $U(e){return e&&!0===e.isFunctionAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function OU(e){return e&&!0===e.isFunctionNode&&!0===e.constructor.prototype.isNode||!1}function RU(e){return e&&!0===e.isIndexNode&&!0===e.constructor.prototype.isNode||!1}function _U(e){return e&&!0===e.isNode&&!0===e.constructor.prototype.isNode||!1}function FU(e){return e&&!0===e.isObjectNode&&!0===e.constructor.prototype.isNode||!1}function zU(e){return e&&!0===e.isOperatorNode&&!0===e.constructor.prototype.isNode||!1}function BU(e){return e&&!0===e.isParenthesisNode&&!0===e.constructor.prototype.isNode||!1}function LU(e){return e&&!0===e.isRangeNode&&!0===e.constructor.prototype.isNode||!1}function PU(e){return e&&!0===e.isSymbolNode&&!0===e.constructor.prototype.isNode||!1}function UU(e){return e&&!0===e.constructor.prototype.isChain||!1}function qU(e){var t=typeof e;return"object"===t?null===e?"null":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":iU(e)?"BigNumber":sU(e)?"Complex":oU(e)?"Fraction":pU(e)?"Matrix":uU(e)?"Unit":gU(e)?"Index":mU(e)?"Range":xU(e)?"ResultSet":_U(e)?e.type:UU(e)?"Chain":bU(e)?"Help":"Object":"function"===t?"Function":t}function WU(e){var t=typeof e;if("number"===t||"string"===t||"boolean"===t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map((function(e){return WU(e)}));if(e instanceof Date)return new Date(e.valueOf());if(iU(e))return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);return VU(e,WU)}function VU(e,t){var n={};for(var r in e)YU(e,r)&&(n[r]=t(e[r]));return n}function jU(e,t){for(var n in t)YU(t,n)&&(e[n]=t[n]);return e}function GU(e,t){if(Array.isArray(t))throw new TypeError("Arrays are not supported by deepExtend");for(var n in t)if(YU(t,n)&&!(n in Object.prototype)&&!(n in Function.prototype))if(t[n]&&t[n].constructor===Object)void 0===e[n]&&(e[n]={}),e[n]&&e[n].constructor===Object?GU(e[n],t[n]):e[n]=t[n];else{if(Array.isArray(t[n]))throw new TypeError("Arrays are not supported by deepExtend");e[n]=t[n]}return e}function HU(e,t){var n,r,a;if(Array.isArray(e)){if(!Array.isArray(t))return!1;if(e.length!==t.length)return!1;for(r=0,a=e.length;r<a;r++)if(!HU(e[r],t[r]))return!1;return!0}if("function"==typeof e)return e===t;if(e instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(n in e)if(!(n in t)||!HU(e[n],t[n]))return!1;for(n in t)if(!(n in e))return!1;return!0}return e===t}function KU(e){var t={};return XU(e,t),t}function XU(e,t){for(var n in e)if(YU(e,n)){var r=e[n];"object"==typeof r&&null!==r?XU(r,t):t[n]=r}}function ZU(e,t,n){var r,a=!0;Object.defineProperty(e,t,{get:function(){return a&&(r=n(),a=!1),r},set:function(e){r=e,a=!1},configurable:!0,enumerable:!0})}function YU(e,t){return e&&Object.hasOwnProperty.call(e,t)}function JU(e){return Object.keys(e).map((t=>e[t]))}var QU=["Matrix","Array"],eq=["number","BigNumber","Fraction"];function tq(e,t){function n(n){if(n){var r=VU(e,WU);nq(n,"matrix",QU),nq(n,"number",eq),GU(e,n);var a=VU(e,WU),i=VU(n,WU);return t("config",a,r,i),a}return VU(e,WU)}return n.MATRIX_OPTIONS=QU,n.NUMBER_OPTIONS=eq,Object.keys(rU).forEach((t=>{Object.defineProperty(n,t,{get:()=>e[t],enumerable:!0,configurable:!0})})),n}function nq(e,t,n){void 0===e[t]||function(e,t){return-1!==e.indexOf(t)}(n,e[t])||console.warn('Warning: Unknown value "'+e[t]+'" for configuration option "'+t+'". Available options: '+n.map((e=>JSON.stringify(e))).join(", ")+".")}var rq=function(e){if(e)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(rU)};nU(rq,rU,{MATRIX_OPTIONS:QU,NUMBER_OPTIONS:eq});var aq=n(776);function iq(e,t,n,r){function a(r){var a=function(e,t){for(var n={},r=0;r<t.length;r++){var a=t[r],i=e[a];void 0!==i&&(n[a]=i)}return n}(r,t.map(oq));return function(e,t,n){if(!t.filter((e=>!function(e){return e&&"?"===e[0]}(e))).every((e=>void 0!==n[e]))){var r=t.filter((e=>void 0===n[e]));throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(r.map((e=>'"'.concat(e,'"'))).join(", "),"."))}}(e,t,r),n(a)}return a.isFactory=!0,a.fn=e,a.dependencies=t.slice().sort(),r&&(a.meta=r),a}function sq(e){return"function"==typeof e&&"string"==typeof e.fn&&Array.isArray(e.dependencies)}function oq(e){return e&&"?"===e[0]?e.slice(1):e}var uq=iq("BigNumber",["?on","config"],(e=>{var{on:t,config:n}=e,r=aq.clone({precision:n.precision,modulo:aq.EUCLID});return r.prototype=Object.create(r.prototype),r.prototype.type="BigNumber",r.prototype.isBigNumber=!0,r.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},r.fromJSON=function(e){return new r(e.value)},t&&t("config",(function(e,t){e.precision!==t.precision&&r.config({precision:e.precision})})),r}),{isClass:!0}),cq=n(684);function lq(e){return"boolean"==typeof e||!!isFinite(e)&&e===Math.round(e)}var pq=Math.sign||function(e){return e>0?1:e<0?-1:0},dq=Math.log2||function(e){return Math.log(e)/Math.LN2},hq=Math.log10||function(e){return Math.log(e)/Math.LN10},fq=Math.log1p||function(e){return Math.log(e+1)},mq=Math.cbrt||function(e){if(0===e)return e;var t,n=e<0;return n&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,n?-t:t},gq=Math.expm1||function(e){return e>=2e-4||e<=-2e-4?Math.exp(e)-1:e+e*e/2+e*e*e/6};function yq(e,t,n){var r={2:"0b",8:"0o",16:"0x"}[t],a="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!lq(n))throw new Error("size must be an integer");if(e>2**(n-1)-1||e<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!lq(e))throw new Error("Value must be an integer");e<0&&(e+=2**n),a="i".concat(n)}var i="";return e<0&&(e=-e,i="-"),"".concat(i).concat(r).concat(e.toString(t)).concat(a)}function xq(e,t){if("function"==typeof t)return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n,r,a="auto";if(t&&(t.notation&&(a=t.notation),aU(t)?n=t:aU(t.precision)&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(a){case"fixed":return vq(e,n);case"exponential":return wq(e,n);case"engineering":return function(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=Nq(bq(e),t),r=n.exponent,a=n.coefficients,i=r%3==0?r:r<0?r-3-r%3:r-r%3;if(aU(t))for(;t>a.length||r-i+1>a.length;)a.push(0);else for(var s=Math.abs(r-i)-(a.length-1),o=0;o<s;o++)a.push(0);for(var u=Math.abs(r-i),c=1;u>0;)c++,u--;var l=a.slice(c).join(""),p=aU(t)&&l.length||l.match(/[1-9]/)?"."+l:"",d=a.slice(0,c).join("")+p+"e"+(r>=0?"+":"")+i.toString();return n.sign+d}(e,n);case"bin":return yq(e,2,r);case"oct":return yq(e,8,r);case"hex":return yq(e,16,r);case"auto":return function(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=n&&void 0!==n.lowerExp?n.lowerExp:-3,a=n&&void 0!==n.upperExp?n.upperExp:5,i=bq(e),s=t?Nq(i,t):i;if(s.exponent<r||s.exponent>=a)return wq(e,t);var o=s.coefficients,u=s.exponent;o.length<t&&(o=o.concat(Sq(t-o.length))),o=o.concat(Sq(u-o.length+1+(o.length<t?t-o.length:0)));var c=u>0?u:0;return c<(o=Sq(-u).concat(o)).length-1&&o.splice(c+1,0,"."),s.sign+o.join("")}(e,n,t&&t).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+a+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function bq(e){var t=String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],r=t[2],a=parseFloat(t[4]||"0"),i=r.indexOf(".");a+=-1!==i?i-1:r.length-1;var s=r.replace(".","").replace(/^0*/,(function(e){return a-=e.length,""})).replace(/0*$/,"").split("").map((function(e){return parseInt(e)}));return 0===s.length&&(s.push(0),a++),{sign:n,coefficients:s,exponent:a}}function vq(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=bq(e),r="number"==typeof t?Nq(n,n.exponent+1+t):n,a=r.coefficients,i=r.exponent+1,s=i+(t||0);return a.length<s&&(a=a.concat(Sq(s-a.length))),i<0&&(a=Sq(1-i).concat(a),i=1),i<a.length&&a.splice(i,0,0===i?"0.":"."),r.sign+a.join("")}function wq(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=bq(e),r=t?Nq(n,t):n,a=r.coefficients,i=r.exponent;a.length<t&&(a=a.concat(Sq(t-a.length)));var s=a.shift();return r.sign+s+(a.length>0?"."+a.join(""):"")+"e"+(i>=0?"+":"")+i}function Nq(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t&&r.splice(t,r.length-t)[0]>=5){var a=t-1;for(r[a]++;10===r[a];)r.pop(),0===a&&(r.unshift(0),n.exponent++,a++),r[--a]++}return n}function Sq(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}var kq=Number.EPSILON||2220446049250313e-31;function Iq(e,t,n){if(null==n)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var r=Math.abs(e-t);return r<kq||r<=Math.max(Math.abs(e),Math.abs(t))*n}return!1}var Eq=Math.acosh||function(e){return Math.log(Math.sqrt(e*e-1)+e)},Cq=Math.asinh||function(e){return Math.log(Math.sqrt(e*e+1)+e)},Tq=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Dq=Math.cosh||function(e){return(Math.exp(e)+Math.exp(-e))/2},Aq=Math.sinh||function(e){return(Math.exp(e)-Math.exp(-e))/2},Mq=Math.tanh||function(e){var t=Math.exp(2*e);return(t-1)/(t+1)},$q=iq("Complex",[],(()=>(cq.prototype.type="Complex",cq.prototype.isComplex=!0,cq.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},cq.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},cq.prototype.format=function(e){var t=this.im,n=this.re,r=xq(this.re,e),a=xq(this.im,e),i=aU(e)?e:e?e.precision:null;if(null!==i){var s=Math.pow(10,-i);Math.abs(n/t)<s&&(n=0),Math.abs(t/n)<s&&(t=0)}return 0===t?r:0===n?1===t?"i":-1===t?"-i":a+"i":t<0?-1===t?r+" - i":r+" - "+a.substring(1)+"i":1===t?r+" + i":r+" + "+a+"i"},cq.fromPolar=function(e){switch(arguments.length){case 1:var t=arguments[0];if("object"==typeof t)return cq(t);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var n=arguments[0],r=arguments[1];if(aU(n)){if(uU(r)&&r.hasBase("ANGLE")&&(r=r.toNumber("rad")),aU(r))return new cq({r:n,phi:r});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},cq.prototype.valueOf=cq.prototype.toString,cq.fromJSON=function(e){return new cq(e)},cq.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},cq)),{isClass:!0});function Oq(e){var t=0,n=1,r=Object.create(null),a=Object.create(null),i=0,s=function(e){var s=a[e];if(s&&(delete r[s],delete a[e],--t,n===s)){if(!t)return i=0,void(n=1);for(;!hasOwnProperty.call(r,++n););}};return e=Math.abs(e),{hit:function(o){var u=a[o],c=++i;if(r[c]=o,a[o]=c,!u){if(++t<=e)return;return o=r[n],s(o),o}if(delete r[u],n===u)for(;!hasOwnProperty.call(r,++n););},delete:s,clear:function(){t=i=0,n=1,r=Object.create(null),a=Object.create(null)}}}function Rq(e){var{hasher:t,limit:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n=null==n?Number.POSITIVE_INFINITY:n,t=null==t?JSON.stringify:t,function r(){"object"!=typeof r.cache&&(r.cache={values:new Map,lru:Oq(n||Number.POSITIVE_INFINITY)});for(var a=[],i=0;i<arguments.length;i++)a[i]=arguments[i];var s=t(a);if(r.cache.values.has(s))return r.cache.lru.hit(s),r.cache.values.get(s);var o=e.apply(e,a);return r.cache.values.set(s,o),r.cache.values.delete(r.cache.lru.hit(s)),o}}function _q(e){return Object.keys(e.signatures||{}).reduce((function(e,t){var n=(t.match(/,/g)||[]).length+1;return Math.max(e,n)}),-1)}var Fq=Rq((function(e){return new e(1).exp()}),{hasher:Pq}),zq=Rq((function(e){return new e(1).plus(new e(5).sqrt()).div(2)}),{hasher:Pq}),Bq=Rq((function(e){return e.acos(-1)}),{hasher:Pq}),Lq=Rq((function(e){return Bq(e).times(2)}),{hasher:Pq});function Pq(e){return e[0].precision}var Uq=Math.PI,qq=2*Math.PI,Wq=Math.E,Vq=iq("true",[],(()=>!0)),jq=iq("false",[],(()=>!1)),Gq=iq("null",[],(()=>null)),Hq=cW("Infinity",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(1/0):1/0})),Kq=cW("NaN",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(NaN):NaN})),Xq=cW("pi",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?Bq(n):Uq})),Zq=cW("tau",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?Lq(n):qq})),Yq=cW("e",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?Fq(n):Wq})),Jq=cW("phi",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?zq(n):1.618033988749895})),Qq=cW("LN2",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(2).ln():Math.LN2})),eW=cW("LN10",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(10).ln():Math.LN10})),tW=cW("LOG2E",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(1).div(new n(2).ln()):Math.LOG2E})),nW=cW("LOG10E",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(1).div(new n(10).ln()):Math.LOG10E})),rW=cW("SQRT1_2",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n("0.5").sqrt():Math.SQRT1_2})),aW=cW("SQRT2",["config","?BigNumber"],(e=>{var{config:t,BigNumber:n}=e;return"BigNumber"===t.number?new n(2).sqrt():Math.SQRT2})),iW=cW("i",["Complex"],(e=>{var{Complex:t}=e;return t.I})),sW=iq("PI",["pi"],(e=>{var{pi:t}=e;return t})),oW=iq("E",["e"],(e=>{var{e:t}=e;return t})),uW=iq("version",[],(()=>"10.1.1"));function cW(e,t,n){return iq(e,t,n,{recreateOnConfigChange:!0})}var lW=sV("speedOfLight","299792458","m s^-1"),pW=sV("gravitationConstant","6.67430e-11","m^3 kg^-1 s^-2"),dW=sV("planckConstant","6.62607015e-34","J s"),hW=sV("reducedPlanckConstant","1.0545718176461565e-34","J s"),fW=sV("magneticConstant","1.25663706212e-6","N A^-2"),mW=sV("electricConstant","8.8541878128e-12","F m^-1"),gW=sV("vacuumImpedance","376.730313667","ohm"),yW=sV("coulomb","8.987551792261171e9","N m^2 C^-2"),xW=sV("elementaryCharge","1.602176634e-19","C"),bW=sV("bohrMagneton","9.2740100783e-24","J T^-1"),vW=sV("conductanceQuantum","7.748091729863649e-5","S"),wW=sV("inverseConductanceQuantum","12906.403729652257","ohm"),NW=sV("magneticFluxQuantum","2.0678338484619295e-15","Wb"),SW=sV("nuclearMagneton","5.0507837461e-27","J T^-1"),kW=sV("klitzing","25812.807459304513","ohm"),IW=sV("bohrRadius","5.29177210903e-11","m"),EW=sV("classicalElectronRadius","2.8179403262e-15","m"),CW=sV("electronMass","9.1093837015e-31","kg"),TW=sV("fermiCoupling","1.1663787e-5","GeV^-2"),DW=oV("fineStructure",.0072973525693),AW=sV("hartreeEnergy","4.3597447222071e-18","J"),MW=sV("protonMass","1.67262192369e-27","kg"),$W=sV("deuteronMass","3.3435830926e-27","kg"),OW=sV("neutronMass","1.6749271613e-27","kg"),RW=sV("quantumOfCirculation","3.6369475516e-4","m^2 s^-1"),_W=sV("rydberg","10973731.568160","m^-1"),FW=sV("thomsonCrossSection","6.6524587321e-29","m^2"),zW=oV("weakMixingAngle",.2229),BW=oV("efimovFactor",22.7),LW=sV("atomicMass","1.66053906660e-27","kg"),PW=sV("avogadro","6.02214076e23","mol^-1"),UW=sV("boltzmann","1.380649e-23","J K^-1"),qW=sV("faraday","96485.33212331001","C mol^-1"),WW=sV("firstRadiation","3.7417718521927573e-16","W m^2"),VW=sV("loschmidt","2.686780111798444e25","m^-3"),jW=sV("gasConstant","8.31446261815324","J K^-1 mol^-1"),GW=sV("molarPlanckConstant","3.990312712893431e-10","J s mol^-1"),HW=sV("molarVolume","0.022413969545014137","m^3 mol^-1"),KW=oV("sackurTetrode",-1.16487052358),XW=sV("secondRadiation","0.014387768775039337","m K"),ZW=sV("stefanBoltzmann","5.67037441918443e-8","W m^-2 K^-4"),YW=sV("wienDisplacement","2.897771955e-3","m K"),JW=sV("molarMass","0.99999999965e-3","kg mol^-1"),QW=sV("molarMassC12","11.9999999958e-3","kg mol^-1"),eV=sV("gravity","9.80665","m s^-2"),tV=sV("planckLength","1.616255e-35","m"),nV=sV("planckMass","2.176435e-8","kg"),rV=sV("planckTime","5.391245e-44","s"),aV=sV("planckCharge","1.87554603778e-18","C"),iV=sV("planckTemperature","1.416785e+32","K");function sV(e,t,n){return iq(e,["config","Unit","BigNumber"],(e=>{var{config:r,Unit:a,BigNumber:i}=e,s=new a("BigNumber"===r.number?new i(t):parseFloat(t),n);return s.fixPrefix=!0,s}))}function oV(e,t){return iq(e,["config","BigNumber"],(e=>{var{config:n,BigNumber:r}=e;return"BigNumber"===n.number?new r(t):t}))}var uV=n(201),cV=iq("Fraction",[],(()=>(uV.prototype.type="Fraction",uV.prototype.isFraction=!0,uV.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},uV.fromJSON=function(e){return new uV(e)},uV)),{isClass:!0}),lV=iq("Matrix",[],(()=>{function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(e,t,n){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(e,t,n){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(e,t){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e}),{isClass:!0}),pV=iq("Range",[],(()=>{function e(t,n,r){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");var a=null!=t,i=null!=n,s=null!=r;if(a)if(iU(t))t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter start must be a number");if(i)if(iU(n))n=n.toNumber();else if("number"!=typeof n)throw new TypeError("Parameter end must be a number");if(s)if(iU(r))r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=a?parseFloat(t):0,this.end=i?parseFloat(n):0,this.step=s?parseFloat(r):1}return e.prototype.type="Range",e.prototype.isRange=!0,e.parse=function(t){if("string"!=typeof t)return null;var n=t.split(":").map((function(e){return parseFloat(e)})),r=n.some((function(e){return isNaN(e)}));if(r)return null;switch(n.length){case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[2],n[1]);default:return null}},e.prototype.clone=function(){return new e(this.start,this.end,this.step)},e.prototype.size=function(){var e=0,t=this.start,n=this.step,r=this.end-t;return pq(n)===pq(r)?e=Math.ceil(r/n):0===r&&(e=0),isNaN(e)&&(e=0),[e]},e.prototype.min=function(){var e=this.size()[0];return e>0?this.step>0?this.start:this.start+(e-1)*this.step:void 0},e.prototype.max=function(){var e=this.size()[0];return e>0?this.step>0?this.start+(e-1)*this.step:this.start:void 0},e.prototype.forEach=function(e){var t=this.start,n=this.step,r=this.end,a=0;if(n>0)for(;t<r;)e(t,[a],this),t+=n,a++;else if(n<0)for(;t>r;)e(t,[a],this),t+=n,a++},e.prototype.map=function(e){var t=[];return this.forEach((function(n,r,a){t[r[0]]=e(n,r,a)})),t},e.prototype.toArray=function(){var e=[];return this.forEach((function(t,n){e[n[0]]=t})),e},e.prototype.valueOf=function(){return this.toArray()},e.prototype.format=function(e){var t=xq(this.start,e);return 1!==this.step&&(t+=":"+xq(this.step,e)),t+":"+xq(this.end,e)},e.prototype.toString=function(){return this.format()},e.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},e.fromJSON=function(t){return new e(t.start,t.end,t.step)},e}),{isClass:!0}),dV=iq("ResultSet",[],(()=>{function e(t){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");this.entries=t||[]}return e.prototype.type="ResultSet",e.prototype.isResultSet=!0,e.prototype.valueOf=function(){return this.entries},e.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},e.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},e.fromJSON=function(t){return new e(t.entries)},e}),{isClass:!0});function hV(e,t,n){var r=new(0,e.constructor)(2),a="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!lq(n))throw new Error("size must be an integer");if(e.greaterThan(r.pow(n-1).sub(1))||e.lessThan(r.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!e.isInteger())throw new Error("Value must be an integer");e.lessThan(0)&&(e=e.add(r.pow(n))),a="i".concat(n)}switch(t){case 2:return"".concat(e.toBinary()).concat(a);case 8:return"".concat(e.toOctal()).concat(a);case 16:return"".concat(e.toHexadecimal()).concat(a);default:throw new Error("Base ".concat(t," not supported "))}}function fV(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()}function mV(e,t){var n=e.length-t.length,r=e.length;return e.substring(n,r)===t}function gV(e,t){return"number"==typeof e?xq(e,t):iU(e)?function(e,t){if("function"==typeof t)return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n,r,a="auto";if(void 0!==t&&(t.notation&&(a=t.notation),"number"==typeof t?n=t:t.precision&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(a){case"fixed":return function(e,t){return e.toFixed(t)}(e,n);case"exponential":return fV(e,n);case"engineering":return function(e,t){var n=e.e,r=n%3==0?n:n<0?n-3-n%3:n-n%3,a=e.mul(Math.pow(10,-r)),i=a.toPrecision(t);return-1!==i.indexOf("e")&&(i=a.toString()),i+"e"+(n>=0?"+":"")+r.toString()}(e,n);case"bin":return hV(e,2,r);case"oct":return hV(e,8,r);case"hex":return hV(e,16,r);case"auto":var i=t&&void 0!==t.lowerExp?t.lowerExp:-3,s=t&&void 0!==t.upperExp?t.upperExp:5;if(e.isZero())return"0";var o=e.toSignificantDigits(n),u=o.e;return(u>=i&&u<s?o.toFixed():fV(e,n)).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+a+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}(e,t):function(e){return e&&"object"==typeof e&&"number"==typeof e.s&&"number"==typeof e.n&&"number"==typeof e.d||!1}(e)?t&&"decimal"===t.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?bV(e,t):cU(e)?'"'+e+'"':"function"==typeof e?e.syntax?String(e.syntax):"function":e&&"object"==typeof e?"function"==typeof e.format?e.format(t):e&&e.toString(t)!=={}.toString()?e.toString(t):"{"+Object.keys(e).map((n=>'"'+n+'": '+gV(e[n],t))).join(", ")+"}":String(e)}function yV(e){for(var t=String(e),n="",r=0;r<t.length;){var a=t.charAt(r);"\\"===a?(n+=a,r++,""!==(a=t.charAt(r))&&-1!=='"\\/bfnrtu'.indexOf(a)||(n+="\\"),n+=a):n+='"'===a?'\\"':a,r++}return'"'+n+'"'}function xV(e){var t=String(e);return t.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function bV(e,t){if(Array.isArray(e)){for(var n="[",r=e.length,a=0;a<r;a++)0!==a&&(n+=", "),n+=bV(e[a],t);return n+"]"}return gV(e,t)}function vV(e,t){if(!cU(e))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+qU(e)+", index: 0)");if(!cU(t))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+qU(t)+", index: 1)");return e===t?0:e>t?1:-1}function wV(e,t,n){if(!(this instanceof wV))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}function NV(e,t,n){if(!(this instanceof NV))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}function SV(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function kV(e,t,n){var r,a=e.length;if(a!==t[n])throw new wV(a,t[n]);if(n<t.length-1){var i=n+1;for(r=0;r<a;r++){var s=e[r];if(!Array.isArray(s))throw new wV(t.length-1,t.length,"<");kV(e[r],t,i)}}else for(r=0;r<a;r++)if(Array.isArray(e[r]))throw new wV(t.length+1,t.length,">")}function IV(e,t){if(0===t.length){if(Array.isArray(e))throw new wV(e.length,0)}else kV(e,t,0)}function EV(e,t){if(!aU(e)||!lq(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||"number"==typeof t&&e>=t)throw new NV(e,t)}function CV(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach((function(e){if(!aU(e)||!lq(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+gV(t)+")")})),TV(e,t,0,void 0!==n?n:0),e}function TV(e,t,n,r){var a,i,s=e.length,o=t[n],u=Math.min(s,o);if(e.length=o,n<t.length-1){var c=n+1;for(a=0;a<u;a++)i=e[a],Array.isArray(i)||(i=[i],e[a]=i),TV(i,t,c,r);for(a=u;a<o;a++)i=[],e[a]=i,TV(i,t,c,r)}else{for(a=0;a<u;a++)for(;Array.isArray(e[a]);)e[a]=e[a][0];for(a=u;a<o;a++)e[a]=r}}function DV(e,t){var n=FV(e),r=n.length;if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new wV(0,r,"!=");var a=MV(t=AV(t,r));if(r!==a)throw new wV(a,r,"!=");try{return function(e,t){for(var n,r=e,a=t.length-1;a>0;a--){var i=t[a];n=[];for(var s=r.length/i,o=0;o<s;o++)n.push(r.slice(o*i,(o+1)*i));r=n}return r}(n,t)}catch(e){if(e instanceof wV)throw new wV(a,r,"!=");throw e}}function AV(e,t){var n=MV(e),r=e.slice(),a=e.indexOf(-1);if(e.indexOf(-1,a+1)>=0)throw new Error("More than one wildcard in sizes");if(a>=0){if(t%n!=0)throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-n);r[a]=-t/n}return r}function MV(e){return e.reduce(((e,t)=>e*t),1)}function $V(e,t){for(var n=t||SV(e);Array.isArray(e)&&1===e.length;)e=e[0],n.shift();for(var r=n.length;1===n[r-1];)r--;return r<n.length&&(e=OV(e,r,0),n.length=r),e}function OV(e,t,n){var r,a;if(n<t){var i=n+1;for(r=0,a=e.length;r<a;r++)e[r]=OV(e[r],t,i)}else for(;Array.isArray(e);)e=e[0];return e}function RV(e,t,n,r){var a=r||SV(e);if(n)for(var i=0;i<n;i++)e=[e],a.unshift(1);for(e=_V(e,t,0);a.length<t;)a.push(1);return e}function _V(e,t,n){var r,a;if(Array.isArray(e)){var i=n+1;for(r=0,a=e.length;r<a;r++)e[r]=_V(e[r],t,i)}else for(var s=n;s<t;s++)e=[e];return e}function FV(e){if(!Array.isArray(e))return e;var t=[];return e.forEach((function e(n){Array.isArray(n)?n.forEach(e):t.push(n)})),t}function zV(e,t){return Array.prototype.map.call(e,t)}function BV(e,t){Array.prototype.forEach.call(e,t)}function LV(e,t){if(1!==SV(e).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(e,t)}function PV(e,t){if(1!==SV(e).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(e,(e=>t.test(e)))}function UV(e,t){return Array.prototype.join.call(e,t)}function qV(e){if(!Array.isArray(e))throw new TypeError("Array input expected");if(0===e.length)return e;var t=[],n=0;t[0]={value:e[0],identifier:0};for(var r=1;r<e.length;r++)e[r]===e[r-1]?n++:n=0,t.push({value:e[r],identifier:n});return t}function WV(e){if(!Array.isArray(e))throw new TypeError("Array input expected");if(0===e.length)return e;for(var t=[],n=0;n<e.length;n++)t.push(e[n].value);return t}function VV(e,t){for(var n,r=0,a=0;a<e.length;a++){var i=e[a],s=Array.isArray(i);if(0===a&&s&&(r=i.length),s&&i.length!==r)return;var o=s?VV(i,t):t(i);if(void 0===n)n=o;else if(n!==o)return"mixed"}return n}function jV(e,t){return-1!==e.indexOf(t)}wV.prototype=new RangeError,wV.prototype.constructor=RangeError,wV.prototype.name="DimensionError",wV.prototype.isDimensionError=!0,NV.prototype=new RangeError,NV.prototype.constructor=RangeError,NV.prototype.name="IndexError",NV.prototype.isIndexError=!0;var GV=iq("DenseMatrix",["Matrix"],(e=>{var{Matrix:t}=e;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!cU(t))throw new Error("Invalid datatype: "+t);if(pU(e))"DenseMatrix"===e.type?(this._data=WU(e._data),this._size=WU(e._size),this._datatype=t||e._datatype):(this._data=e.toArray(),this._size=e.size(),this._datatype=t||e._datatype);else if(e&&lU(e.data)&&lU(e.size))this._data=e.data,this._size=e.size,IV(this._data,this._size),this._datatype=t||e.datatype;else if(lU(e))this._data=c(e),this._size=SV(this._data),IV(this._data,this._size),this._datatype=t;else{if(e)throw new TypeError("Unsupported type of data ("+qU(e)+")");this._data=[],this._size=[0],this._datatype=t}}function r(e,t){if(!gU(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var r=t.size();if(r.length!==e._size.length)throw new wV(r.length,e._size.length);for(var i=t.min(),s=t.max(),o=0,u=e._size.length;o<u;o++)EV(i[o],e._size[o]),EV(s[o],e._size[o]);return new n(a(e._data,t,r.length,0),e._datatype)}function a(e,t,n,r){var i=r===n-1,s=t.dimension(r);return i?s.map((function(t){return EV(t,e.length),e[t]})).valueOf():s.map((function(i){return EV(i,e.length),a(e[i],t,n,r+1)})).valueOf()}function i(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var a,i=t.size(),o=t.isScalar();if(pU(n)?(a=n.size(),n=n.valueOf()):a=SV(n),o){if(0!==a.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(i.length<e._size.length)throw new wV(i.length,e._size.length,"<");if(a.length<i.length){for(var c=0,l=0;1===i[c]&&1===a[c];)c++;for(;1===i[c];)l++,c++;n=RV(n,i.length,l,a)}if(!HU(i,a))throw new wV(i,a,">");var p=t.max().map((function(e){return e+1}));u(e,p,r);var d=i.length;s(e._data,t,n,d,0)}return e}function s(e,t,n,r,a){var i=a===r-1,o=t.dimension(a);i?o.forEach((function(t,r){EV(t),e[t]=n[r[0]]})):o.forEach((function(i,o){EV(i),s(e[i],t,n[o[0]],r,a+1)}))}function o(e,t,n){if(0===t.length){for(var r=e._data;lU(r);)r=r[0];return r}return e._size=t.slice(0),e._data=CV(e._data,e._size,n),e}function u(e,t,n){for(var r=e._size.slice(0),a=!1;r.length<t.length;)r.push(0),a=!0;for(var i=0,s=t.length;i<s;i++)t[i]>r[i]&&(r[i]=t[i],a=!0);a&&o(e,r,n)}function c(e){for(var t=0,n=e.length;t<n;t++){var r=e[t];lU(r)?e[t]=c(r):r&&!0===r.isMatrix&&(e[t]=c(r.valueOf()))}return e}return n.prototype=new t,n.prototype.createDenseMatrix=function(e,t){return new n(e,t)},n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return VV(this._data,qU)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(e,t){return new n(e,t)},n.prototype.subset=function(e,t,n){switch(arguments.length){case 1:return r(this,e);case 2:case 3:return i(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(e){if(!lU(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new wV(e.length,this._size.length);for(var t=0;t<e.length;t++)EV(e[t],this._size[t]);for(var n=this._data,r=0,a=e.length;r<a;r++){var i=e[r];EV(i,n.length),n=n[i]}return n},n.prototype.set=function(e,t,n){if(!lU(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new wV(e.length,this._size.length,"<");var r,a,i,s=e.map((function(e){return e+1}));u(this,s,n);var o=this._data;for(r=0,a=e.length-1;r<a;r++)EV(i=e[r],o.length),o=o[i];return EV(i=e[e.length-1],o.length),o[i]=t,this},n.prototype.resize=function(e,t,n){if(!dU(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((e=>Array.isArray(e)&&1===e.length?e[0]:e));return o(n?this.clone():this,r,t)},n.prototype.reshape=function(e,t){var n=t?this.clone():this;n._data=DV(n._data,e);var r=n._size.reduce(((e,t)=>e*t));return n._size=AV(e,r),n},n.prototype.clone=function(){return new n({data:WU(this._data),size:WU(this._size),datatype:this._datatype})},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(e){var t=this,r=function n(r,a){return lU(r)?r.map((function(e,t){return n(e,a.concat(t))})):e(r,a,t)}(this._data,[]);return new n(r,void 0!==this._datatype?VV(r,qU):void 0)},n.prototype.forEach=function(e){var t=this;!function n(r,a){lU(r)?r.forEach((function(e,t){n(e,a.concat(t))})):e(r,a,t)}(this._data,[])},n.prototype[Symbol.iterator]=function*(){yield*function*e(t,n){if(lU(t))for(var r=0;r<t.length;r++)yield*e(t[r],n.concat(r));else yield{value:t,index:n}}(this._data,[])},n.prototype.rows=function(){var e=[];if(2!==this.size().length)throw new TypeError("Rows can only be returned for a 2D matrix.");var t=this._data;for(var r of t)e.push(new n([r],this._datatype));return e},n.prototype.columns=function(){var e=this,t=[],r=this.size();if(2!==r.length)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var a=this._data,i=function(r){var i=a.map((e=>[e[r]]));t.push(new n(i,e._datatype))},s=0;s<r[1];s++)i(s);return t},n.prototype.toArray=function(){return WU(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(e){return gV(this._data,e)},n.prototype.toString=function(){return gV(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(e){if(e){if(iU(e)&&(e=e.toNumber()),!aU(e)||!lq(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=e>0?e:0,r=e<0?-e:0,a=this._size[0],i=this._size[1],s=Math.min(a-r,i-t),o=[],u=0;u<s;u++)o[u]=this._data[u+r][u+t];return new n({data:o,size:[s],datatype:this._datatype})},n.diagonal=function(e,t,r,a){if(!lU(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if(iU(e)&&(e=e.toNumber()),!aU(e)||!lq(e)||e<1)throw new Error("Size values must be positive integers");return e})),r){if(iU(r)&&(r=r.toNumber()),!aU(r)||!lq(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var i,s=r>0?r:0,o=r<0?-r:0,u=e[0],c=e[1],l=Math.min(u-o,c-s);if(lU(t)){if(t.length!==l)throw new Error("Invalid value array length");i=function(e){return t[e]}}else if(pU(t)){var p=t.size();if(1!==p.length||p[0]!==l)throw new Error("Invalid matrix length");i=function(e){return t.get([e])}}else i=function(){return t};a||(a=iU(i(0))?i(0).mul(0):0);var d=[];if(e.length>0){d=CV(d,e,a);for(var h=0;h<l;h++)d[h+o][h+s]=i(h)}return new n({data:d,size:[u,c]})},n.fromJSON=function(e){return new n(e)},n.prototype.swapRows=function(e,t){if(!(aU(e)&&lq(e)&&aU(t)&&lq(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return EV(e,this._size[0]),EV(t,this._size[0]),n._swapRows(e,t,this._data),this},n._swapRows=function(e,t,n){var r=n[e];n[e]=n[t],n[t]=r},n}),{isClass:!0}),HV=iq("replacer",[],(()=>function(e,t){return"number"!=typeof t||isFinite(t)&&!isNaN(t)?t:{mathjs:"number",value:String(t)}})),KV=n(287);function XV(e,t){if(QV(e)&&YV(e,t))return e[t];if("function"==typeof e[t]&&JV(e,t))throw new Error('Cannot access method "'+t+'" as a property');throw new Error('No access to property "'+t+'"')}function ZV(e,t,n){if(QV(e)&&YV(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')}function YV(e,t){return!(!e||"object"!=typeof e||!YU(ej,t)&&(t in Object.prototype||t in Function.prototype))}function JV(e,t){return!(null==e||"function"!=typeof e[t]||YU(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e)||!YU(tj,t)&&(t in Object.prototype||t in Function.prototype))}function QV(e){return"object"==typeof e&&e&&e.constructor===Object}var ej={length:!0,name:!0},tj={toString:!0,valueOf:!0,toLocaleString:!0};class nj{constructor(e){this.wrappedObject=e}keys(){return Object.keys(this.wrappedObject)}get(e){return XV(this.wrappedObject,e)}set(e,t){return ZV(this.wrappedObject,e,t),this}has(e){return e in this.wrappedObject}}function rj(){return new Map}function aj(e){if(!e)return rj();if(ij(e))return e;if(SU(e))return new nj(e);throw new Error("createMap can create maps from objects or Maps")}function ij(e){return!!e&&(e instanceof Map||e instanceof nj||"function"==typeof e.set&&"function"==typeof e.get&&"function"==typeof e.keys&&"function"==typeof e.has)}function sj(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a of n)if(a)if(ij(a))for(var i of a.keys())e.set(i,a.get(i));else if(SU(a))for(var s of Object.keys(a))e.set(s,a[s]);return e}var oj=function(){return oj=KV.create,KV},uj=iq("typed",["?BigNumber","?Complex","?DenseMatrix","?Fraction"],(function(e){var{BigNumber:t,Complex:n,DenseMatrix:r,Fraction:a}=e,i=oj();return i.types=[{name:"number",test:aU},{name:"Complex",test:sU},{name:"BigNumber",test:iU},{name:"Fraction",test:oU},{name:"Unit",test:uU},{name:"string",test:cU},{name:"Chain",test:UU},{name:"Array",test:lU},{name:"Matrix",test:pU},{name:"DenseMatrix",test:hU},{name:"SparseMatrix",test:fU},{name:"Range",test:mU},{name:"Index",test:gU},{name:"boolean",test:yU},{name:"ResultSet",test:xU},{name:"Help",test:bU},{name:"function",test:vU},{name:"Date",test:wU},{name:"RegExp",test:NU},{name:"null",test:kU},{name:"undefined",test:IU},{name:"AccessorNode",test:EU},{name:"ArrayNode",test:CU},{name:"AssignmentNode",test:TU},{name:"BlockNode",test:DU},{name:"ConditionalNode",test:AU},{name:"ConstantNode",test:MU},{name:"FunctionNode",test:OU},{name:"FunctionAssignmentNode",test:$U},{name:"IndexNode",test:RU},{name:"Node",test:_U},{name:"ObjectNode",test:FU},{name:"OperatorNode",test:zU},{name:"ParenthesisNode",test:BU},{name:"RangeNode",test:LU},{name:"SymbolNode",test:PU},{name:"Map",test:ij},{name:"Object",test:SU}],i.conversions=[{from:"number",to:"BigNumber",convert:function(e){if(t||cj(e),e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+e+"). Use function bignumber(x) to convert to BigNumber.");return new t(e)}},{from:"number",to:"Complex",convert:function(e){return n||lj(e),new n(e,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(e){return n||lj(e),new n(e.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(e){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(e){return n||lj(e),new n(e.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(e){a||pj(e);var t=new a(e);if(t.valueOf()!==e)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+e+"). Use function fraction(x) to convert to Fraction.");return t}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"string",to:"BigNumber",convert:function(e){t||cj(e);try{return new t(e)}catch(t){throw new Error('Cannot convert "'+e+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(e){a||pj(e);try{return new a(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(e){n||lj(e);try{return new n(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Complex')}}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(e){return t||cj(e),new t(+e)}},{from:"boolean",to:"Fraction",convert:function(e){return a||pj(e),new a(+e)}},{from:"boolean",to:"string",convert:function(e){return String(e)}},{from:"Array",to:"Matrix",convert:function(e){return r||function(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}(),new r(e)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],i}));function cj(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function lj(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function pj(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}function dj(e){for(var t=0;t<e.length;t++)if(dU(e[t]))return!0;return!1}function hj(e,t){pU(e)&&(e=e.valueOf());for(var n=0,r=e.length;n<r;n++){var a=e[n];Array.isArray(a)?hj(a,t):t(a)}}function fj(e,t,n){return e&&"function"==typeof e.map?e.map((function(e){return fj(e,t,n)})):t(e)}function mj(e,t,n){var r=Array.isArray(e)?SV(e):e.size();if(t<0||t>=r.length)throw new NV(t,r.length);return pU(e)?e.create(gj(e.valueOf(),t,n)):gj(e,t,n)}function gj(e,t,n){var r,a,i,s;if(t<=0){if(Array.isArray(e[0])){for(s=function(e){var t,n,r=e.length,a=e[0].length,i=[];for(n=0;n<a;n++){var s=[];for(t=0;t<r;t++)s.push(e[t][n]);i.push(s)}return i}(e),a=[],r=0;r<s.length;r++)a[r]=gj(s[r],t-1,n);return a}for(i=e[0],r=1;r<e.length;r++)i=n(i,e[r]);return i}for(a=[],r=0;r<e.length;r++)a[r]=gj(e[r],t-1,n);return a}function yj(e,t,n,r,a,i,s,o,u,c,l){var p,d,h,f,m=e._values,g=e._index,y=e._ptr;if(r)for(d=y[t],h=y[t+1],p=d;p<h;p++)n[f=g[p]]!==i?(n[f]=i,s.push(f),c?(r[f]=u?o(m[p],l):o(l,m[p]),a[f]=i):r[f]=m[p]):(r[f]=u?o(m[p],r[f]):o(r[f],m[p]),a[f]=i);else for(d=y[t],h=y[t+1],p=d;p<h;p++)n[f=g[p]]!==i?(n[f]=i,s.push(f)):a[f]=i}var xj="number",bj="number, number";function vj(e){return Math.abs(e)}function wj(e,t){return e+t}function Nj(e,t){return e*t}function Sj(e){return-e}function kj(e){return e}function Ij(e){return mq(e)}function Ej(e){return Math.ceil(e)}function Cj(e){return e*e*e}function Tj(e){return Math.exp(e)}function Dj(e){return gq(e)}function Aj(e,t){if(!lq(e)||!lq(t))throw new Error("Parameters in function gcd must be integer numbers");for(var n;0!==t;)n=e%t,e=t,t=n;return e<0?-e:e}function Mj(e,t){if(!lq(e)||!lq(t))throw new Error("Parameters in function lcm must be integer numbers");if(0===e||0===t)return 0;for(var n,r=e*t;0!==t;)t=e%(n=t),e=n;return Math.abs(r/e)}function $j(e){return Math.log(e)}function Oj(e){return hq(e)}function Rj(e){return dq(e)}function _j(e,t){if(t>0)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")}function Fj(e,t){var n=t<0;if(n&&(t=-t),0===t)throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");if(0===e)return n?1/0:0;if(!isFinite(e))return n?0:e;var r=Math.pow(Math.abs(e),1/t);return r=e<0?-r:r,n?1/r:r}function zj(e){return pq(e)}function Bj(e){return e*e}function Lj(e,t){var n,r,a,i=0,s=1,o=1,u=0;if(!lq(e)||!lq(t))throw new Error("Parameters in function xgcd must be integer numbers");for(;t;)a=e-(r=Math.floor(e/t))*t,n=i,i=s-r*i,s=n,n=o,o=u-r*o,u=n,e=t,t=a;return e<0?[-e,-s,-u]:[e,e?s:0,u]}function Pj(e,t){return e*e<1&&t===1/0||e*e>1&&t===-1/0?0:Math.pow(e,t)}function Uj(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return parseFloat(vq(e,t))}vj.signature=xj,wj.signature=bj,Nj.signature=bj,Sj.signature=xj,kj.signature=xj,Ij.signature=xj,Ej.signature=xj,Cj.signature=xj,Tj.signature=xj,Dj.signature=xj,Aj.signature=bj,Mj.signature=bj,$j.signature=xj,Oj.signature=xj,Rj.signature=xj,_j.signature=bj,Fj.signature=bj,zj.signature=xj,Bj.signature=xj,Lj.signature=bj,Pj.signature=bj,Uj.signature=bj;var qj="unaryPlus",Wj=iq(qj,["typed","config","BigNumber"],(e=>{var{typed:t,config:n,BigNumber:r}=e;return t(qj,{number:kj,Complex:function(e){return e},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return fj(e,this,!0)},"boolean | string":function(e){return"BigNumber"===n.number?new r(+e):+e}})})),Vj=iq("abs",["typed"],(e=>{var{typed:t}=e;return t("abs",{number:vj,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return fj(e,this,!0)},Unit:function(e){return e.abs()}})})),jj="acos",Gj=iq(jj,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(jj,{number:function(e){return e>=-1&&e<=1||n.predictable?Math.acos(e):new r(e,0).acos()},Complex:function(e){return e.acos()},BigNumber:function(e){return e.acos()},"Array | Matrix":function(e){return fj(e,this)}})})),Hj="number";function Kj(e){return Eq(e)}function Xj(e){return Math.atan(1/e)}function Zj(e){return isFinite(e)?(Math.log((e+1)/e)+Math.log(e/(e-1)))/2:0}function Yj(e){return Math.asin(1/e)}function Jj(e){var t=1/e;return Math.log(t+Math.sqrt(t*t+1))}function Qj(e){return Math.acos(1/e)}function eG(e){var t=1/e,n=Math.sqrt(t*t-1);return Math.log(n+t)}function tG(e){return Cq(e)}function nG(e){return Tq(e)}function rG(e){return 1/Math.tan(e)}function aG(e){var t=Math.exp(2*e);return(t+1)/(t-1)}function iG(e){return 1/Math.sin(e)}function sG(e){return 0===e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*pq(e)}function oG(e){return 1/Math.cos(e)}function uG(e){return 2/(Math.exp(e)+Math.exp(-e))}function cG(e){return Aq(e)}Kj.signature=Hj,Xj.signature=Hj,Zj.signature=Hj,Yj.signature=Hj,Jj.signature=Hj,Qj.signature=Hj,eG.signature=Hj,tG.signature=Hj,nG.signature=Hj,rG.signature=Hj,aG.signature=Hj,iG.signature=Hj,sG.signature=Hj,oG.signature=Hj,uG.signature=Hj,cG.signature=Hj;var lG="acot",pG=iq(lG,["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t(lG,{number:Xj,Complex:function(e){return e.acot()},BigNumber:function(e){return new n(1).div(e).atan()},"Array | Matrix":function(e){return fj(e,this)}})})),dG="acsc",hG=iq(dG,["typed","config","Complex","BigNumber"],(e=>{var{typed:t,config:n,Complex:r,BigNumber:a}=e;return t(dG,{number:function(e){return e<=-1||e>=1||n.predictable?Yj(e):new r(e,0).acsc()},Complex:function(e){return e.acsc()},BigNumber:function(e){return new a(1).div(e).asin()},"Array | Matrix":function(e){return fj(e,this)}})})),fG="addScalar",mG=iq(fG,["typed"],(e=>{var{typed:t}=e;return t(fG,{"number, number":wj,"Complex, Complex":function(e,t){return e.add(t)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null===e.value||void 0===e.value)throw new Error("Parameter x contains a unit with undefined value");if(null===t.value||void 0===t.value)throw new Error("Parameter y contains a unit with undefined value");if(!e.equalBase(t))throw new Error("Units do not match");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n}})})),gG=iq("arg",["typed"],(e=>{var{typed:t}=e;return t("arg",{number:function(e){return Math.atan2(0,e)},BigNumber:function(e){return e.constructor.atan2(0,e)},Complex:function(e){return e.arg()},"Array | Matrix":function(e){return fj(e,this)}})})),yG="asech",xG=iq(yG,["typed","config","Complex","BigNumber"],(e=>{var{typed:t,config:n,Complex:r,BigNumber:a}=e;return t(yG,{number:function(e){if(e<=1&&e>=-1||n.predictable){var t=1/e;if(t>0||n.predictable)return eG(e);var a=Math.sqrt(t*t-1);return new r(Math.log(a-t),Math.PI)}return new r(e,0).asech()},Complex:function(e){return e.asech()},BigNumber:function(e){return new a(1).div(e).acosh()},"Array | Matrix":function(e){return fj(e,this)}})})),bG=iq("asinh",["typed"],(e=>{var{typed:t}=e;return t("asinh",{number:tG,Complex:function(e){return e.asinh()},BigNumber:function(e){return e.asinh()},"Array | Matrix":function(e){return fj(e,this,!0)}})})),vG=iq("atan",["typed"],(e=>{var{typed:t}=e;return t("atan",{number:function(e){return Math.atan(e)},Complex:function(e){return e.atan()},BigNumber:function(e){return e.atan()},"Array | Matrix":function(e){return fj(e,this,!0)}})})),wG="atanh",NG=iq(wG,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(wG,{number:function(e){return e<=1&&e>=-1||n.predictable?nG(e):new r(e,0).atanh()},Complex:function(e){return e.atanh()},BigNumber:function(e){return e.atanh()},"Array | Matrix":function(e){return fj(e,this,!0)}})})),SG=iq("bignumber",["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t("bignumber",{"":function(){return new n(0)},number:function(e){return new n(e+"")},string:function(e){var t=e.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);if(t){var r=t[2],a=n(t[1]),i=new n(2).pow(Number(r));if(a.gt(i.sub(1)))throw new SyntaxError('String "'.concat(e,'" is out of range'));var s=new n(2).pow(Number(r)-1);return a.gte(s)?a.sub(i):a}return new n(e)},BigNumber:function(e){return e},Fraction:function(e){return new n(e.n).div(e.d).times(e.s)},null:function(e){return new n(0)},"Array | Matrix":function(e){return fj(e,this)}})}));function kG(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()===t.isNegative()?e:new n(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new n(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new n(0):e}return CG(e,t,(function(e,t){return e&t}))}function IG(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,n=t.precision;t.config({precision:1e9});var r=e.plus(new t(1));return r.s=-r.s||null,t.config({precision:n}),r}function EG(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);var r=new n(-1);return e.isZero()||t.eq(r)||e.eq(t)?t:t.isZero()||e.eq(r)?e:e.isFinite()&&t.isFinite()?CG(e,t,(function(e,t){return e|t})):!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?r:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e}function CG(e,t,n){var r,a,i,s,o,u=e.constructor,c=+(e.s<0),l=+(t.s<0);if(c){r=TG(IG(e));for(var p=0;p<r.length;++p)r[p]^=1}else r=TG(e);if(l){a=TG(IG(t));for(var d=0;d<a.length;++d)a[d]^=1}else a=TG(t);r.length<=a.length?(i=r,s=a,o=c):(i=a,s=r,o=l);var h=i.length,f=s.length,m=1^n(c,l),g=new u(1^m),y=new u(1),x=new u(2),b=u.precision;for(u.config({precision:1e9});h>0;)n(i[--h],s[--f])===m&&(g=g.plus(y)),y=y.times(x);for(;f>0;)n(o,s[--f])===m&&(g=g.plus(y)),y=y.times(x);return u.config({precision:b}),0===m&&(g.s=-g.s),g}function TG(e){for(var t=e.d,n=t[0]+"",r=1;r<t.length;++r){for(var a=t[r]+"",i=7-a.length;i--;)a="0"+a;n+=a}for(var s=n.length;"0"===n.charAt(s);)s--;var o=e.e,u=n.slice(0,s+1||1),c=u.length;if(o>0)if(++o>c)for(o-=c;o--;)u+="0";else o<c&&(u=u.slice(0,o)+"."+u.slice(o));for(var l=[0],p=0;p<u.length;){for(var d=l.length;d--;)l[d]*=10;l[0]+=parseInt(u.charAt(p++));for(var h=0;h<l.length;++h)l[h]>1&&(null!==l[h+1]&&void 0!==l[h+1]||(l[h+1]=0),l[h+1]+=l[h]>>1,l[h]&=1)}return l.reverse()}function DG(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);if(e.isZero())return t;if(t.isZero())return e;if(e.eq(t))return new n(0);var r=new n(-1);return e.eq(r)?IG(t):t.eq(r)?IG(e):e.isFinite()&&t.isFinite()?CG(e,t,(function(e,t){return e^t})):e.isFinite()||t.isFinite()?new n(e.isNegative()===t.isNegative()?1/0:-1/0):r}function AG(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var n=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new n(NaN):e.isZero()||t.isZero()?e:e.isFinite()||t.isFinite()?t.lt(55)?e.times(Math.pow(2,t.toNumber())+""):e.times(new n(2).pow(t)):new n(NaN)}function MG(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var n=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new n(NaN):e.isZero()||t.isZero()?e:t.isFinite()?t.lt(55)?e.div(Math.pow(2,t.toNumber())+"").floor():e.div(new n(2).pow(t)).floor():e.isNegative()?new n(-1):e.isFinite()?new n(0):new n(NaN)}var $G="number, number";function OG(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function bitAnd");return e&t}function RG(e){if(!lq(e))throw new Error("Integer expected in function bitNot");return~e}function _G(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function bitOr");return e|t}function FG(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function bitXor");return e^t}function zG(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function leftShift");return e<<t}function BG(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function rightArithShift");return e>>t}function LG(e,t){if(!lq(e)||!lq(t))throw new Error("Integers expected in function rightLogShift");return e>>>t}OG.signature=$G,RG.signature="number",_G.signature=$G,FG.signature=$G,zG.signature=$G,BG.signature=$G,LG.signature=$G;var PG="bitNot",UG=iq(PG,["typed"],(e=>{var{typed:t}=e;return t(PG,{number:RG,BigNumber:IG,"Array | Matrix":function(e){return fj(e,this)}})})),qG="boolean",WG=iq(qG,["typed"],(e=>{var{typed:t}=e;return t(qG,{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},null:function(e){return!1},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;var n=Number(e);if(""!==e&&!isNaN(n))return!!n;throw new Error('Cannot convert "'+e+'" to a boolean')},"Array | Matrix":function(e){return fj(e,this)}})})),VG="clone",jG=iq(VG,["typed"],(e=>{var{typed:t}=e;return t(VG,{any:WU})}));function GG(e,t){if(t<e)return 1;if(t===e)return t;var n=t+e>>1;return GG(e,n)*GG(n+1,t)}function HG(e,t){if(!lq(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!lq(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(t>e)throw new TypeError("k must be less than or equal to n");var n=e-t;return t<n?GG(n+1,e)/GG(1,t):GG(t+1,e)/GG(1,n)}HG.signature="number, number";var KG="combinations",XG=iq(KG,["typed"],(e=>{var{typed:t}=e;return t(KG,{"number, number":HG,"BigNumber, BigNumber":function(e,t){var n,r,a=e.constructor,i=e.minus(t),s=new a(1);if(!ZG(e)||!ZG(t))throw new TypeError("Positive integer value expected in function combinations");if(t.gt(e))throw new TypeError("k must be less than n in function combinations");if(n=s,t.lt(i))for(r=s;r.lte(i);r=r.plus(s))n=n.times(t.plus(r)).dividedBy(r);else for(r=s;r.lte(t);r=r.plus(s))n=n.times(i.plus(r)).dividedBy(r);return n}})}));function ZG(e){return e.isInteger()&&e.gte(0)}var YG=iq("complex",["typed","Complex"],(e=>{var{typed:t,Complex:n}=e;return t("complex",{"":function(){return n.ZERO},number:function(e){return new n(e,0)},"number, number":function(e,t){return new n(e,t)},"BigNumber, BigNumber":function(e,t){return new n(e.toNumber(),t.toNumber())},Fraction:function(e){return new n(e.valueOf(),0)},Complex:function(e){return e.clone()},string:function(e){return n(e)},null:function(e){return n(0)},Object:function(e){if("re"in e&&"im"in e)return new n(e.re,e.im);if("r"in e&&"phi"in e||"abs"in e&&"arg"in e)return new n(e);throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)")},"Array | Matrix":function(e){return fj(e,this)}})})),JG="conj",QG=iq(JG,["typed"],(e=>{var{typed:t}=e;return t(JG,{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.conjugate()},"Array | Matrix":function(e){return fj(e,this)}})})),eH="cosh",tH=iq(eH,["typed"],(e=>{var{typed:t}=e;return t(eH,{number:Dq,Complex:function(e){return e.cosh()},BigNumber:function(e){return e.cosh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cosh is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),nH="coth",rH=iq(nH,["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t(nH,{number:aG,Complex:function(e){return e.coth()},BigNumber:function(e){return new n(1).div(e.tanh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function coth is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),aH=iq("csc",["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t("csc",{number:iG,Complex:function(e){return e.csc()},BigNumber:function(e){return new n(1).div(e.sin())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csc is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),iH="cube",sH=iq(iH,["typed"],(e=>{var{typed:t}=e;return t(iH,{number:Cj,Complex:function(e){return e.mul(e).mul(e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.pow(3)},"Array | Matrix":function(e){return fj(e,this,!0)},Unit:function(e){return e.pow(3)}})}));function oH(e,t,n){if(null==n)return e.eq(t);if(e.eq(t))return!0;if(e.isNaN()||t.isNaN())return!1;if(e.isFinite()&&t.isFinite()){var r=e.minus(t).abs();if(r.isZero())return!0;var a=e.constructor.max(e.abs(),t.abs());return r.lte(a.times(n))}return!1}var uH="equalScalar",cH=iq(uH,["typed","config"],(e=>{var{typed:t,config:n}=e;return t(uH,{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,t){return Iq(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)||oH(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,t){return function(e,t,n){return Iq(e.re,t.re,n)&&Iq(e.im,t.im,n)}(e,t,n.epsilon)},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)}})})),lH=(iq(uH,["typed","config"],(e=>{var{typed:t,config:n}=e;return t(uH,{"number, number":function(e,t){return Iq(e,t,n.epsilon)}})})),iq("erf",["typed"],(e=>{var{typed:t}=e;return t("name",{number:function(e){var t=Math.abs(e);return t>=mH?pq(e):t<=pH?pq(e)*function(e){var t,n=e*e,r=hH[0][4]*n,a=n;for(t=0;t<3;t+=1)r=(r+hH[0][t])*n,a=(a+fH[0][t])*n;return e*(r+hH[0][3])/(a+fH[0][3])}(t):t<=4?pq(e)*(1-function(e){var t,n=hH[1][8]*e,r=e;for(t=0;t<7;t+=1)n=(n+hH[1][t])*e,r=(r+fH[1][t])*e;var a=(n+hH[1][7])/(r+fH[1][7]),i=parseInt(16*e)/16,s=(e-i)*(e+i);return Math.exp(-i*i)*Math.exp(-s)*a}(t)):pq(e)*(1-function(e){var t,n=1/(e*e),r=hH[2][5]*n,a=n;for(t=0;t<4;t+=1)r=(r+hH[2][t])*n,a=(a+fH[2][t])*n;var i=n*(r+hH[2][4])/(a+fH[2][4]);i=(dH-i)/e;var s=(e-(n=parseInt(16*e)/16))*(e+n);return Math.exp(-n*n)*Math.exp(-s)*i}(t))},"Array | Matrix":function(e){return fj(e,this)}})}))),pH=.46875,dH=.5641895835477563,hH=[[3.1611237438705655,113.86415415105016,377.485237685302,3209.3775891384694,.18577770618460315],[.5641884969886701,8.883149794388377,66.11919063714163,298.6351381974001,881.952221241769,1712.0476126340707,2051.0783778260716,1230.3393547979972,2.1531153547440383e-8],[.30532663496123236,.36034489994980445,.12578172611122926,.016083785148742275,.0006587491615298378,.016315387137302097]],fH=[[23.601290952344122,244.02463793444417,1282.6165260773723,2844.236833439171],[15.744926110709835,117.6939508913125,537.1811018620099,1621.3895745666903,3290.7992357334597,4362.619090143247,3439.3676741437216,1230.3393548037495],[2.568520192289822,1.8729528499234604,.5279051029514285,.06051834131244132,.0023352049762686918]],mH=Math.pow(2,53),gH=iq("exp",["typed"],(e=>{var{typed:t}=e;return t("exp",{number:Tj,Complex:function(e){return e.exp()},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return fj(e,this)}})})),yH="expm1",xH=iq(yH,["typed","Complex"],(e=>{var{typed:t,Complex:n}=e;return t(yH,{number:Dj,Complex:function(e){var t=Math.exp(e.re);return new n(t*Math.cos(e.im)-1,t*Math.sin(e.im))},BigNumber:function(e){return e.exp().minus(1)},"Array | Matrix":function(e){return fj(e,this)}})})),bH=iq("filter",["typed"],(e=>{var{typed:t}=e;return t("filter",{"Array, function":vH,"Matrix, function":function(e,t){return e.create(vH(e.toArray(),t))},"Array, RegExp":PV,"Matrix, RegExp":function(e,t){return e.create(PV(e.toArray(),t))}})}));function vH(e,t){var n=_q(t);return LV(e,(function(e,r,a){return 1===n?t(e):2===n?t(e,[r]):t(e,[r],a)}))}var wH="forEach",NH=iq(wH,["typed"],(e=>{var{typed:t}=e;return t(wH,{"Array, function":SH,"Matrix, function":function(e,t){return e.forEach(t)}})}));function SH(e,t){var n=_q(t);!function r(a,i){Array.isArray(a)?BV(a,(function(e,t){r(e,i.concat(t))})):1===n?t(a):2===n?t(a,i):t(a,i,e)}(e,[])}var kH="format",IH=iq(kH,["typed"],(e=>{var{typed:t}=e;return t(kH,{any:gV,"any, Object | function | number":gV})})),EH="getMatrixDataType",CH=iq(EH,["typed"],(e=>{var{typed:t}=e;return t(EH,{Array:function(e){return VV(e,qU)},Matrix:function(e){return e.getDataType()}})})),TH=iq("hex",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("hex",{"number | BigNumber":function(e){return n(e,{notation:"hex"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"hex",wordSize:t})}})})),DH=iq("im",["typed"],(e=>{var{typed:t}=e;return t("im",{number:function(e){return 0},BigNumber:function(e){return e.mul(0)},Fraction:function(e){return e.mul(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return fj(e,this)}})})),AH="isInteger",MH=iq(AH,["typed"],(e=>{var{typed:t}=e;return t(AH,{number:lq,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return fj(e,this)}})})),$H="number";function OH(e){return e<0}function RH(e){return e>0}function _H(e){return 0===e}function FH(e){return Number.isNaN(e)}OH.signature=$H,RH.signature=$H,_H.signature=$H,FH.signature=$H;var zH="isNegative",BH=iq(zH,["typed"],(e=>{var{typed:t}=e;return t(zH,{number:OH,BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),LH="isPositive",PH=iq(LH,["typed"],(e=>{var{typed:t}=e;return t(LH,{number:RH,BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s>0&&e.n>0},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),UH="isZero",qH=iq(UH,["typed"],(e=>{var{typed:t}=e;return t(UH,{number:_H,BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),WH="log10",VH=iq(WH,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(WH,{number:function(e){return e>=0||n.predictable?Oj(e):new r(e,0).log().div(Math.LN10)},Complex:function(e){return new r(e).log().div(Math.LN10)},BigNumber:function(e){return!e.isNegative()||n.predictable?e.log():new r(e.toNumber(),0).log().div(Math.LN10)},"Array | Matrix":function(e){return fj(e,this)}})})),jH="log2",GH=iq(jH,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(jH,{number:function(e){return e>=0||n.predictable?Rj(e):a(new r(e,0))},Complex:a,BigNumber:function(e){return!e.isNegative()||n.predictable?e.log(2):a(new r(e.toNumber(),0))},"Array | Matrix":function(e){return fj(e,this)}});function a(e){var t=Math.sqrt(e.re*e.re+e.im*e.im);return new r(Math.log2?Math.log2(t):Math.log(t)/Math.LN2,Math.atan2(e.im,e.re)/Math.LN2)}})),HH=iq("map",["typed"],(e=>{var{typed:t}=e;return t("map",{"Array, function":KH,"Matrix, function":function(e,t){return e.map(t)}})}));function KH(e,t){var n=_q(t);return function r(a,i){return Array.isArray(a)?a.map((function(e,t){return r(e,i.concat(t))})):1===n?t(a):2===n?t(a,i):t(a,i,e)}(e,[])}var XH=iq("multiplyScalar",["typed"],(e=>{var{typed:t}=e;return t("multiplyScalar",{"number, number":Nj,"Complex, Complex":function(e,t){return e.mul(t)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){var n=t.clone();return n.value=null===n.value?n._normalize(e):this(n.value,e),n},"Unit, number | Fraction | BigNumber | Complex":function(e,t){var n=e.clone();return n.value=null===n.value?n._normalize(t):this(n.value,t),n},"Unit, Unit":function(e,t){return e.multiply(t)}})})),ZH="number, number";function YH(e){return!e}function JH(e,t){return!(!e&&!t)}function QH(e,t){return!!e!=!!t}function eK(e,t){return!(!e||!t)}YH.signature="number",JH.signature=ZH,QH.signature=ZH,eK.signature=ZH;var tK=iq("not",["typed"],(e=>{var{typed:t}=e;return t("not",{number:YH,Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return null===e.value||this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),nK=iq("number",["typed"],(e=>{var{typed:t}=e,n=t("number",{"":function(){return 0},number:function(e){return e},string:function(e){if("NaN"===e)return NaN;var t=function(e){var t=e.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);return t?{input:e,radix:{"0b":2,"0o":8,"0x":16}[t[1]],integerPart:t[2],fractionalPart:t[3]}:null}(e);if(t)return function(e){for(var t=parseInt(e.integerPart,e.radix),n=0,r=0;r<e.fractionalPart.length;r++)n+=parseInt(e.fractionalPart[r],e.radix)/Math.pow(e.radix,r+1);var a=t+n;if(isNaN(a))throw new SyntaxError('String "'+e.input+'" is no valid number');return a}(t);var n=0,r=e.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);r&&(n=Number(r[2]),e=r[1]);var a=Number(e);if(isNaN(a))throw new SyntaxError('String "'+e+'" is no valid number');if(r){if(a>2**n-1)throw new SyntaxError('String "'.concat(e,'" is out of range'));a>=2**(n-1)&&(a-=2**n)}return a},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},null:function(e){return 0},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return fj(e,this)}});return n.fromJSON=function(e){return parseFloat(e.value)},n})),rK=iq("oct",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("oct",{"number | BigNumber":function(e){return n(e,{notation:"oct"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"oct",wordSize:t})}})})),aK=n(676),iK=aK(Date.now());function sK(e){var t,n;return t=null===(n=e)?iK:aK(String(n)),function(){return t()}}var oK="pickRandom",uK=iq(oK,["typed","config","?on"],(e=>{var{typed:t,config:n,on:r}=e,a=sK(n.randomSeed);return r&&r("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=sK(e.randomSeed))})),t(oK,{"Array | Matrix":function(e){return i(e,{})},"Array | Matrix, Object":function(e,t){return i(e,t)},"Array | Matrix, number":function(e,t){return i(e,{number:t})},"Array | Matrix, Array | Matrix":function(e,t){return i(e,{weights:t})},"Array | Matrix, Array | Matrix, number":function(e,t,n){return i(e,{number:n,weights:t})},"Array | Matrix, number, Array | Matrix":function(e,t,n){return i(e,{number:t,weights:n})}});function i(e,t){var{number:n,weights:r,elementWise:i=!0}=t,s=void 0===n;s&&(n=1);var o=pU(e)?e.create:pU(r)?r.create:null;e=e.valueOf(),r&&(r=r.valueOf()),!0===i&&(e=FV(e),r=FV(r));var u=0;if(void 0!==r){if(r.length!==e.length)throw new Error("Weights must have the same length as possibles");for(var c=0,l=r.length;c<l;c++){if(!aU(r[c])||r[c]<0)throw new Error("Weights must be an array of positive numbers");u+=r[c]}}for(var p,d=e.length,h=[];h.length<n;){if(void 0===r)p=e[Math.floor(a()*d)];else for(var f=a()*u,m=0,g=e.length;m<g;m++)if((f-=r[m])<0){p=e[m];break}h.push(p)}return s?h[0]:o?o(h):h}})),cK="print",lK=iq(cK,["typed"],(e=>{var{typed:t}=e;return t(cK,{"string, Object | Array":pK,"string, Object | Array, number | Object":pK})}));function pK(e,t,n){return e.replace(/\$([\w.]+)/g,(function(e,r){for(var a=r.split("."),i=t[a.shift()];a.length&&void 0!==i;){var s=a.shift();i=s?i[s]:i+"."}return void 0!==i?cU(i)?i:gV(i,n):e}))}function dK(e,t){var n=[];if((e=e.slice(0)).length>1)for(var r=0,a=e.shift();r<a;r++)n.push(dK(e,t));else for(var i=0,s=e.shift();i<s;i++)n.push(t());return n}var hK="random",fK=iq(hK,["typed","config","?on"],(e=>{var{typed:t,config:n,on:r}=e,a=sK(n.randomSeed);return r&&r("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=sK(e.randomSeed))})),t(hK,{"":()=>s(0,1),number:e=>s(0,e),"number, number":(e,t)=>s(e,t),"Array | Matrix":e=>i(e,0,1),"Array | Matrix, number":(e,t)=>i(e,0,t),"Array | Matrix, number, number":(e,t,n)=>i(e,t,n)});function i(e,t,n){var r=dK(e.valueOf(),(()=>s(t,n)));return pU(e)?e.create(r):r}function s(e,t){return e+a()*(t-e)}})),mK=iq("re",["typed"],(e=>{var{typed:t}=e;return t("re",{number:function(e){return e},BigNumber:function(e){return e},Fraction:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return fj(e,this)}})})),gK=iq("sec",["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t("sec",{number:oG,Complex:function(e){return e.sec()},BigNumber:function(e){return new n(1).div(e.cos())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sec is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),yK="sign",xK=iq(yK,["typed","BigNumber","Fraction","complex"],(e=>{var{typed:t,BigNumber:n,complex:r,Fraction:a}=e;return t(yK,{number:zj,Complex:function(e){return 0===e.im?r(zj(e.re)):e.sign()},BigNumber:function(e){return new n(e.cmp(0))},Fraction:function(e){return new a(e.s,1)},"Array | Matrix":function(e){return fj(e,this,!0)},Unit:function(e){return this(e.value)}})})),bK=iq("sin",["typed"],(e=>{var{typed:t}=e;return t("sin",{number:Math.sin,Complex:function(e){return e.sin()},BigNumber:function(e){return e.sin()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sin is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this,!0)}})})),vK=iq("SparseMatrix",["typed","equalScalar","Matrix"],(e=>{var{typed:t,equalScalar:n,Matrix:r}=e;function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!cU(t))throw new Error("Invalid datatype: "+t);if(pU(e))!function(e,t,n){"SparseMatrix"===t.type?(e._values=t._values?WU(t._values):void 0,e._index=WU(t._index),e._ptr=WU(t._ptr),e._size=WU(t._size),e._datatype=n||t._datatype):i(e,t.valueOf(),n||t._datatype)}(this,e,t);else if(e&&lU(e.index)&&lU(e.ptr)&&lU(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(lU(e))i(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+qU(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}function i(e,r,a){e._values=[],e._index=[],e._ptr=[],e._datatype=a;var i=r.length,s=0,o=n,u=0;if(cU(a)&&(o=t.find(n,[a,a])||n,u=t.convert(0,a)),i>0){var c=0;do{e._ptr.push(e._index.length);for(var l=0;l<i;l++){var p=r[l];if(lU(p)){if(0===c&&s<p.length&&(s=p.length),c<p.length){var d=p[c];o(d,u)||(e._values.push(d),e._index.push(l))}}else 0===c&&s<1&&(s=1),o(p,u)||(e._values.push(p),e._index.push(l))}c++}while(c<s)}e._ptr.push(e._index.length),e._size=[i,s]}function s(e,t){if(!gU(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n,r,i,s,o=t.size();if(o.length!==e._size.length)throw new wV(o.length,e._size.length);var u=t.min(),c=t.max();for(n=0,r=e._size.length;n<r;n++)EV(u[n],e._size[n]),EV(c[n],e._size[n]);var l=e._values,p=e._index,d=e._ptr,h=t.dimension(0),f=t.dimension(1),m=[],g=[];h.forEach((function(e,t){g[e]=t[0],m[e]=!0}));var y=l?[]:void 0,x=[],b=[];return f.forEach((function(e){for(b.push(x.length),i=d[e],s=d[e+1];i<s;i++)n=p[i],!0===m[n]&&(x.push(g[n]),y&&y.push(l[i]))})),b.push(x.length),new a({values:y,index:x,ptr:b,size:o,datatype:e._datatype})}function o(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var a,i=t.size(),s=t.isScalar();if(pU(n)?(a=n.size(),n=n.toArray()):a=SV(n),s){if(0!==a.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(1!==i.length&&2!==i.length)throw new wV(i.length,e._size.length,"<");if(a.length<i.length){for(var o=0,u=0;1===i[o]&&1===a[o];)o++;for(;1===i[o];)u++,o++;n=RV(n,i.length,u,a)}if(!HU(i,a))throw new wV(i,a,">");if(1===i.length)t.dimension(0).forEach((function(t,a){EV(t),e.set([t,0],n[a[0]],r)}));else{var c=t.dimension(0),l=t.dimension(1);c.forEach((function(t,a){EV(t),l.forEach((function(i,s){EV(i),e.set([t,i],n[a[0]][s[0]],r)}))}))}}return e}function u(e,t,n,r){if(n-t==0)return n;for(var a=t;a<n;a++)if(r[a]===e)return a;return t}function c(e,t,n,r,a,i,s){a.splice(e,0,r),i.splice(e,0,t);for(var o=n+1;o<s.length;o++)s[o]++}function l(e,r,a,i){var s=i||0,o=n,u=0;cU(e._datatype)&&(o=t.find(n,[e._datatype,e._datatype])||n,u=t.convert(0,e._datatype),s=t.convert(s,e._datatype));var c,l,p,d=!o(s,u),h=e._size[0],f=e._size[1];if(a>f){for(l=f;l<a;l++)if(e._ptr[l]=e._values.length,d)for(c=0;c<h;c++)e._values.push(s),e._index.push(c);e._ptr[a]=e._values.length}else a<f&&(e._ptr.splice(a+1,f-a),e._values.splice(e._ptr[a],e._values.length),e._index.splice(e._ptr[a],e._index.length));if(f=a,r>h){if(d){var m=0;for(l=0;l<f;l++){e._ptr[l]=e._ptr[l]+m,p=e._ptr[l+1]+m;var g=0;for(c=h;c<r;c++,g++)e._values.splice(p+g,0,s),e._index.splice(p+g,0,c),m++}e._ptr[f]=e._values.length}}else if(r<h){var y=0;for(l=0;l<f;l++){e._ptr[l]=e._ptr[l]-y;var x=e._ptr[l],b=e._ptr[l+1]-y;for(p=x;p<b;p++)(c=e._index[p])>r-1&&(e._values.splice(p,1),e._index.splice(p,1),y++)}e._ptr[l]=e._values.length}return e._size[0]=r,e._size[1]=a,e}function p(e,t,n,r,a){var i,s,o=r[0],u=r[1],c=[];for(i=0;i<o;i++)for(c[i]=[],s=0;s<u;s++)c[i][s]=0;for(s=0;s<u;s++)for(var l=n[s],p=n[s+1],d=l;d<p;d++)c[i=t[d]][s]=e?a?WU(e[d]):e[d]:1;return c}return a.prototype=new r,a.prototype.createSparseMatrix=function(e,t){return new a(e,t)},a.prototype.type="SparseMatrix",a.prototype.isSparseMatrix=!0,a.prototype.getDataType=function(){return VV(this._values,qU)},a.prototype.storage=function(){return"sparse"},a.prototype.datatype=function(){return this._datatype},a.prototype.create=function(e,t){return new a(e,t)},a.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},a.prototype.subset=function(e,t,n){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return s(this,e);case 2:case 3:return o(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},a.prototype.get=function(e){if(!lU(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new wV(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var t=e[0],n=e[1];EV(t,this._size[0]),EV(n,this._size[1]);var r=u(t,this._ptr[n],this._ptr[n+1],this._index);return r<this._ptr[n+1]&&this._index[r]===t?this._values[r]:0},a.prototype.set=function(e,r,a){if(!lU(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new wV(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var i=e[0],s=e[1],o=this._size[0],p=this._size[1],d=n,h=0;cU(this._datatype)&&(d=t.find(n,[this._datatype,this._datatype])||n,h=t.convert(0,this._datatype)),(i>o-1||s>p-1)&&(l(this,Math.max(i+1,o),Math.max(s+1,p),a),o=this._size[0],p=this._size[1]),EV(i,o),EV(s,p);var f=u(i,this._ptr[s],this._ptr[s+1],this._index);return f<this._ptr[s+1]&&this._index[f]===i?d(r,h)?function(e,t,n,r,a){n.splice(e,1),r.splice(e,1);for(var i=t+1;i<a.length;i++)a[i]--}(f,s,this._values,this._index,this._ptr):this._values[f]=r:c(f,i,s,r,this._values,this._index,this._ptr),this},a.prototype.resize=function(e,t,n){if(!dU(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((e=>Array.isArray(e)&&1===e.length?e[0]:e));if(2!==r.length)throw new Error("Only two dimensions matrix are supported");return r.forEach((function(e){if(!aU(e)||!lq(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+gV(r)+")")})),l(n?this.clone():this,r[0],r[1],t)},a.prototype.reshape=function(e,t){if(!lU(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Sparse matrices can only be reshaped in two dimensions");e.forEach((function(t){if(!aU(t)||!lq(t)||t<=-2||0===t)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+gV(e)+")")}));var n=this._size[0]*this._size[1];if(n!==(e=AV(e,n))[0]*e[1])throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var r=t?this.clone():this;if(this._size[0]===e[0]&&this._size[1]===e[1])return r;for(var a=[],i=0;i<r._ptr.length;i++)for(var s=0;s<r._ptr[i+1]-r._ptr[i];s++)a.push(i);for(var o=r._values.slice(),l=r._index.slice(),p=0;p<r._index.length;p++){var d=l[p],h=a[p],f=d*r._size[1]+h;a[p]=f%e[1],l[p]=Math.floor(f/e[1])}r._values.length=0,r._index.length=0,r._ptr.length=e[1]+1,r._size=e.slice();for(var m=0;m<r._ptr.length;m++)r._ptr[m]=0;for(var g=0;g<o.length;g++){var y=l[g],x=a[g],b=o[g];c(u(y,r._ptr[x],r._ptr[x+1],r._index),y,x,b,r._values,r._index,r._ptr)}return r},a.prototype.clone=function(){return new a({values:this._values?WU(this._values):void 0,index:WU(this._index),ptr:WU(this._ptr),size:WU(this._size),datatype:this._datatype})},a.prototype.size=function(){return this._size.slice(0)},a.prototype.map=function(e,r){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var i=this;return function(e,r,i,s,o,u,c){var l=[],p=[],d=[],h=n,f=0;cU(e._datatype)&&(h=t.find(n,[e._datatype,e._datatype])||n,f=t.convert(0,e._datatype));for(var m=function(e,t,n){e=u(e,t,n),h(e,f)||(l.push(e),p.push(t))},g=0;g<=o;g++){d.push(l.length);var y=e._ptr[g],x=e._ptr[g+1];if(c)for(var b=y;b<x;b++){var v=e._index[b];v>=0&&v<=i&&m(e._values[b],v-0,g-0)}else{for(var w={},N=y;N<x;N++)w[e._index[N]]=e._values[N];for(var S=0;S<=i;S++)m(S in w?w[S]:0,S-0,g-0)}}return d.push(l.length),new a({values:l,index:p,ptr:d,size:[i-0+1,o-0+1]})}(this,0,this._size[0]-1,0,this._size[1]-1,(function(t,n,r){return e(t,[n,r],i)}),r)},a.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var n=this._size[0],r=this._size[1],a=0;a<r;a++){var i=this._ptr[a],s=this._ptr[a+1];if(t)for(var o=i;o<s;o++){var u=this._index[o];e(this._values[o],[u,a],this)}else{for(var c={},l=i;l<s;l++)c[this._index[l]]=this._values[l];for(var p=0;p<n;p++)e(p in c?c[p]:0,[p,a],this)}}},a.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var e=this._size[1],t=0;t<e;t++)for(var n=this._ptr[t],r=this._ptr[t+1],a=n;a<r;a++){var i=this._index[a];yield{value:this._values[a],index:[i,t]}}},a.prototype.toArray=function(){return p(this._values,this._index,this._ptr,this._size,!0)},a.prototype.valueOf=function(){return p(this._values,this._index,this._ptr,this._size,!1)},a.prototype.format=function(e){for(var t=this._size[0],n=this._size[1],r=this.density(),a="Sparse Matrix ["+gV(t,e)+" x "+gV(n,e)+"] density: "+gV(r,e)+"\n",i=0;i<n;i++)for(var s=this._ptr[i],o=this._ptr[i+1],u=s;u<o;u++)a+="\n    ("+gV(this._index[u],e)+", "+gV(i,e)+") ==> "+(this._values?gV(this._values[u],e):"X");return a},a.prototype.toString=function(){return gV(this.toArray())},a.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},a.prototype.diagonal=function(e){if(e){if(iU(e)&&(e=e.toNumber()),!aU(e)||!lq(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=e>0?e:0,n=e<0?-e:0,r=this._size[0],i=this._size[1],s=Math.min(r-n,i-t),o=[],u=[],c=[];c[0]=0;for(var l=t;l<i&&o.length<s;l++)for(var p=this._ptr[l],d=this._ptr[l+1],h=p;h<d;h++){var f=this._index[h];if(f===l-t+n){o.push(this._values[h]),u[o.length-1]=f-n;break}}return c.push(o.length),new a({values:o,index:u,ptr:c,size:[s,1]})},a.fromJSON=function(e){return new a(e)},a.diagonal=function(e,r,i,s,o){if(!lU(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if(iU(e)&&(e=e.toNumber()),!aU(e)||!lq(e)||e<1)throw new Error("Size values must be positive integers");return e})),i){if(iU(i)&&(i=i.toNumber()),!aU(i)||!lq(i))throw new TypeError("The parameter k must be an integer number")}else i=0;var u=n,c=0;cU(o)&&(u=t.find(n,[o,o])||n,c=t.convert(0,o));var l,p=i>0?i:0,d=i<0?-i:0,h=e[0],f=e[1],m=Math.min(h-d,f-p);if(lU(r)){if(r.length!==m)throw new Error("Invalid value array length");l=function(e){return r[e]}}else if(pU(r)){var g=r.size();if(1!==g.length||g[0]!==m)throw new Error("Invalid matrix length");l=function(e){return r.get([e])}}else l=function(){return r};for(var y=[],x=[],b=[],v=0;v<f;v++){b.push(y.length);var w=v-p;if(w>=0&&w<m){var N=l(w);u(N,c)||(x.push(w+d),y.push(N))}}return b.push(y.length),new a({values:y,index:x,ptr:b,size:[h,f]})},a.prototype.swapRows=function(e,t){if(!(aU(e)&&lq(e)&&aU(t)&&lq(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return EV(e,this._size[0]),EV(t,this._size[0]),a._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},a._forEachRow=function(e,t,n,r,a){for(var i=r[e],s=r[e+1],o=i;o<s;o++)a(n[o],t[o])},a._swapRows=function(e,t,n,r,a,i){for(var s=0;s<n;s++){var o=i[s],c=i[s+1],l=u(e,o,c,a),p=u(t,o,c,a);if(l<c&&p<c&&a[l]===e&&a[p]===t){if(r){var d=r[l];r[l]=r[p],r[p]=d}}else if(l<c&&a[l]===e&&(p>=c||a[p]!==t)){var h=r?r[l]:void 0;a.splice(p,0,t),r&&r.splice(p,0,h),a.splice(p<=l?l+1:l,1),r&&r.splice(p<=l?l+1:l,1)}else if(p<c&&a[p]===t&&(l>=c||a[l]!==e)){var f=r?r[p]:void 0;a.splice(l,0,e),r&&r.splice(l,0,f),a.splice(l<=p?p+1:p,1),r&&r.splice(l<=p?p+1:p,1)}}},a}),{isClass:!0}),wK="splitUnit",NK=iq(wK,["typed"],(e=>{var{typed:t}=e;return t(wK,{"Unit, Array":function(e,t){return e.splitUnit(t)}})})),SK="square",kK=iq(SK,["typed"],(e=>{var{typed:t}=e;return t(SK,{number:Bj,Complex:function(e){return e.mul(e)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return fj(e,this,!0)},Unit:function(e){return e.pow(2)}})})),IK="string",EK=iq(IK,["typed"],(e=>{var{typed:t}=e;return t(IK,{"":function(){return""},number:xq,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return fj(e,this)},any:function(e){return String(e)}})})),CK=iq("tan",["typed"],(e=>{var{typed:t}=e;return t("tan",{number:Math.tan,Complex:function(e){return e.tan()},BigNumber:function(e){return e.tan()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tan is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this,!0)}})})),TK="typeOf",DK=iq(TK,["typed"],(e=>{var{typed:t}=e;return t(TK,{any:qU})})),AK="acosh",MK=iq(AK,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(AK,{number:function(e){return e>=1||n.predictable?Kj(e):e<=-1?new r(Math.log(Math.sqrt(e*e-1)-e),Math.PI):new r(e,0).acosh()},Complex:function(e){return e.acosh()},BigNumber:function(e){return e.acosh()},"Array | Matrix":function(e){return fj(e,this)}})})),$K="acsch",OK=iq($K,["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t($K,{number:Jj,Complex:function(e){return e.acsch()},BigNumber:function(e){return new n(1).div(e).asinh()},"Array | Matrix":function(e){return fj(e,this)}})})),RK="apply",_K=iq(RK,["typed","isInteger"],(e=>{var{typed:t,isInteger:n}=e;return t(RK,{"Array | Matrix, number | BigNumber, function":function(e,t,r){if(!n(t))throw new TypeError("Integer number expected for dimension");var a=Array.isArray(e)?SV(e):e.size();if(t<0||t>=a.length)throw new NV(t,a.length);return pU(e)?e.create(FK(e.valueOf(),t,r)):FK(e,t,r)}})}));function FK(e,t,n){var r,a,i;if(t<=0){if(Array.isArray(e[0])){for(i=function(e){var t,n,r=e.length,a=e[0].length,i=[];for(n=0;n<a;n++){var s=[];for(t=0;t<r;t++)s.push(e[t][n]);i.push(s)}return i}(e),a=[],r=0;r<i.length;r++)a[r]=FK(i[r],t-1,n);return a}return n(e)}for(a=[],r=0;r<e.length;r++)a[r]=FK(e[r],t-1,n);return a}var zK="asec",BK=iq(zK,["typed","config","Complex","BigNumber"],(e=>{var{typed:t,config:n,Complex:r,BigNumber:a}=e;return t(zK,{number:function(e){return e<=-1||e>=1||n.predictable?Qj(e):new r(e,0).asec()},Complex:function(e){return e.asec()},BigNumber:function(e){return new a(1).div(e).acos()},"Array | Matrix":function(e){return fj(e,this)}})})),LK=iq("bin",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("bin",{"number | BigNumber":function(e){return n(e,{notation:"bin"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"bin",wordSize:t})}})})),PK="combinationsWithRep",UK=iq(PK,["typed"],(e=>{var{typed:t}=e;return t(PK,{"number, number":function(e,t){if(!lq(e)||e<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(!lq(t)||t<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(e<1)throw new TypeError("k must be less than or equal to n + k - 1");return t<e-1?GG(e,e+t-1)/GG(1,t):GG(t+1,e+t-1)/GG(1,e-1)},"BigNumber, BigNumber":function(e,t){var n,r,a=new(0,e.constructor)(1),i=e.minus(a);if(!qK(e)||!qK(t))throw new TypeError("Positive integer value expected in function combinationsWithRep");if(e.lt(a))throw new TypeError("k must be less than or equal to n + k - 1 in function combinationsWithRep");if(n=a,t.lt(i))for(r=a;r.lte(i);r=r.plus(a))n=n.times(t.plus(r)).dividedBy(r);else for(r=a;r.lte(t);r=r.plus(a))n=n.times(i.plus(r)).dividedBy(r);return n}})}));function qK(e){return e.isInteger()&&e.gte(0)}var WK=iq("cos",["typed"],(e=>{var{typed:t}=e;return t("cos",{number:Math.cos,Complex:function(e){return e.cos()},BigNumber:function(e){return e.cos()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cos is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),VK="csch",jK=iq(VK,["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t(VK,{number:sG,Complex:function(e){return e.csch()},BigNumber:function(e){return new n(1).div(e.sinh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csch is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),GK="isNaN",HK=iq(GK,["typed"],(e=>{var{typed:t}=e;return t(GK,{number:FH,BigNumber:function(e){return e.isNaN()},Fraction:function(e){return!1},Complex:function(e){return e.isNaN()},Unit:function(e){return Number.isNaN(e.value)},"Array | Matrix":function(e){return fj(e,Number.isNaN)}})})),KK="isPrime",XK=iq(KK,["typed"],(e=>{var{typed:t}=e;return t(KK,{number:function(e){if(0*e!=0)return!1;if(e<=3)return e>1;if(e%2==0||e%3==0)return!1;for(var t=5;t*t<=e;t+=6)if(e%t==0||e%(t+2)==0)return!1;return!0},BigNumber:function(e){if(0*e.toNumber()!=0)return!1;if(e.lte(3))return e.gt(1);if(e.mod(2).eq(0)||e.mod(3).eq(0))return!1;if(e.lt(Math.pow(2,32))){for(var t=e.toNumber(),n=5;n*n<=t;n+=6)if(t%n==0||t%(n+2)==0)return!1;return!0}function r(e,t,n){for(var r=1;!t.eq(0);)t.mod(2).eq(0)?(t=t.div(2),e=e.mul(e).mod(n)):(t=t.sub(1),r=e.mul(r).mod(n));return r}for(var a=e.constructor.clone({precision:2*e.toFixed(0).length}),i=0,s=(e=new a(e)).sub(1);s.mod(2).eq(0);)s=s.div(2),i+=1;var o=null;if(e.lt("3317044064679887385961981"))o=[2,3,5,7,11,13,17,19,23,29,31,37,41].filter((t=>t<e));else{var u=Math.min(e.toNumber()-2,Math.floor(2*Math.pow(e.toFixed(0).length*Math.log(10),2)));o=[];for(var c=2;c<=u;c+=1)o.push(u)}for(var l=0;l<o.length;l+=1){var p=o[l],d=r(e.sub(e).add(p),s,e);if(!d.eq(1))for(var h=0,f=d;!f.eq(e.sub(1));h+=1,f=f.mul(f).mod(e))if(h===i-1)return!1}return!0},"Array | Matrix":function(e){return fj(e,this)}})})),ZK="randomInt",YK=iq(ZK,["typed","config","?on"],(e=>{var{typed:t,config:n,on:r}=e,a=sK(n.randomSeed);return r&&r("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=sK(e.randomSeed))})),t(ZK,{"":()=>s(0,1),number:e=>s(0,e),"number, number":(e,t)=>s(e,t),"Array | Matrix":e=>i(e,0,1),"Array | Matrix, number":(e,t)=>i(e,0,t),"Array | Matrix, number, number":(e,t,n)=>i(e,t,n)});function i(e,t,n){var r=dK(e.valueOf(),(()=>s(t,n)));return pU(e)?e.create(r):r}function s(e,t){return Math.floor(e+a()*(t-e))}})),JK="sech",QK=iq(JK,["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t(JK,{number:uG,Complex:function(e){return e.sech()},BigNumber:function(e){return new n(1).div(e.cosh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sech is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),eX="sinh",tX=iq(eX,["typed"],(e=>{var{typed:t}=e;return t(eX,{number:cG,Complex:function(e){return e.sinh()},BigNumber:function(e){return e.sinh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sinh is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this,!0)}})})),nX="sparse",rX=iq(nX,["typed","SparseMatrix"],(e=>{var{typed:t,SparseMatrix:n}=e;return t(nX,{"":function(){return new n([])},string:function(e){return new n([],e)},"Array | Matrix":function(e){return new n(e)},"Array | Matrix, string":function(e,t){return new n(e,t)}})})),aX=iq("sqrt",["config","typed","Complex"],(e=>{var{config:t,typed:n,Complex:r}=e;return n("sqrt",{number:a,Complex:function(e){return e.sqrt()},BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():a(e.toNumber())},"Array | Matrix":function(e){return fj(e,this,!0)},Unit:function(e){return e.pow(.5)}});function a(e){return isNaN(e)?NaN:e>=0||t.predictable?Math.sqrt(e):new r(e,0).sqrt()}})),iX=iq("tanh",["typed"],(e=>{var{typed:t}=e;return t("tanh",{number:Mq,Complex:function(e){return e.tanh()},BigNumber:function(e){return e.tanh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tanh is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this,!0)}})})),sX="unaryMinus",oX=iq(sX,["typed"],(e=>{var{typed:t}=e;return t(sX,{number:Sj,Complex:function(e){return e.neg()},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=this(e.value),t},"Array | Matrix":function(e){return fj(e,this,!0)}})})),uX="acoth",cX=iq(uX,["typed","config","Complex","BigNumber"],(e=>{var{typed:t,config:n,Complex:r,BigNumber:a}=e;return t(uX,{number:function(e){return e>=1||e<=-1||n.predictable?Zj(e):new r(e,0).acoth()},Complex:function(e){return e.acoth()},BigNumber:function(e){return new a(1).div(e).atanh()},"Array | Matrix":function(e){return fj(e,this)}})})),lX=iq("cot",["typed","BigNumber"],(e=>{var{typed:t,BigNumber:n}=e;return t("cot",{number:rG,Complex:function(e){return e.cot()},BigNumber:function(e){return new n(1).div(e.tan())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cot is no angle");return this(e.value)},"Array | Matrix":function(e){return fj(e,this)}})})),pX=iq("fraction",["typed","Fraction"],(e=>{var{typed:t,Fraction:n}=e;return t("fraction",{number:function(e){if(!isFinite(e)||isNaN(e))throw new Error(e+" cannot be represented as a fraction");return new n(e)},string:function(e){return new n(e)},"number, number":function(e,t){return new n(e,t)},null:function(e){return new n(0)},BigNumber:function(e){return new n(e.toString())},Fraction:function(e){return e},Object:function(e){return new n(e)},"Array | Matrix":function(e){return fj(e,this)}})})),dX="isNumeric",hX=iq(dX,["typed"],(e=>{var{typed:t}=e;return t(dX,{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string | null | undefined | Node":function(){return!1},"Array | Matrix":function(e){return fj(e,this)}})})),fX="matrix",mX=iq(fX,["typed","Matrix","DenseMatrix","SparseMatrix"],(e=>{var{typed:t,Matrix:n,DenseMatrix:r,SparseMatrix:a}=e;return t(fX,{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i});function i(e,t,n){if("dense"===t||"default"===t||void 0===t)return new r(e,n);if("sparse"===t)return new a(e,n);throw new TypeError("Unknown matrix type "+JSON.stringify(t)+".")}})),gX="matrixFromFunction",yX=iq(gX,["typed","matrix","isZero"],(e=>{var{typed:t,matrix:n,isZero:r}=e;return t(gX,{"Array | Matrix, function, string, string":function(e,t,n,r){return a(e,t,n,r)},"Array | Matrix, function, string":function(e,t,n){return a(e,t,n)},"Matrix, function":function(e,t){return a(e,t,"dense")},"Array, function":function(e,t){return a(e,t,"dense").toArray()},"Array | Matrix, string, function":function(e,t,n){return a(e,n,t)},"Array | Matrix, string, string, function":function(e,t,n,r){return a(e,r,t,n)}});function a(e,t,a,i){var s;return(s=void 0!==i?n(a,i):n(a)).resize(e),s.forEach((function(e,n){var a=t(n);r(a)||s.set(n,a)})),s}})),xX=iq("algorithm02",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a,i){var s=e._data,o=e._size,u=e._datatype,c=r._values,l=r._index,p=r._ptr,d=r._size,h=r._datatype;if(o.length!==d.length)throw new wV(o.length,d.length);if(o[0]!==d[0]||o[1]!==d[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+d+")");if(!c)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var f,m=o[0],g=o[1],y=n,x=0,b=a;"string"==typeof u&&u===h&&(f=u,y=t.find(n,[f,f]),x=t.convert(0,f),b=t.find(a,[f,f]));for(var v=[],w=[],N=[],S=0;S<g;S++){N[S]=w.length;for(var k=p[S],I=p[S+1],E=k;E<I;E++){var C=l[E],T=i?b(c[E],s[C][S]):b(s[C][S],c[E]);y(T,x)||(w.push(C),v.push(T))}}return N[g]=w.length,r.createSparseMatrix({values:v,index:w,ptr:N,size:[m,g],datatype:f})}})),bX=iq("algorithm03",["typed"],(e=>{var{typed:t}=e;return function(e,n,r,a){var i=e._data,s=e._size,o=e._datatype,u=n._values,c=n._index,l=n._ptr,p=n._size,d=n._datatype;if(s.length!==p.length)throw new wV(s.length,p.length);if(s[0]!==p[0]||s[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+s+") must match Matrix B ("+p+")");if(!u)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var h,f=s[0],m=s[1],g=0,y=r;"string"==typeof o&&o===d&&(h=o,g=t.convert(0,h),y=t.find(r,[h,h]));for(var x=[],b=0;b<f;b++)x[b]=[];for(var v=[],w=[],N=0;N<m;N++){for(var S=N+1,k=l[N],I=l[N+1],E=k;E<I;E++){var C=c[E];v[C]=a?y(u[E],i[C][N]):y(i[C][N],u[E]),w[C]=S}for(var T=0;T<f;T++)w[T]===S?x[T][N]=v[T]:x[T][N]=a?y(g,i[T][N]):y(i[T][N],g)}return e.createDenseMatrix({data:x,size:[f,m],datatype:h})}})),vX=iq("algorithm05",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a){var i=e._values,s=e._index,o=e._ptr,u=e._size,c=e._datatype,l=r._values,p=r._index,d=r._ptr,h=r._size,f=r._datatype;if(u.length!==h.length)throw new wV(u.length,h.length);if(u[0]!==h[0]||u[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+h+")");var m,g=u[0],y=u[1],x=n,b=0,v=a;"string"==typeof c&&c===f&&(m=c,x=t.find(n,[m,m]),b=t.convert(0,m),v=t.find(a,[m,m]));var w,N,S,k,I=i&&l?[]:void 0,E=[],C=[],T=I?[]:void 0,D=I?[]:void 0,A=[],M=[];for(N=0;N<y;N++){C[N]=E.length;var $=N+1;for(S=o[N],k=o[N+1];S<k;S++)w=s[S],E.push(w),A[w]=$,T&&(T[w]=i[S]);for(S=d[N],k=d[N+1];S<k;S++)A[w=p[S]]!==$&&E.push(w),M[w]=$,D&&(D[w]=l[S]);if(I)for(S=C[N];S<E.length;){var O=A[w=E[S]],R=M[w];if(O===$||R===$){var _=v(O===$?T[w]:b,R===$?D[w]:b);x(_,b)?E.splice(S,1):(I.push(_),S++)}}}return C[y]=E.length,e.createSparseMatrix({values:I,index:E,ptr:C,size:[g,y],datatype:m})}})),wX=iq("algorithm11",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a,i){var s=e._values,o=e._index,u=e._ptr,c=e._size,l=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,d=c[0],h=c[1],f=n,m=0,g=a;"string"==typeof l&&(p=l,f=t.find(n,[p,p]),m=t.convert(0,p),r=t.convert(r,p),g=t.find(a,[p,p]));for(var y=[],x=[],b=[],v=0;v<h;v++){b[v]=x.length;for(var w=u[v],N=u[v+1],S=w;S<N;S++){var k=o[S],I=i?g(r,s[S]):g(s[S],r);f(I,m)||(x.push(k),y.push(I))}}return b[h]=x.length,e.createSparseMatrix({values:y,index:x,ptr:b,size:[d,h],datatype:p})}})),NX=iq("algorithm12",["typed","DenseMatrix"],(e=>{var{typed:t,DenseMatrix:n}=e;return function(e,r,a,i){var s=e._values,o=e._index,u=e._ptr,c=e._size,l=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,d=c[0],h=c[1],f=a;"string"==typeof l&&(p=l,r=t.convert(r,p),f=t.find(a,[p,p]));for(var m=[],g=[],y=[],x=0;x<h;x++){for(var b=x+1,v=u[x],w=u[x+1],N=v;N<w;N++){var S=o[N];g[S]=s[N],y[S]=b}for(var k=0;k<d;k++)0===x&&(m[k]=[]),y[k]===b?m[k][x]=i?f(r,g[k]):f(g[k],r):m[k][x]=i?f(r,0):f(0,r)}return new n({data:m,size:[d,h],datatype:p})}})),SX=iq("algorithm13",["typed"],(e=>{var{typed:t}=e;return function(e,r,a){var i,s=e._data,o=e._size,u=e._datatype,c=r._data,l=r._size,p=r._datatype,d=[];if(o.length!==l.length)throw new wV(o.length,l.length);for(var h=0;h<o.length;h++){if(o[h]!==l[h])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+l+")");d[h]=o[h]}var f=a;"string"==typeof u&&u===p&&(i=u,f=t.find(a,[i,i]));var m=d.length>0?n(f,0,d,d[0],s,c):[];return e.createDenseMatrix({data:m,size:d,datatype:i})};function n(e,t,r,a,i,s){var o=[];if(t===r.length-1)for(var u=0;u<a;u++)o[u]=e(i[u],s[u]);else for(var c=0;c<a;c++)o[c]=n(e,t+1,r,r[t+1],i[c],s[c]);return o}})),kX=iq("algorithm14",["typed"],(e=>{var{typed:t}=e;return function(e,r,a,i){var s,o=e._data,u=e._size,c=e._datatype,l=a;"string"==typeof c&&(s=c,r=t.convert(r,s),l=t.find(a,[s,s]));var p=u.length>0?n(l,0,u,u[0],o,r,i):[];return e.createDenseMatrix({data:p,size:WU(u),datatype:s})};function n(e,t,r,a,i,s,o){var u=[];if(t===r.length-1)for(var c=0;c<a;c++)u[c]=o?e(s,i[c]):e(i[c],s);else for(var l=0;l<a;l++)u[l]=n(e,t+1,r,r[t+1],i[l],s,o);return u}})),IX=iq("mod",["typed","matrix","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a}=e,i=xX({typed:t,equalScalar:r}),s=bX({typed:t}),o=vX({typed:t,equalScalar:r}),u=wX({typed:t,equalScalar:r}),c=NX({typed:t,DenseMatrix:a}),l=SX({typed:t}),p=kX({typed:t});return t("mod",{"number, number":_j,"BigNumber, BigNumber":function(e,t){if(t.isNeg())throw new Error("Cannot calculate mod for a negative divisor");return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){if(t.compare(0)<0)throw new Error("Cannot calculate mod for a negative divisor");return e.compare(0)>=0?e.mod(t):e.mod(t).add(t).mod(t)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return u(e,t,this,!1)},"DenseMatrix, any":function(e,t){return p(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return p(t,e,this,!0)},"Array, any":function(e,t){return p(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return p(n(t),e,this,!0).valueOf()}})})),EX=iq("algorithm01",["typed"],(e=>{var{typed:t}=e;return function(e,n,r,a){var i=e._data,s=e._size,o=e._datatype,u=n._values,c=n._index,l=n._ptr,p=n._size,d=n._datatype;if(s.length!==p.length)throw new wV(s.length,p.length);if(s[0]!==p[0]||s[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+s+") must match Matrix B ("+p+")");if(!u)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var h,f,m=s[0],g=s[1],y="string"==typeof o&&o===d?o:void 0,x=y?t.find(r,[y,y]):r,b=[];for(h=0;h<m;h++)b[h]=[];var v=[],w=[];for(f=0;f<g;f++){for(var N=f+1,S=l[f],k=l[f+1],I=S;I<k;I++)v[h=c[I]]=a?x(u[I],i[h][f]):x(i[h][f],u[I]),w[h]=N;for(h=0;h<m;h++)w[h]===N?b[h][f]=v[h]:b[h][f]=i[h][f]}return e.createDenseMatrix({data:b,size:[m,g],datatype:y})}})),CX=iq("algorithm06",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a){var i=e._values,s=e._size,o=e._datatype,u=r._values,c=r._size,l=r._datatype;if(s.length!==c.length)throw new wV(s.length,c.length);if(s[0]!==c[0]||s[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+s+") must match Matrix B ("+c+")");var p,d=s[0],h=s[1],f=n,m=0,g=a;"string"==typeof o&&o===l&&(p=o,f=t.find(n,[p,p]),m=t.convert(0,p),g=t.find(a,[p,p]));for(var y=i&&u?[]:void 0,x=[],b=[],v=y?[]:void 0,w=[],N=[],S=0;S<h;S++){b[S]=x.length;var k=S+1;if(yj(e,S,w,v,N,k,x,g),yj(r,S,w,v,N,k,x,g),v)for(var I=b[S];I<x.length;){var E=x[I];if(N[E]===k){var C=v[E];f(C,m)?x.splice(I,1):(y.push(C),I++)}else x.splice(I,1)}else for(var T=b[S];T<x.length;)N[x[T]]!==k?x.splice(T,1):T++}return b[h]=x.length,e.createSparseMatrix({values:y,index:x,ptr:b,size:[d,h],datatype:p})}})),TX="nthRoot",DX=iq(TX,["typed","matrix","equalScalar","BigNumber"],(e=>{var{typed:t,matrix:n,equalScalar:r,BigNumber:a}=e,i=EX({typed:t}),s=xX({typed:t,equalScalar:r}),o=CX({typed:t,equalScalar:r}),u=wX({typed:t,equalScalar:r}),c=SX({typed:t}),l=kX({typed:t}),p="Complex number not supported in function nthRoot. Use nthRoots instead.";return t(TX,{number:function(e){return Fj(e,2)},"number, number":Fj,BigNumber:function(e){return d(e,new a(2))},Complex:function(e){throw new Error(p)},"Complex, number":function(e,t){throw new Error(p)},"BigNumber, BigNumber":d,"Array | Matrix":function(e){return this(e,2)},"SparseMatrix, SparseMatrix":function(e,t){if(1===t.density())return o(e,t,this);throw new Error("Root must be non-zero")},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){if(1===t.density())return i(e,t,this,!1);throw new Error("Root must be non-zero")},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return u(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return l(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){if(1===t.density())return u(t,e,this,!0);throw new Error("Root must be non-zero")},"number | BigNumber, DenseMatrix":function(e,t){return l(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(n(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,n(t)).valueOf()}});function d(e,t){var n=a.precision,r=a.clone({precision:n+2}),i=new a(0),s=new r(1),o=t.isNegative();if(o&&(t=t.neg()),t.isZero())throw new Error("Root must be non-zero");if(e.isNegative()&&!t.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");if(e.isZero())return o?new r(1/0):0;if(!e.isFinite())return o?i:e;var u=e.abs().pow(s.div(t));return u=e.isNeg()?u.neg():u,new a((o?s.div(u):u).toPrecision(n))}}));function AX(){throw new Error('No "bignumber" implementation available')}function MX(){throw new Error('No "fraction" implementation available')}function $X(){throw new Error('No "matrix" implementation available')}var OX=iq("numeric",["number","?bignumber","?fraction"],(e=>{var{number:t,bignumber:n,fraction:r}=e,a={string:!0,number:!0,BigNumber:!0,Fraction:!0},i={number:e=>t(e),BigNumber:n?e=>n(e):AX,Fraction:r?e=>r(e):MX};return function(e,t){var n=qU(e);if(!(n in a))throw new TypeError("Cannot convert "+e+' of type "'+n+'"; valid input types are '+Object.keys(a).join(", "));if(!(t in i))throw new TypeError("Cannot convert "+e+' to type "'+t+'"; valid output types are '+Object.keys(i).join(", "));return t===n?e:i[t](e)}})),RX=iq("or",["typed","matrix","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a}=e,i=bX({typed:t}),s=vX({typed:t,equalScalar:r}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t("or",{"number, number":JH,"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));function _X(e,t,n){var r;return-1!==String(e).indexOf("Unexpected type")?(r=arguments.length>2?" (type: "+qU(n)+", value: "+JSON.stringify(n)+")":" (type: "+e.data.actual+")",new TypeError("Cannot calculate "+t+", unexpected type of argument"+r)):-1!==String(e).indexOf("complex numbers")?(r=arguments.length>2?" (type: "+qU(n)+", value: "+JSON.stringify(n)+")":"",new TypeError("Cannot calculate "+t+", no ordering relation is defined for complex numbers"+r)):e}var FX="prod",zX=iq(FX,["typed","config","multiplyScalar","numeric"],(e=>{var{typed:t,config:n,multiplyScalar:r,numeric:a}=e;return t(FX,{"Array | Matrix":i,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(e){return i(e)}});function i(e){var t;if(hj(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw _X(t,"prod",e)}})),"string"==typeof t&&(t=a(t,n.number)),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}})),BX="reshape",LX=iq(BX,["typed","isInteger","matrix"],(e=>{var{typed:t,isInteger:n}=e;return t(BX,{"Matrix, Array":function(e,t){return e.reshape(t)},"Array, Array":function(e,t){return t.forEach((function(e){if(!n(e))throw new TypeError("Invalid size for dimension: "+e)})),DV(e,t)}})})),PX="size",UX=iq(PX,["typed","config","?matrix"],(e=>{var{typed:t,config:n,matrix:r}=e;return t(PX,{Matrix:function(e){return e.create(e.size())},Array:SV,string:function(e){return"Array"===n.matrix?[e.length]:r([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"Array"===n.matrix?[]:r?r([]):$X()}})})),qX=iq("algorithm07",["typed","DenseMatrix"],(e=>{var{typed:t,DenseMatrix:n}=e;return function(e,a,i){var s=e._size,o=e._datatype,u=a._size,c=a._datatype;if(s.length!==u.length)throw new wV(s.length,u.length);if(s[0]!==u[0]||s[1]!==u[1])throw new RangeError("Dimension mismatch. Matrix A ("+s+") must match Matrix B ("+u+")");var l,p,d,h=s[0],f=s[1],m=0,g=i;"string"==typeof o&&o===c&&(l=o,m=t.convert(0,l),g=t.find(i,[l,l]));var y=[];for(p=0;p<h;p++)y[p]=[];var x=[],b=[],v=[],w=[];for(d=0;d<f;d++){var N=d+1;for(r(e,d,v,x,N),r(a,d,w,b,N),p=0;p<h;p++){var S=v[p]===N?x[p]:m,k=w[p]===N?b[p]:m;y[p][d]=g(S,k)}}return new n({data:y,size:[h,f],datatype:l})};function r(e,t,n,r,a){for(var i=e._values,s=e._index,o=e._ptr,u=o[t],c=o[t+1];u<c;u++){var l=s[u];n[l]=a,r[l]=i[u]}}})),WX="smaller",VX=iq(WX,["typed","config","matrix","DenseMatrix"],(e=>{var{typed:t,config:n,matrix:r,DenseMatrix:a}=e,i=bX({typed:t}),s=qX({typed:t,DenseMatrix:a}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(WX,{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,t){return e<t&&!Iq(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)&&!oH(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(r(t),e,this,!0).valueOf()}})})),jX="squeeze",GX=iq(jX,["typed","matrix"],(e=>{var{typed:t,matrix:n}=e;return t(jX,{Array:function(e){return $V(WU(e))},Matrix:function(e){var t=$V(e.toArray());return Array.isArray(t)?n(t):t},any:function(e){return WU(e)}})})),HX="subset",KX=iq(HX,["typed","matrix"],(e=>{var{typed:t,matrix:n}=e;return t(HX,{"Array, Index":function(e,t){var r=n(e).subset(t);return t.isScalar()?r:r.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"Object, Index":YX,"string, Index":XX,"Array, Index, any":function(e,t,r){return n(WU(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,a){return n(WU(e)).subset(t,r,a).valueOf()},"Matrix, Index, any":function(e,t,n){return e.clone().subset(t,n)},"Matrix, Index, any, any":function(e,t,n,r){return e.clone().subset(t,n,r)},"string, Index, string":ZX,"string, Index, string, string":ZX,"Object, Index, any":JX})}));function XX(e,t){if(!gU(t))throw new TypeError("Index expected");if(1!==t.size().length)throw new wV(t.size().length,1);var n=e.length;EV(t.min()[0],n),EV(t.max()[0],n);var r=t.dimension(0),a="";return r.forEach((function(t){a+=e.charAt(t)})),a}function ZX(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!==t.size().length)throw new wV(t.size().length,1);if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";var a=t.dimension(0);if(a.size()[0]!==n.length)throw new wV(a.size()[0],n.length);var i=e.length;EV(t.min()[0]),EV(t.max()[0]);for(var s=[],o=0;o<i;o++)s[o]=e.charAt(o);if(a.forEach((function(e,t){s[e]=n.charAt(t[0])})),s.length>i)for(var u=i-1,c=s.length;u<c;u++)s[u]||(s[u]=r);return s.join("")}function YX(e,t){if(1!==t.size().length)throw new wV(t.size(),1);var n=t.dimension(0);if("string"!=typeof n)throw new TypeError("String expected as index to retrieve an object property");return XV(e,n)}function JX(e,t,n){if(1!==t.size().length)throw new wV(t.size(),1);var r=t.dimension(0);if("string"!=typeof r)throw new TypeError("String expected as index to retrieve an object property");var a=WU(e);return ZV(a,r,n),a}var QX=iq("algorithm10",["typed","DenseMatrix"],(e=>{var{typed:t,DenseMatrix:n}=e;return function(e,r,a,i){var s=e._values,o=e._index,u=e._ptr,c=e._size,l=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,d=c[0],h=c[1],f=a;"string"==typeof l&&(p=l,r=t.convert(r,p),f=t.find(a,[p,p]));for(var m=[],g=[],y=[],x=0;x<h;x++){for(var b=x+1,v=u[x],w=u[x+1],N=v;N<w;N++){var S=o[N];g[S]=s[N],y[S]=b}for(var k=0;k<d;k++)0===x&&(m[k]=[]),y[k]===b?m[k][x]=i?f(r,g[k]):f(g[k],r):m[k][x]=r}return new n({data:m,size:[d,h],datatype:p})}})),eZ="subtract",tZ=iq(eZ,["typed","matrix","equalScalar","addScalar","unaryMinus","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,addScalar:a,unaryMinus:i,DenseMatrix:s}=e,o=EX({typed:t}),u=bX({typed:t}),c=vX({typed:t,equalScalar:r}),l=QX({typed:t,DenseMatrix:s}),p=SX({typed:t}),d=kX({typed:t});return t(eZ,{"number, number":function(e,t){return e-t},"Complex, Complex":function(e,t){return e.sub(t)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null===e.value)throw new Error("Parameter x contains a unit with undefined value");if(null===t.value)throw new Error("Parameter y contains a unit with undefined value");if(!e.equalBase(t))throw new Error("Units do not match");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n},"SparseMatrix, SparseMatrix":function(e,t){return nZ(e,t),c(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return nZ(e,t),u(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return nZ(e,t),o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return nZ(e,t),p(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return l(e,i(t),a)},"DenseMatrix, any":function(e,t){return d(e,t,this)},"any, SparseMatrix":function(e,t){return l(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(n(t),e,this,!0).valueOf()}})}));function nZ(e,t){var n=e.size(),r=t.size();if(n.length!==r.length)throw new wV(n.length,r.length)}var rZ=iq("to",["typed","matrix"],(e=>{var{typed:t,matrix:n}=e,r=SX({typed:t}),a=kX({typed:t});return t("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return r(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"Matrix, any":function(e,t){return a(e,t,this,!1)},"any, Matrix":function(e,t){return a(t,e,this,!0)},"Array, any":function(e,t){return a(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return a(n(t),e,this,!0).valueOf()}})})),aZ=iq("transpose",["typed","matrix"],(e=>{var{typed:t,matrix:n}=e;return t("transpose",{Array:function(e){return this(n(e)).valueOf()},Matrix:function(e){var t,n=e.size();switch(n.length){case 1:t=e.clone();break;case 2:var r=n[0],a=n[1];if(0===a)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+gV(n)+")");switch(e.storage()){case"dense":t=function(e,t,n){for(var r,a=e._data,i=[],s=0;s<n;s++){r=i[s]=[];for(var o=0;o<t;o++)r[o]=WU(a[o][s])}return e.createDenseMatrix({data:i,size:[n,t],datatype:e._datatype})}(e,r,a);break;case"sparse":t=function(e,t,n){for(var r,a,i,s=e._values,o=e._index,u=e._ptr,c=s?[]:void 0,l=[],p=[],d=[],h=0;h<t;h++)d[h]=0;for(r=0,a=o.length;r<a;r++)d[o[r]]++;for(var f=0,m=0;m<t;m++)p.push(f),f+=d[m],d[m]=p[m];for(p.push(f),i=0;i<n;i++)for(var g=u[i],y=u[i+1],x=g;x<y;x++){var b=d[o[x]]++;l[b]=i,s&&(c[b]=WU(s[x]))}return e.createSparseMatrix({values:c,index:l,ptr:p,size:[n,t],datatype:e._datatype})}(e,r,a)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+gV(this._size)+")")}return t},any:function(e){return WU(e)}})})),iZ="xgcd",sZ=iq(iZ,["typed","config","matrix","BigNumber"],(e=>{var{typed:t,config:n,matrix:r,BigNumber:a}=e;return t(iZ,{"number, number":function(e,t){var a=Lj(e,t);return"Array"===n.matrix?a:r(a)},"BigNumber, BigNumber":function(e,t){var i,s,o,u,c=new a(0),l=new a(1),p=c,d=l,h=l,f=c;if(!e.isInt()||!t.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!t.isZero();)s=e.div(t).floor(),o=e.mod(t),i=p,p=d.minus(s.times(p)),d=i,i=h,h=f.minus(s.times(h)),f=i,e=t,t=o;return u=e.lt(c)?[e.neg(),d.neg(),f.neg()]:[e,e.isZero()?0:d,f],"Array"===n.matrix?u:r(u)}})})),oZ="zeros",uZ=iq(oZ,["typed","config","matrix","BigNumber"],(e=>{var{typed:t,config:n,matrix:r,BigNumber:a}=e;return t(oZ,{"":function(){return"Array"===n.matrix?i([]):i([],"default")},"...number | BigNumber | string":function(e){if("string"==typeof e[e.length-1]){var t=e.pop();return i(e,t)}return"Array"===n.matrix?i(e):i(e,"default")},Array:i,Matrix:function(e){var t=e.storage();return i(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return i(e.valueOf(),t)}});function i(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){iU(e)&&(t=!0,r[n]=e.toNumber())})),t}(e),i=n?new a(0):0;if(function(e){e.forEach((function(e){if("number"!=typeof e||!lq(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")}))}(e),t){var s=r(t);return e.length>0?s.resize(e,i):s}var o=[];return e.length>0?CV(o,e,i):o}})),cZ=iq("and",["typed","matrix","equalScalar","zeros","not"],(e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,not:i}=e,s=xX({typed:t,equalScalar:r}),o=CX({typed:t,equalScalar:r}),u=wX({typed:t,equalScalar:r}),c=SX({typed:t}),l=kX({typed:t});return t("and",{"number, number":eK,"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return i(t)?a(e.size(),e.storage()):u(e,t,this,!1)},"DenseMatrix, any":function(e,t){return i(t)?a(e.size(),e.storage()):l(e,t,this,!1)},"any, SparseMatrix":function(e,t){return i(e)?a(e.size(),e.storage()):u(t,e,this,!0)},"any, DenseMatrix":function(e,t){return i(e)?a(e.size(),e.storage()):l(t,e,this,!0)},"Array, any":function(e,t){return this(n(e),t).valueOf()},"any, Array":function(e,t){return this(e,n(t)).valueOf()}})})),lZ="bitAnd",pZ=iq(lZ,["typed","matrix","equalScalar"],(e=>{var{typed:t,matrix:n,equalScalar:r}=e,a=xX({typed:t,equalScalar:r}),i=CX({typed:t,equalScalar:r}),s=wX({typed:t,equalScalar:r}),o=SX({typed:t}),u=kX({typed:t});return t(lZ,{"number, number":OG,"BigNumber, BigNumber":kG,"SparseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return o(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,this,!1)},"DenseMatrix, any":function(e,t){return u(e,t,this,!1)},"any, SparseMatrix":function(e,t){return s(t,e,this,!0)},"any, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, any":function(e,t){return u(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,this,!0).valueOf()}})})),dZ="bitXor",hZ=iq(dZ,["typed","matrix","DenseMatrix"],(e=>{var{typed:t,matrix:n,DenseMatrix:r}=e,a=bX({typed:t}),i=qX({typed:t,DenseMatrix:r}),s=NX({typed:t,DenseMatrix:r}),o=SX({typed:t}),u=kX({typed:t});return t(dZ,{"number, number":FG,"BigNumber, BigNumber":DG,"SparseMatrix, SparseMatrix":function(e,t){return i(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return o(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,this,!1)},"DenseMatrix, any":function(e,t){return u(e,t,this,!1)},"any, SparseMatrix":function(e,t){return s(t,e,this,!0)},"any, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, any":function(e,t){return u(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,this,!0).valueOf()}})})),fZ="cbrt",mZ=iq(fZ,["config","typed","isNegative","unaryMinus","matrix","Complex","BigNumber","Fraction"],(e=>{var{config:t,typed:n,isNegative:r,unaryMinus:a,matrix:i,Complex:s,BigNumber:o,Fraction:u}=e;return n(fZ,{number:Ij,Complex:c,"Complex, boolean":c,BigNumber:function(e){return e.cbrt()},Unit:function(e){if(e.value&&sU(e.value)){var t=e.clone();return t.value=1,(t=t.pow(1/3)).value=c(e.value),t}var n,i=r(e.value);i&&(e.value=a(e.value)),n=iU(e.value)?new o(1).div(3):oU(e.value)?new u(1,3):1/3;var s=e.pow(n);return i&&(s.value=a(s.value)),s},"Array | Matrix":function(e){return fj(e,this,!0)}});function c(e,n){var r=e.arg()/3,a=e.abs(),o=new s(Ij(a),0).mul(new s(0,r).exp());if(n){var u=[o,new s(Ij(a),0).mul(new s(0,r+2*Math.PI/3).exp()),new s(Ij(a),0).mul(new s(0,r-2*Math.PI/3).exp())];return"Array"===t.matrix?u:i(u)}return o}})),gZ="compare",yZ=iq(gZ,["typed","config","matrix","equalScalar","BigNumber","Fraction","DenseMatrix"],(e=>{var{typed:t,config:n,equalScalar:r,matrix:a,BigNumber:i,Fraction:s,DenseMatrix:o}=e,u=bX({typed:t}),c=vX({typed:t,equalScalar:r}),l=NX({typed:t,DenseMatrix:o}),p=SX({typed:t}),d=kX({typed:t});return t(gZ,{"boolean, boolean":function(e,t){return e===t?0:e>t?1:-1},"number, number":function(e,t){return Iq(e,t,n.epsilon)?0:e>t?1:-1},"BigNumber, BigNumber":function(e,t){return oH(e,t,n.epsilon)?new i(0):new i(e.cmp(t))},"Fraction, Fraction":function(e,t){return new s(e.compare(t))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return c(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return u(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return this(a(e),t)},"Matrix, Array":function(e,t){return this(e,a(t))},"SparseMatrix, any":function(e,t){return l(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return l(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(a(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(a(t),e,this,!0).valueOf()}})})),xZ="compareText",bZ=iq(xZ,["typed","matrix"],(e=>{var{typed:t,matrix:n}=e,r=SX({typed:t}),a=kX({typed:t});return t(xZ,{"any, any":vV,"DenseMatrix, DenseMatrix":function(e,t){return r(e,t,vV)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"DenseMatrix, any":function(e,t){return a(e,t,vV,!1)},"any, DenseMatrix":function(e,t){return a(t,e,vV,!0)},"Array, any":function(e,t){return a(n(e),t,vV,!1).valueOf()},"any, Array":function(e,t){return a(n(t),e,vV,!0).valueOf()}})})),vZ="concat",wZ=iq(vZ,["typed","matrix","isInteger"],(e=>{var{typed:t,matrix:n,isInteger:r}=e;return t(vZ,{"...Array | Matrix | number | BigNumber":function(e){var t,a,i=e.length,s=-1,o=!1,u=[];for(t=0;t<i;t++){var c=e[t];if(pU(c)&&(o=!0),aU(c)||iU(c)){if(t!==i-1)throw new Error("Dimension must be specified as last argument");if(a=s,s=c.valueOf(),!r(s))throw new TypeError("Integer number expected for dimension");if(s<0||t>0&&s>a)throw new NV(s,a+1)}else{var l=WU(c).valueOf(),p=SV(l);if(u[t]=l,a=s,s=p.length-1,t>0&&s!==a)throw new wV(a+1,s+1)}}if(0===u.length)throw new SyntaxError("At least one matrix expected");for(var d=u.shift();u.length;)d=NZ(d,u.shift(),s,0);return o?n(d):d},"...string":function(e){return e.join("")}})}));function NZ(e,t,n,r){if(r<n){if(e.length!==t.length)throw new wV(e.length,t.length);for(var a=[],i=0;i<e.length;i++)a[i]=NZ(e[i],t[i],n,r+1);return a}return e.concat(t)}var SZ="count",kZ=iq(SZ,["typed","size","prod"],(e=>{var{typed:t,size:n,prod:r}=e;return t(SZ,{string:function(e){return e.length},"Matrix | Array":function(e){return r(n(e))}})})),IZ="ctranspose",EZ=iq(IZ,["typed","transpose","conj"],(e=>{var{typed:t,transpose:n,conj:r}=e;return t(IZ,{any:function(e){return r(n(e))}})})),CZ="diag",TZ=iq(CZ,["typed","matrix","DenseMatrix","SparseMatrix"],(e=>{var{typed:t,matrix:n,DenseMatrix:r,SparseMatrix:a}=e;return t(CZ,{Array:function(e){return i(e,0,SV(e),null)},"Array, number":function(e,t){return i(e,t,SV(e),null)},"Array, BigNumber":function(e,t){return i(e,t.toNumber(),SV(e),null)},"Array, string":function(e,t){return i(e,0,SV(e),t)},"Array, number, string":function(e,t,n){return i(e,t,SV(e),n)},"Array, BigNumber, string":function(e,t,n){return i(e,t.toNumber(),SV(e),n)},Matrix:function(e){return i(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return i(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return i(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return i(e,0,e.size(),t)},"Matrix, number, string":function(e,t,n){return i(e,t,e.size(),n)},"Matrix, BigNumber, string":function(e,t,n){return i(e,t.toNumber(),e.size(),n)}});function i(e,t,i,s){if(!lq(t))throw new TypeError("Second parameter in function diag must be an integer");var o=t>0?t:0,u=t<0?-t:0;switch(i.length){case 1:return function(e,t,n,i,s,o){var u=[i+s,i+o];if(n&&"sparse"!==n&&"dense"!==n)throw new TypeError("Unknown matrix type ".concat(n,'"'));var c="sparse"===n?a.diagonal(u,e,t):r.diagonal(u,e,t);return null!==n?c:c.valueOf()}(e,t,s,i[0],u,o);case 2:return function(e,t,r,a,i,s){if(pU(e)){var o=e.diagonal(t);return null!==r?r!==o.storage()?n(o,r):o:o.valueOf()}for(var u=Math.min(a[0]-i,a[1]-s),c=[],l=0;l<u;l++)c[l]=e[l+i][l+s];return null!==r?n(c):c}(e,t,s,i,u,o)}throw new RangeError("Matrix for function diag must be 2 dimensional")}})),DZ="divideScalar",AZ=iq(DZ,["typed","numeric"],(e=>{var{typed:t,numeric:n}=e;return t(DZ,{"number, number":function(e,t){return e/t},"Complex, Complex":function(e,t){return e.div(t)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){var r=e.clone(),a=n(1,qU(t));return r.value=this(null===r.value?r._normalize(a):r.value,t),r},"number | Fraction | BigNumber, Unit":function(e,t){var r=t.clone();r=r.pow(-1);var a=n(1,qU(e));return r.value=this(e,null===t.value?t._normalize(a):t.value),r},"Unit, Unit":function(e,t){return e.divide(t)}})})),MZ="dotDivide",$Z=iq(MZ,["typed","matrix","equalScalar","divideScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,divideScalar:a,DenseMatrix:i}=e,s=xX({typed:t,equalScalar:r}),o=bX({typed:t}),u=qX({typed:t,DenseMatrix:i}),c=wX({typed:t,equalScalar:r}),l=NX({typed:t,DenseMatrix:i}),p=SX({typed:t}),d=kX({typed:t});return t(MZ,{"any, any":a,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,a,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,a,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,a,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,a)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return c(e,t,a,!1)},"DenseMatrix, any":function(e,t){return d(e,t,a,!1)},"any, SparseMatrix":function(e,t){return l(t,e,a,!0)},"any, DenseMatrix":function(e,t){return d(t,e,a,!0)},"Array, any":function(e,t){return d(n(e),t,a,!1).valueOf()},"any, Array":function(e,t){return d(n(t),e,a,!0).valueOf()}})})),OZ="equal",RZ=iq(OZ,["typed","matrix","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a}=e,i=bX({typed:t}),s=qX({typed:t,DenseMatrix:a}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(OZ,{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:r(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,r)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,r,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,r,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,r)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,r,!1)},"DenseMatrix, any":function(e,t){return c(e,t,r,!1)},"any, SparseMatrix":function(e,t){return o(t,e,r,!0)},"any, DenseMatrix":function(e,t){return c(t,e,r,!0)},"Array, any":function(e,t){return c(n(e),t,r,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,r,!0).valueOf()}})})),_Z=(iq(OZ,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(OZ,{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:n(e,t)}})})),"flatten"),FZ=iq(_Z,["typed","matrix"],(e=>{var{typed:t,matrix:n}=e;return t(_Z,{Array:function(e){return FV(WU(e))},Matrix:function(e){var t=FV(WU(e.toArray()));return n(t)}})})),zZ=iq("algorithm04",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a){var i=e._values,s=e._index,o=e._ptr,u=e._size,c=e._datatype,l=r._values,p=r._index,d=r._ptr,h=r._size,f=r._datatype;if(u.length!==h.length)throw new wV(u.length,h.length);if(u[0]!==h[0]||u[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+h+")");var m,g=u[0],y=u[1],x=n,b=0,v=a;"string"==typeof c&&c===f&&(m=c,x=t.find(n,[m,m]),b=t.convert(0,m),v=t.find(a,[m,m]));var w,N,S,k,I,E=i&&l?[]:void 0,C=[],T=[],D=i&&l?[]:void 0,A=i&&l?[]:void 0,M=[],$=[];for(N=0;N<y;N++){T[N]=C.length;var O=N+1;for(k=o[N],I=o[N+1],S=k;S<I;S++)w=s[S],C.push(w),M[w]=O,D&&(D[w]=i[S]);for(k=d[N],I=d[N+1],S=k;S<I;S++)if(M[w=p[S]]===O){if(D){var R=v(D[w],l[S]);x(R,b)?M[w]=null:D[w]=R}}else C.push(w),$[w]=O,A&&(A[w]=l[S]);if(D&&A)for(S=T[N];S<C.length;)M[w=C[S]]===O?(E[S]=D[w],S++):$[w]===O?(E[S]=A[w],S++):C.splice(S,1)}return T[y]=C.length,e.createSparseMatrix({values:E,index:C,ptr:T,size:[g,y],datatype:m})}})),BZ=iq("gcd",["typed","matrix","equalScalar","BigNumber","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,BigNumber:a,DenseMatrix:i}=e,s=EX({typed:t}),o=zZ({typed:t,equalScalar:r}),u=QX({typed:t,DenseMatrix:i}),c=SX({typed:t}),l=kX({typed:t});return t("gcd",{"number, number":Aj,"BigNumber, BigNumber":function(e,t){if(!e.isInt()||!t.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var n=new a(0);!t.isZero();){var r=e.mod(t);e=t,t=r}return e.lt(n)?e.neg():e},"Fraction, Fraction":function(e,t){return e.gcd(t)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return u(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return l(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return u(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return l(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return l(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return l(n(t),e,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,n){for(var r=this(e,t),a=0;a<n.length;a++)r=this(r,n[a]);return r}})})),LZ="hasNumericValue",PZ=iq(LZ,["typed","isNumeric"],(e=>{var{typed:t,isNumeric:n}=e;return t(LZ,{string:function(e){return e.trim().length>0&&!isNaN(Number(e))},any:function(e){return n(e)}})})),UZ="hypot",qZ=iq(UZ,["typed","abs","addScalar","divideScalar","multiplyScalar","sqrt","smaller","isPositive"],(e=>{var{typed:t,abs:n,addScalar:r,divideScalar:a,multiplyScalar:i,sqrt:s,smaller:o,isPositive:u}=e;return t(UZ,{"... number | BigNumber":function(e){for(var t=0,c=0,l=0;l<e.length;l++){var p=n(e[l]);o(c,p)?(t=i(t,i(a(c,p),a(c,p))),t=r(t,1),c=p):t=r(t,u(p)?i(a(p,c),a(p,c)):p)}return i(c,s(t))},Array:function(e){return this.apply(this,FV(e))},Matrix:function(e){return this.apply(this,FV(e.toArray()))}})})),WZ=iq("ImmutableDenseMatrix",["smaller","DenseMatrix"],(e=>{var{smaller:t,DenseMatrix:n}=e;function r(e,t){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!cU(t))throw new Error("Invalid datatype: "+t);if(pU(e)||lU(e)){var a=new n(e,t);this._data=a._data,this._size=a._size,this._datatype=a._datatype,this._min=null,this._max=null}else if(e&&lU(e.data)&&lU(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+qU(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}return r.prototype=new n,r.prototype.type="ImmutableDenseMatrix",r.prototype.isImmutableDenseMatrix=!0,r.prototype.subset=function(e){switch(arguments.length){case 1:var t=n.prototype.subset.call(this,e);return pU(t)?new r({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},r.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},r.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},r.prototype.reshape=function(){throw new Error("Cannot invoke reshape on an Immutable Matrix instance")},r.prototype.clone=function(){return new r({data:WU(this._data),size:WU(this._size),datatype:this._datatype})},r.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},r.fromJSON=function(e){return new r(e)},r.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},r.prototype.min=function(){if(null===this._min){var e=null;this.forEach((function(n){(null===e||t(n,e))&&(e=n)})),this._min=null!==e?e:void 0}return this._min},r.prototype.max=function(){if(null===this._max){var e=null;this.forEach((function(n){(null===e||t(e,n))&&(e=n)})),this._max=null!==e?e:void 0}return this._max},r}),{isClass:!0}),VZ=iq("Index",["ImmutableDenseMatrix"],(e=>{var{ImmutableDenseMatrix:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var t=0,a=arguments.length;t<a;t++){var i=arguments[t];if(mU(i))this._dimensions.push(i),this._isScalar=!1;else if(Array.isArray(i)||pU(i)){var s=r(i.valueOf());this._dimensions.push(s);var o=s.size();1===o.length&&1===o[0]||(this._isScalar=!1)}else if("number"==typeof i)this._dimensions.push(r([i]));else{if("string"!=typeof i)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");this._dimensions.push(i)}}}function r(e){for(var n=0,r=e.length;n<r;n++)if("number"!=typeof e[n]||!lq(e[n]))throw new TypeError("Index parameters must be positive integer numbers");return new t(e)}return n.prototype.type="Index",n.prototype.isIndex=!0,n.prototype.clone=function(){var e=new n;return e._dimensions=WU(this._dimensions),e._isScalar=this._isScalar,e},n.create=function(e){var t=new n;return n.apply(t,e),t},n.prototype.size=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?1:r.size()[0]}return e},n.prototype.max=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?r:r.max()}return e},n.prototype.min=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?r:r.min()}return e},n.prototype.forEach=function(e){for(var t=0,n=this._dimensions.length;t<n;t++)e(this._dimensions[t],t,this)},n.prototype.dimension=function(e){return this._dimensions[e]||null},n.prototype.isObjectProperty=function(){return 1===this._dimensions.length&&"string"==typeof this._dimensions[0]},n.prototype.getObjectProperty=function(){return this.isObjectProperty()?this._dimensions[0]:null},n.prototype.isScalar=function(){return this._isScalar},n.prototype.toArray=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e.push("string"==typeof r?r:r.toArray())}return e},n.prototype.valueOf=n.prototype.toArray,n.prototype.toString=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];"string"==typeof r?e.push(JSON.stringify(r)):e.push(r.toString())}return"["+e.join(", ")+"]"},n.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},n.fromJSON=function(e){return n.create(e.dimensions)},n}),{isClass:!0}),jZ="kron",GZ=iq(jZ,["typed","matrix","multiplyScalar"],(e=>{var{typed:t,matrix:n,multiplyScalar:r}=e;return t(jZ,{"Matrix, Matrix":function(e,t){return n(a(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return n(a(e.toArray(),t))},"Array, Matrix":function(e,t){return n(a(e,t.toArray()))},"Array, Array":a});function a(e,t){if(1===SV(e).length&&(e=[e]),1===SV(t).length&&(t=[t]),SV(e).length>2||SV(t).length>2)throw new RangeError("Vectors with dimensions greater then 2 are not supported expected (Size x = "+JSON.stringify(e.length)+", y = "+JSON.stringify(t.length)+")");var n=[],a=[];return e.map((function(e){return t.map((function(t){return a=[],n.push(a),e.map((function(e){return t.map((function(t){return a.push(r(e,t))}))}))}))}))&&n}})),HZ="largerEq",KZ=iq(HZ,["typed","config","matrix","DenseMatrix"],(e=>{var{typed:t,config:n,matrix:r,DenseMatrix:a}=e,i=bX({typed:t}),s=qX({typed:t,DenseMatrix:a}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(HZ,{"boolean, boolean":function(e,t){return e>=t},"number, number":function(e,t){return e>=t||Iq(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)||oH(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(r(t),e,this,!0).valueOf()}})})),XZ=iq("algorithm08",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a){var i=e._values,s=e._index,o=e._ptr,u=e._size,c=e._datatype,l=r._values,p=r._index,d=r._ptr,h=r._size,f=r._datatype;if(u.length!==h.length)throw new wV(u.length,h.length);if(u[0]!==h[0]||u[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+h+")");if(!i||!l)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var m,g=u[0],y=u[1],x=n,b=0,v=a;"string"==typeof c&&c===f&&(m=c,x=t.find(n,[m,m]),b=t.convert(0,m),v=t.find(a,[m,m]));for(var w,N,S,k,I=[],E=[],C=[],T=[],D=[],A=0;A<y;A++){C[A]=E.length;var M=A+1;for(N=o[A],S=o[A+1],w=N;w<S;w++)D[k=s[w]]=M,T[k]=i[w],E.push(k);for(N=d[A],S=d[A+1],w=N;w<S;w++)D[k=p[w]]===M&&(T[k]=v(T[k],l[w]));for(w=C[A];w<E.length;){var $=T[k=E[w]];x($,b)?E.splice(w,1):(I.push($),w++)}}return C[y]=E.length,e.createSparseMatrix({values:I,index:E,ptr:C,size:[g,y],datatype:m})}})),ZZ="leftShift",YZ=iq(ZZ,["typed","matrix","equalScalar","zeros","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,DenseMatrix:i}=e,s=EX({typed:t}),o=xX({typed:t,equalScalar:r}),u=XZ({typed:t,equalScalar:r}),c=QX({typed:t,DenseMatrix:i}),l=wX({typed:t,equalScalar:r}),p=SX({typed:t}),d=kX({typed:t});return t(ZZ,{"number, number":zG,"BigNumber, BigNumber":AG,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():l(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():d(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):c(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):d(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(n(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,n(t)).valueOf()}})}));function JZ(e){var{DenseMatrix:t}=e;return function(e,n,r){var a=e.size();if(2!==a.length)throw new RangeError("Matrix must be two dimensional (size: "+gV(a)+")");var i=a[0];if(i!==a[1])throw new RangeError("Matrix must be square (size: "+gV(a)+")");var s=[];if(pU(n)){var o=n.size(),u=n._data;if(1===o.length){if(o[0]!==i)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var c=0;c<i;c++)s[c]=[u[c]];return new t({data:s,size:[i,1],datatype:n._datatype})}if(2===o.length){if(o[0]!==i||1!==o[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(hU(n)){if(r){s=[];for(var l=0;l<i;l++)s[l]=[u[l][0]];return new t({data:s,size:[i,1],datatype:n._datatype})}return n}if(fU(n)){for(var p=0;p<i;p++)s[p]=[0];for(var d=n._values,h=n._index,f=n._ptr,m=f[1],g=f[0];g<m;g++)s[h[g]][0]=d[g];return new t({data:s,size:[i,1],datatype:n._datatype})}}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")}if(lU(n)){var y=SV(n);if(1===y.length){if(y[0]!==i)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var x=0;x<i;x++)s[x]=[n[x]];return new t({data:s,size:[i,1]})}if(2===y.length){if(y[0]!==i||1!==y[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var b=0;b<i;b++)s[b]=[n[b][0]];return new t({data:s,size:[i,1]})}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")}}}var QZ="lsolve",eY=iq(QZ,["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,divideScalar:r,multiplyScalar:a,subtract:i,equalScalar:s,DenseMatrix:o}=e,u=JZ({DenseMatrix:o});return t(QZ,{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=(t=u(e,t,!0))._data,c=e._size[0],l=e._size[1],p=e._values,d=e._index,h=e._ptr,f=[],m=0;m<l;m++){var g=n[m][0]||0;if(s(g,0))f[m]=[0];else{for(var y=0,x=[],b=[],v=h[m],w=h[m+1],N=v;N<w;N++){var S=d[N];S===m?y=p[N]:S>m&&(x.push(p[N]),b.push(S))}if(s(y,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var k=r(g,y),I=0,E=b.length;I<E;I++){var C=b[I];n[C]=[i(n[C][0]||0,a(k,x[I]))]}f[m]=[k]}}return new o({data:f,size:[c,1]})}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return c(e,t)},"Array, Array | Matrix":function(e,t){return c(n(e),t).valueOf()}});function c(e,t){for(var n=(t=u(e,t,!0))._data,c=e._size[0],l=e._size[1],p=[],d=e._data,h=0;h<l;h++){var f=n[h][0]||0,m=void 0;if(s(f,0))m=0;else{var g=d[h][h];if(s(g,0))throw new Error("Linear system cannot be solved since matrix is singular");m=r(f,g);for(var y=h+1;y<c;y++)n[y]=[i(n[y][0]||0,a(m,d[y][h]))]}p[h]=[m]}return new o({data:p,size:[c,1]})}})),tY="matrixFromColumns",nY=iq(tY,["typed","matrix","flatten","size"],(e=>{var{typed:t,matrix:n,flatten:r,size:a}=e;return t(tY,{"...Array":function(e){return i(e)},"...Matrix":function(e){return n(i(e.map((e=>e.toArray()))))}});function i(e){if(0===e.length)throw new TypeError("At least one column is needed to construct a matrix.");for(var t=s(e[0]),n=[],a=0;a<t;a++)n[a]=[];for(var i of e){var o=s(i);if(o!==t)throw new TypeError("The vectors had different length: "+(0|t)+" ≠ "+(0|o));for(var u=r(i),c=0;c<t;c++)n[c].push(u[c])}return n}function s(e){var t=a(e);if(1===t.length)return t[0];if(2===t.length){if(1===t[0])return t[1];if(1===t[1])return t[0];throw new TypeError("At least one of the arguments is not a vector.")}throw new TypeError("Only one- or two-dimensional vectors are supported.")}})),rY=iq("min",["typed","config","numeric","smaller"],(e=>{var{typed:t,config:n,numeric:r,smaller:a}=e;return t("min",{"Array | Matrix":s,"Array | Matrix, number | BigNumber":function(e,t){return mj(e,t.valueOf(),i)},"...":function(e){if(dj(e))throw new TypeError("Scalar values expected in function min");return s(e)}});function i(e,t){try{return a(e,t)?e:t}catch(e){throw _X(e,"min",t)}}function s(e){var t;if(hj(e,(function(e){try{isNaN(e)&&"number"==typeof e?t=NaN:(void 0===t||a(e,t))&&(t=e)}catch(t){throw _X(t,"min",e)}})),void 0===t)throw new Error("Cannot calculate min of an empty array");return"string"==typeof t&&(t=r(t,n.number)),t}})),aY="mode",iY=iq(aY,["typed","isNaN","isNumeric"],(e=>{var{typed:t,isNaN:n,isNumeric:r}=e;return t(aY,{"Array | Matrix":a,"...":function(e){return a(e)}});function a(e){if(0===(e=FV(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");for(var t={},a=[],i=0,s=0;s<e.length;s++){var o=e[s];if(r(o)&&n(o))throw new Error("Cannot calculate mode of an array containing NaN values");o in t||(t[o]=0),t[o]++,t[o]===i?a.push(o):t[o]>i&&(i=t[o],a=[o])}return a}})),sY="nthRoots",oY=iq(sY,["config","typed","divideScalar","Complex"],(e=>{var{typed:t,config:n,divideScalar:r,Complex:a}=e,i=[function(e){return new a(e,0)},function(e){return new a(0,e)},function(e){return new a(-e,0)},function(e){return new a(0,-e)}];function s(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");if(0===e||0===e.abs())return[new a(0,0)];var n,r="number"==typeof e;(r||0===e.re||0===e.im)&&(n=r?2*+(e<0):0===e.im?2*+(e.re<0):2*+(e.im<0)+1);for(var s=e.arg(),o=e.abs(),u=[],c=Math.pow(o,1/t),l=0;l<t;l++){var p=(n+4*l)/t;p!==Math.round(p)?u.push(new a({r:c,phi:(s+2*Math.PI*l)/t})):u.push(i[p%4](c))}return u}return t(sY,{Complex:function(e){return s(e,2)},"Complex, number":s})})),uY=iq("ones",["typed","config","matrix","BigNumber"],(e=>{var{typed:t,config:n,matrix:r,BigNumber:a}=e;return t("ones",{"":function(){return"Array"===n.matrix?i([]):i([],"default")},"...number | BigNumber | string":function(e){if("string"==typeof e[e.length-1]){var t=e.pop();return i(e,t)}return"Array"===n.matrix?i(e):i(e,"default")},Array:i,Matrix:function(e){var t=e.storage();return i(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return i(e.valueOf(),t)}});function i(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){iU(e)&&(t=!0,r[n]=e.toNumber())})),t}(e),i=n?new a(1):1;if(function(e){e.forEach((function(e){if("number"!=typeof e||!lq(e)||e<0)throw new Error("Parameters in function ones must be positive integers")}))}(e),t){var s=r(t);return e.length>0?s.resize(e,i):s}var o=[];return e.length>0?CV(o,e,i):o}})),cY="partitionSelect",lY=iq(cY,["typed","isNumeric","isNaN","compare"],(e=>{var{typed:t,isNumeric:n,isNaN:r,compare:a}=e,i=a,s=(e,t)=>-a(e,t);return t(cY,{"Array | Matrix, number":function(e,t){return o(e,t,i)},"Array | Matrix, number, string":function(e,t,n){if("asc"===n)return o(e,t,i);if("desc"===n)return o(e,t,s);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":o});function o(e,t,n){if(!lq(t)||t<0)throw new Error("k must be a non-negative integer");if(pU(e)){if(e.size().length>1)throw new Error("Only one dimensional matrices supported");return u(e.valueOf(),t,n)}if(Array.isArray(e))return u(e,t,n)}function u(e,t,a){if(t>=e.length)throw new Error("k out of bounds");for(var i=0;i<e.length;i++)if(n(e[i])&&r(e[i]))return e[i];for(var s=0,o=e.length-1;s<o;){for(var u=s,c=o,l=e[Math.floor(Math.random()*(o-s+1))+s];u<c;)if(a(e[u],l)>=0){var p=e[c];e[c]=e[u],e[u]=p,--c}else++u;a(e[u],l)>0&&--u,t<=u?o=u:s=u+1}return e[t]}}));function pY(e,t,n,r){if(!(this instanceof pY))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=r,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=r?"-"+r:"")+" expected)",this.stack=(new Error).stack}pY.prototype=new Error,pY.prototype.constructor=Error,pY.prototype.name="ArgumentsError",pY.prototype.isArgumentsError=!0;var dY=iq("resize",["config","matrix"],(e=>{var{config:t,matrix:n}=e;return function(e,a,i){if(2!==arguments.length&&3!==arguments.length)throw new pY("resize",arguments.length,2,3);if(pU(a)&&(a=a.valueOf()),iU(a[0])&&(a=a.map((function(e){return iU(e)?e.toNumber():e}))),pU(e))return e.resize(a,i,!0);if("string"==typeof e)return r(e,a,i);var s=!Array.isArray(e)&&"Array"!==t.matrix;if(0===a.length){for(;Array.isArray(e);)e=e[0];return WU(e)}Array.isArray(e)||(e=[e]);var o=CV(e=WU(e),a,i);return s?n(o):o};function r(e,t,n){if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";if(1!==t.length)throw new wV(t.length,1);var r=t[0];if("number"!=typeof r||!lq(r))throw new TypeError("Invalid size, must contain positive integers (size: "+gV(t)+")");if(e.length>r)return e.substring(0,r);if(e.length<r){for(var a=e,i=0,s=r-e.length;i<s;i++)a+=n;return a}return e}})),hY="rightLogShift",fY=iq(hY,["typed","matrix","equalScalar","zeros","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,DenseMatrix:i}=e,s=EX({typed:t}),o=xX({typed:t,equalScalar:r}),u=XZ({typed:t,equalScalar:r}),c=QX({typed:t,DenseMatrix:i}),l=wX({typed:t,equalScalar:r}),p=SX({typed:t}),d=kX({typed:t});return t(hY,{"number, number":LG,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():l(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():d(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):c(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):d(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(n(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,n(t)).valueOf()}})}));function mY(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function gY(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function yY(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?gY(Object(n),!0).forEach((function(t){mY(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):gY(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var xY="Number of decimals in function round must be an integer",bY="round",vY=iq(bY,["typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,BigNumber:i,DenseMatrix:s}=e,o=wX({typed:t,equalScalar:r}),u=NX({typed:t,DenseMatrix:s}),c=kX({typed:t});return t(bY,yY(yY({},wY),{},{Complex:function(e){return e.round()},"Complex, number":function(e,t){if(t%1)throw new TypeError(xY);return e.round(t)},"Complex, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(xY);var n=t.toNumber();return e.round(n)},"number, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(xY);return new i(e).toDecimalPlaces(t.toNumber())},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(xY);return e.toDecimalPlaces(t.toNumber())},Fraction:function(e){return e.round()},"Fraction, number":function(e,t){if(t%1)throw new TypeError(xY);return e.round(t)},"Array | Matrix":function(e){return fj(e,this,!0)},"SparseMatrix, number | BigNumber":function(e,t){return o(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"number | Complex | BigNumber, SparseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):u(t,e,this,!0)},"number | Complex | BigNumber, DenseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):c(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return c(n(e),t,this,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}}))})),wY={number:Uj,"number, number":function(e,t){if(!lq(t))throw new TypeError(xY);if(t<0||t>15)throw new Error("Number of decimals in function round must be in the range of 0-15");return Uj(e,t)}},NY="smallerEq",SY=iq(NY,["typed","config","matrix","DenseMatrix"],(e=>{var{typed:t,config:n,matrix:r,DenseMatrix:a}=e,i=bX({typed:t}),s=qX({typed:t,DenseMatrix:a}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(NY,{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,t){return e<=t||Iq(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)||oH(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(r(t),e,this,!0).valueOf()}})})),kY="unequal",IY=iq(kY,["typed","config","equalScalar","matrix","DenseMatrix"],(e=>{var{typed:t,config:n,equalScalar:r,matrix:a,DenseMatrix:i}=e,s=bX({typed:t}),o=qX({typed:t,DenseMatrix:i}),u=NX({typed:t,DenseMatrix:i}),c=SX({typed:t}),l=kX({typed:t});return t("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:p(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,p)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,p,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,p,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,p)},"Array, Array":function(e,t){return this(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return this(a(e),t)},"Matrix, Array":function(e,t){return this(e,a(t))},"SparseMatrix, any":function(e,t){return u(e,t,p,!1)},"DenseMatrix, any":function(e,t){return l(e,t,p,!1)},"any, SparseMatrix":function(e,t){return u(t,e,p,!0)},"any, DenseMatrix":function(e,t){return l(t,e,p,!0)},"Array, any":function(e,t){return l(a(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(a(t),e,p,!0).valueOf()}});function p(e,t){return!r(e,t)}})),EY=(iq(kY,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(kY,{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:!n(e,t)}})})),"usolve"),CY=iq(EY,["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,divideScalar:r,multiplyScalar:a,subtract:i,equalScalar:s,DenseMatrix:o}=e,u=JZ({DenseMatrix:o});return t(EY,{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=(t=u(e,t,!0))._data,c=e._size[0],l=e._size[1],p=e._values,d=e._index,h=e._ptr,f=[],m=l-1;m>=0;m--){var g=n[m][0]||0;if(s(g,0))f[m]=[0];else{for(var y=0,x=[],b=[],v=h[m],w=h[m+1]-1;w>=v;w--){var N=d[w];N===m?y=p[w]:N<m&&(x.push(p[w]),b.push(N))}if(s(y,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var S=r(g,y),k=0,I=b.length;k<I;k++){var E=b[k];n[E]=[i(n[E][0],a(S,x[k]))]}f[m]=[S]}}return new o({data:f,size:[c,1]})}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return c(e,t)},"Array, Array | Matrix":function(e,t){return c(n(e),t).valueOf()}});function c(e,t){for(var n=(t=u(e,t,!0))._data,c=e._size[0],l=e._size[1],p=[],d=e._data,h=l-1;h>=0;h--){var f=n[h][0]||0,m=void 0;if(s(f,0))m=0;else{var g=d[h][h];if(s(g,0))throw new Error("Linear system cannot be solved since matrix is singular");m=r(f,g);for(var y=h-1;y>=0;y--)n[y]=[i(n[y][0]||0,a(m,d[y][h]))]}p[h]=[m]}return new o({data:p,size:[c,1]})}})),TY=iq("xor",["typed","matrix","DenseMatrix"],(e=>{var{typed:t,matrix:n,DenseMatrix:r}=e,a=bX({typed:t}),i=qX({typed:t,DenseMatrix:r}),s=NX({typed:t,DenseMatrix:r}),o=SX({typed:t}),u=kX({typed:t});return t("xor",{"number, number":QH,"Complex, Complex":function(e,t){return(0!==e.re||0!==e.im)!=(0!==t.re||0!==t.im)},"BigNumber, BigNumber":function(e,t){return(!e.isZero()&&!e.isNaN())!=(!t.isZero()&&!t.isNaN())},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return i(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return o(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,this,!1)},"DenseMatrix, any":function(e,t){return u(e,t,this,!1)},"any, SparseMatrix":function(e,t){return s(t,e,this,!0)},"any, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, any":function(e,t){return u(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,this,!0).valueOf()}})})),DY=iq("add",["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix"],(e=>{var{typed:t,matrix:n,addScalar:r,equalScalar:a,DenseMatrix:i,SparseMatrix:s}=e,o=EX({typed:t}),u=zZ({typed:t,equalScalar:a}),c=QX({typed:t,DenseMatrix:i}),l=SX({typed:t}),p=kX({typed:t});return t("add",jU({"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,r)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,r,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,r,!0)},"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,r)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"DenseMatrix, any":function(e,t){return p(e,t,r,!1)},"SparseMatrix, any":function(e,t){return c(e,t,r,!1)},"any, DenseMatrix":function(e,t){return p(t,e,r,!0)},"any, SparseMatrix":function(e,t){return c(t,e,r,!0)},"Array, any":function(e,t){return p(n(e),t,r,!1).valueOf()},"any, Array":function(e,t){return p(n(t),e,r,!0).valueOf()},"any, any":r,"any, any, ...any":function(e,t,n){for(var r=this(e,t),a=0;a<n.length;a++)r=this(r,n[a]);return r}},r.signatures))})),AY=iq("algorithm09",["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return function(e,r,a){var i=e._values,s=e._index,o=e._ptr,u=e._size,c=e._datatype,l=r._values,p=r._index,d=r._ptr,h=r._size,f=r._datatype;if(u.length!==h.length)throw new wV(u.length,h.length);if(u[0]!==h[0]||u[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+h+")");var m,g=u[0],y=u[1],x=n,b=0,v=a;"string"==typeof c&&c===f&&(m=c,x=t.find(n,[m,m]),b=t.convert(0,m),v=t.find(a,[m,m]));var w,N,S,k,I,E=i&&l?[]:void 0,C=[],T=[],D=E?[]:void 0,A=[];for(N=0;N<y;N++){T[N]=C.length;var M=N+1;if(D)for(k=d[N],I=d[N+1],S=k;S<I;S++)A[w=p[S]]=M,D[w]=l[S];for(k=o[N],I=o[N+1],S=k;S<I;S++)if(w=s[S],D){var $=A[w]===M?D[w]:b,O=v(i[S],$);x(O,b)||(C.push(w),E.push(O))}else C.push(w)}return T[y]=C.length,e.createSparseMatrix({values:E,index:C,ptr:T,size:[g,y],datatype:m})}})),MY="atan2",$Y=iq(MY,["typed","matrix","equalScalar","BigNumber","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,BigNumber:a,DenseMatrix:i}=e,s=xX({typed:t,equalScalar:r}),o=bX({typed:t}),u=AY({typed:t,equalScalar:r}),c=wX({typed:t,equalScalar:r}),l=NX({typed:t,DenseMatrix:i}),p=SX({typed:t}),d=kX({typed:t});return t(MY,{"number, number":Math.atan2,"BigNumber, BigNumber":function(e,t){return a.atan2(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return d(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return l(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return d(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return d(n(t),e,this,!0).valueOf()}})})),OY="bitOr",RY=iq(OY,["typed","matrix","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a}=e,i=EX({typed:t}),s=zZ({typed:t,equalScalar:r}),o=QX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(OY,{"number, number":_G,"BigNumber, BigNumber":EG,"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}})})),_Y="catalan",FY=iq(_Y,["typed","addScalar","divideScalar","multiplyScalar","combinations","isNegative","isInteger"],(e=>{var{typed:t,addScalar:n,divideScalar:r,multiplyScalar:a,combinations:i,isNegative:s,isInteger:o}=e;return t(_Y,{"number | BigNumber":function(e){if(!o(e)||s(e))throw new TypeError("Non-negative integer value expected in function catalan");return r(i(a(e,2),e),n(e,1))}})})),zY=n(228),BY="compareNatural",LY=iq(BY,["typed","compare"],(e=>{var{typed:t,compare:n}=e,r=n.signatures["boolean,boolean"];return t(BY,{"any, any":function(e,t){var s,o=qU(e),u=qU(t);if(!("number"!==o&&"BigNumber"!==o&&"Fraction"!==o||"number"!==u&&"BigNumber"!==u&&"Fraction"!==u))return"0"!==(s=n(e,t)).toString()?s>0?1:-1:zY(o,u);if("Array"===o||"Matrix"===o||"Array"===u||"Matrix"===u)return 0!==(s=a(this,e,t))?s:zY(o,u);if(o!==u)return zY(o,u);if("Complex"===o)return function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0}(e,t);if("Unit"===o)return e.equalBase(t)?this(e.value,t.value):i(this,e.formatUnits(),t.formatUnits());if("boolean"===o)return r(e,t);if("string"===o)return zY(e,t);if("Object"===o)return function(e,t,n){var r=Object.keys(t),a=Object.keys(n);r.sort(zY),a.sort(zY);var s=i(e,r,a);if(0!==s)return s;for(var o=0;o<r.length;o++){var u=e(t[r[o]],n[a[o]]);if(0!==u)return u}return 0}(this,e,t);if("null"===o)return 0;if("undefined"===o)return 0;throw new TypeError('Unsupported type of value "'+o+'"')}});function a(e,t,n){return fU(t)&&fU(n)?i(e,t.toJSON().values,n.toJSON().values):fU(t)?a(e,t.toArray(),n):fU(n)?a(e,t,n.toArray()):hU(t)?a(e,t.toJSON().data,n):hU(n)?a(e,t,n.toJSON().data):Array.isArray(t)?Array.isArray(n)?i(e,t,n):a(e,t,[n]):a(e,[t],n)}function i(e,t,n){for(var r=0,a=Math.min(t.length,n.length);r<a;r++){var i=e(t[r],n[r]);if(0!==i)return i}return t.length>n.length?1:t.length<n.length?-1:0}})),PY="deepEqual",UY=iq(PY,["typed","equal"],(e=>{var{typed:t,equal:n}=e;return t(PY,{"any, any":function(e,t){return r(e.valueOf(),t.valueOf())}});function r(e,t){if(Array.isArray(e)){if(Array.isArray(t)){var a=e.length;if(a!==t.length)return!1;for(var i=0;i<a;i++)if(!r(e[i],t[i]))return!1;return!0}return!1}return!Array.isArray(t)&&n(e,t)}})),qY="diff",WY=iq(qY,["typed","matrix","subtract","number"],(e=>{var{typed:t,matrix:n,subtract:r,number:a}=e;return t(qY,{"Array | Matrix":function(e){return pU(e)?n(s(e.toArray())):s(e)},"Array | Matrix, number":function(e,t){if(!lq(t))throw new RangeError("Dimension must be a whole number");return pU(e)?n(i(e.toArray(),t)):i(e,t)},"Array | Matrix, BigNumber":function(e,t){return this(e,a(t))}});function i(e,t){if(pU(e)&&(e=e.toArray()),!Array.isArray(e))throw RangeError("Array/Matrix does not have that many dimensions");if(t>0){var n=[];return e.forEach((e=>{n.push(i(e,t-1))})),n}if(0===t)return s(e);throw RangeError("Cannot have negative dimension")}function s(e){var t=[],n=e.length;if(n<2)return e;for(var r=1;r<n;r++)t.push(o(e[r-1],e[r]));return t}function o(e,t){pU(e)&&(e=e.toArray()),pU(t)&&(t=t.toArray());var n=Array.isArray(e),a=Array.isArray(t);if(n&&a)return function(e,t){if(e.length!==t.length)throw RangeError("Not all sub-arrays have the same length");for(var n=[],r=e.length,a=0;a<r;a++)n.push(o(e[a],t[a]));return n}(e,t);if(!n&&!a)return r(t,e);throw TypeError("Cannot calculate difference between 1 array and 1 non-array")}})),VY=iq("dot",["typed","addScalar","multiplyScalar","conj","size"],(e=>{var{typed:t,addScalar:n,multiplyScalar:r,conj:a,size:i}=e;return t("dot",{"Array | DenseMatrix, Array | DenseMatrix":function(e,i){var u=s(e,i),c=pU(e)?e._data:e,l=pU(e)?e._datatype:void 0,p=pU(i)?i._data:i,d=pU(i)?i._datatype:void 0,h=2===o(e).length,f=2===o(i).length,m=n,g=r;if(l&&d&&l===d&&"string"==typeof l){var y=l;m=t.find(n,[y,y]),g=t.find(r,[y,y])}if(!h&&!f){for(var x=g(a(c[0]),p[0]),b=1;b<u;b++)x=m(x,g(a(c[b]),p[b]));return x}if(!h&&f){for(var v=g(a(c[0]),p[0][0]),w=1;w<u;w++)v=m(v,g(a(c[w]),p[w][0]));return v}if(h&&!f){for(var N=g(a(c[0][0]),p[0]),S=1;S<u;S++)N=m(N,g(a(c[S][0]),p[S]));return N}if(h&&f){for(var k=g(a(c[0][0]),p[0][0]),I=1;I<u;I++)k=m(k,g(a(c[I][0]),p[I][0]));return k}},"SparseMatrix, SparseMatrix":function(e,t){s(e,t);for(var a=e._index,i=e._values,o=t._index,u=t._values,c=0,l=n,p=r,d=0,h=0;d<a.length&&h<o.length;){var f=a[d],m=o[h];f<m?d++:f>m?h++:f===m&&(c=l(c,p(i[d],u[h])),d++,h++)}return c}});function s(e,t){var n,r,a=o(e),i=o(t);if(1===a.length)n=a[0];else{if(2!==a.length||1!==a[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+a.join(", ")+")");n=a[0]}if(1===i.length)r=i[0];else{if(2!==i.length||1!==i[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+i.join(", ")+")");r=i[0]}if(n!==r)throw new RangeError("Vectors must have equal length ("+n+" != "+r+")");if(0===n)throw new RangeError("Cannot calculate the dot product of empty vectors");return n}function o(e){return pU(e)?e.size():i(e)}})),jY="equalText",GY=iq(jY,["typed","compareText","isZero"],(e=>{var{typed:t,compareText:n,isZero:r}=e;return t(jY,{"any, any":function(e,t){return r(n(e,t))}})})),HY=iq("floor",["typed","config","round","matrix","equalScalar"],(e=>{var{typed:t,config:n,round:r,matrix:a,equalScalar:i}=e,s=wX({typed:t,equalScalar:i}),o=kX({typed:t});return t("floor",{number:function(e){return Iq(e,r(e),n.epsilon)?r(e):Math.floor(e)},"number, number":function(e,t){if(Iq(e,r(e,t),n.epsilon))return r(e,t);var[a,i]="".concat(e,"e").split("e"),s=Math.floor(Number("".concat(a,"e").concat(Number(i)+t)));return[a,i]="".concat(s,"e").split("e"),Number("".concat(a,"e").concat(Number(i)-t))},Complex:function(e){return e.floor()},"Complex, number":function(e,t){return e.floor(t)},BigNumber:function(e){return oH(e,r(e),n.epsilon)?r(e):e.floor()},"BigNumber, BigNumber":function(e,t){return oH(e,r(e,t),n.epsilon)?r(e,t):e.toDecimalPlaces(t.toNumber(),aq.ROUND_FLOOR)},Fraction:function(e){return e.floor()},"Fraction, number":function(e,t){return e.floor(t)},"Array | Matrix":function(e){return fj(e,this,!0)},"Array | Matrix, number":function(e,t){return fj(e,(e=>this(e,t)),!0)},"SparseMatrix, number | BigNumber":function(e,t){return s(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return o(e,t,this,!1)},"number | Complex | BigNumber, Array":function(e,t){return o(a(t),e,this,!0).valueOf()}})})),KY="identity",XY=iq(KY,["typed","config","matrix","BigNumber","DenseMatrix","SparseMatrix"],(e=>{var{typed:t,config:n,matrix:r,BigNumber:a,DenseMatrix:i,SparseMatrix:s}=e;return t(KY,{"":function(){return"Matrix"===n.matrix?r([]):[]},string:function(e){return r(e)},"number | BigNumber":function(e){return u(e,e,"Matrix"===n.matrix?"dense":void 0)},"number | BigNumber, string":function(e,t){return u(e,e,t)},"number | BigNumber, number | BigNumber":function(e,t){return u(e,t,"Matrix"===n.matrix?"dense":void 0)},"number | BigNumber, number | BigNumber, string":function(e,t,n){return u(e,t,n)},Array:function(e){return o(e)},"Array, string":function(e,t){return o(e,t)},Matrix:function(e){return o(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return o(e.valueOf(),t)}});function o(e,t){switch(e.length){case 0:return t?r(t):[];case 1:return u(e[0],e[0],t);case 2:return u(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function u(e,t,n){var r=iU(e)||iU(t)?a:null;if(iU(e)&&(e=e.toNumber()),iU(t)&&(t=t.toNumber()),!lq(e)||e<1)throw new Error("Parameters in function identity must be positive integers");if(!lq(t)||t<1)throw new Error("Parameters in function identity must be positive integers");var o=r?new a(1):1,u=r?new r(0):0,c=[e,t];if(n){if("sparse"===n)return s.diagonal(c,o,0,u);if("dense"===n)return i.diagonal(c,o,0,u);throw new TypeError('Unknown matrix type "'.concat(n,'"'))}for(var l=CV([],c,u),p=e<t?e:t,d=0;d<p;d++)l[d][d]=o;return l}})),ZY="invmod",YY=iq(ZY,["typed","config","BigNumber","xgcd","equal","smaller","mod","add","isInteger"],(e=>{var{typed:t,config:n,BigNumber:r,xgcd:a,equal:i,smaller:s,mod:o,add:u,isInteger:c}=e;return t(ZY,{"number, number":l,"BigNumber, BigNumber":l});function l(e,t){if(!c(e)||!c(t))throw new Error("Parameters in function invmod must be integer numbers");if(e=o(e,t),i(t,0))throw new Error("Divisor must be non zero");var n=a(e,t);n=n.valueOf();var[l,p]=n;return i(l,r(1))?(p=o(p,t),s(p,r(0))&&(p=u(p,t)),p):NaN}})),JY="larger",QY=iq(JY,["typed","config","matrix","DenseMatrix"],(e=>{var{typed:t,config:n,matrix:r,DenseMatrix:a}=e,i=bX({typed:t}),s=qX({typed:t,DenseMatrix:a}),o=NX({typed:t,DenseMatrix:a}),u=SX({typed:t}),c=kX({typed:t});return t(JY,{"boolean, boolean":function(e,t){return e>t},"number, number":function(e,t){return e>t&&!Iq(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)&&!oH(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(r(t),e,this,!0).valueOf()}})})),eJ=iq("log",["config","typed","divideScalar","Complex"],(e=>{var{typed:t,config:n,divideScalar:r,Complex:a}=e;return t("log",{number:function(e){return e>=0||n.predictable?$j(e):new a(e,0).log()},Complex:function(e){return e.log()},BigNumber:function(e){return!e.isNegative()||n.predictable?e.ln():new a(e.toNumber(),0).log()},"Array | Matrix":function(e){return fj(e,this)},"any, any":function(e,t){return r(this(e),this(t))}})})),tJ="lsolveAll",nJ=iq(tJ,["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,divideScalar:r,multiplyScalar:a,subtract:i,equalScalar:s,DenseMatrix:o}=e,u=JZ({DenseMatrix:o});return t(tJ,{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=[u(e,t,!0)._data.map((e=>e[0]))],c=e._size[0],l=e._size[1],p=e._values,d=e._index,h=e._ptr,f=0;f<l;f++)for(var m=n.length,g=0;g<m;g++){for(var y=n[g],x=[],b=[],v=h[f],w=h[f+1],N=0,S=v;S<w;S++){var k=d[S];k===f?N=p[S]:k>f&&(x.push(p[S]),b.push(k))}if(s(N,0))if(s(y[f],0)){if(0===g){var I=[...y];I[f]=1;for(var E=0,C=b.length;E<C;E++){var T=b[E];I[T]=i(I[T],x[E])}n.push(I)}}else{if(0===g)return[];n.splice(g,1),g-=1,m-=1}else{y[f]=r(y[f],N);for(var D=0,A=b.length;D<A;D++){var M=b[D];y[M]=i(y[M],a(y[f],x[D]))}}}return n.map((e=>new o({data:e.map((e=>[e])),size:[c,1]})))}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return c(e,t)},"Array, Array | Matrix":function(e,t){return c(n(e),t).map((e=>e.valueOf()))}});function c(e,t){for(var n=[u(e,t,!0)._data.map((e=>e[0]))],c=e._data,l=e._size[0],p=e._size[1],d=0;d<p;d++)for(var h=n.length,f=0;f<h;f++){var m=n[f];if(s(c[d][d],0))if(s(m[d],0)){if(0===f){var g=[...m];g[d]=1;for(var y=d+1;y<p;y++)g[y]=i(g[y],c[y][d]);n.push(g)}}else{if(0===f)return[];n.splice(f,1),f-=1,h-=1}else{m[d]=r(m[d],c[d][d]);for(var x=d+1;x<p;x++)m[x]=i(m[x],a(m[d],c[x][d]))}}return n.map((e=>new o({data:e.map((e=>[e])),size:[l,1]})))}})),rJ="matrixFromRows",aJ=iq(rJ,["typed","matrix","flatten","size"],(e=>{var{typed:t,matrix:n,flatten:r,size:a}=e;return t(rJ,{"...Array":function(e){return i(e)},"...Matrix":function(e){return n(i(e.map((e=>e.toArray()))))}});function i(e){if(0===e.length)throw new TypeError("At least one row is needed to construct a matrix.");var t=s(e[0]),n=[];for(var a of e){var i=s(a);if(i!==t)throw new TypeError("The vectors had different length: "+(0|t)+" ≠ "+(0|i));n.push(r(a))}return n}function s(e){var t=a(e);if(1===t.length)return t[0];if(2===t.length){if(1===t[0])return t[1];if(1===t[1])return t[0];throw new TypeError("At least one of the arguments is not a vector.")}throw new TypeError("Only one- or two-dimensional vectors are supported.")}})),iJ="multiply",sJ=iq(iJ,["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],(e=>{var{typed:t,matrix:n,addScalar:r,multiplyScalar:a,equalScalar:i,dot:s}=e,o=wX({typed:t,equalScalar:i}),u=kX({typed:t});function c(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}}var l=t("_multiplyMatrixVector",{"DenseMatrix, any":function(e,n){var i,s=e._data,o=e._size,u=e._datatype,c=n._data,l=n._datatype,p=o[0],d=o[1],h=r,f=a;u&&l&&u===l&&"string"==typeof u&&(i=u,h=t.find(r,[i,i]),f=t.find(a,[i,i]));for(var m=[],g=0;g<p;g++){for(var y=s[g],x=f(y[0],c[0]),b=1;b<d;b++)x=h(x,f(y[b],c[b]));m[g]=x}return e.createDenseMatrix({data:m,size:[p],datatype:i})},"SparseMatrix, any":function(e,n){var s=e._values,o=e._index,u=e._ptr,c=e._datatype;if(!s)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var l,p=n._data,d=n._datatype,h=e._size[0],f=n._size[0],m=[],g=[],y=[],x=r,b=a,v=i,w=0;c&&d&&c===d&&"string"==typeof c&&(l=c,x=t.find(r,[l,l]),b=t.find(a,[l,l]),v=t.find(i,[l,l]),w=t.convert(0,l));var N=[],S=[];y[0]=0;for(var k=0;k<f;k++){var I=p[k];if(!v(I,w))for(var E=u[k],C=u[k+1],T=E;T<C;T++){var D=o[T];S[D]?N[D]=x(N[D],b(I,s[T])):(S[D]=!0,g.push(D),N[D]=b(I,s[T]))}}for(var A=g.length,M=0;M<A;M++){var $=g[M];m[M]=N[$]}return y[1]=g.length,e.createSparseMatrix({values:m,index:g,ptr:y,size:[h,1],datatype:l})}}),p=t("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":function(e,n){var i,s=e._data,o=e._size,u=e._datatype,c=n._data,l=n._size,p=n._datatype,d=o[0],h=o[1],f=l[1],m=r,g=a;u&&p&&u===p&&"string"==typeof u&&(i=u,m=t.find(r,[i,i]),g=t.find(a,[i,i]));for(var y=[],x=0;x<d;x++){var b=s[x];y[x]=[];for(var v=0;v<f;v++){for(var w=g(b[0],c[0][v]),N=1;N<h;N++)w=m(w,g(b[N],c[N][v]));y[x][v]=w}}return e.createDenseMatrix({data:y,size:[d,f],datatype:i})},"DenseMatrix, SparseMatrix":function(e,n){var s=e._data,o=e._size,u=e._datatype,c=n._values,l=n._index,p=n._ptr,d=n._size,h=n._datatype;if(!c)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var f,m=o[0],g=d[1],y=r,x=a,b=i,v=0;u&&h&&u===h&&"string"==typeof u&&(f=u,y=t.find(r,[f,f]),x=t.find(a,[f,f]),b=t.find(i,[f,f]),v=t.convert(0,f));for(var w=[],N=[],S=[],k=n.createSparseMatrix({values:w,index:N,ptr:S,size:[m,g],datatype:f}),I=0;I<g;I++){S[I]=N.length;var E=p[I],C=p[I+1];if(C>E)for(var T=0,D=0;D<m;D++){for(var A=D+1,M=void 0,$=E;$<C;$++){var O=l[$];T!==A?(M=x(s[D][O],c[$]),T=A):M=y(M,x(s[D][O],c[$]))}T!==A||b(M,v)||(N.push(D),w.push(M))}}return S[g]=N.length,k},"SparseMatrix, DenseMatrix":function(e,n){var s=e._values,o=e._index,u=e._ptr,c=e._datatype;if(!s)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var l,p=n._data,d=n._datatype,h=e._size[0],f=n._size[0],m=n._size[1],g=r,y=a,x=i,b=0;c&&d&&c===d&&"string"==typeof c&&(l=c,g=t.find(r,[l,l]),y=t.find(a,[l,l]),x=t.find(i,[l,l]),b=t.convert(0,l));for(var v=[],w=[],N=[],S=e.createSparseMatrix({values:v,index:w,ptr:N,size:[h,m],datatype:l}),k=[],I=[],E=0;E<m;E++){N[E]=w.length;for(var C=E+1,T=0;T<f;T++){var D=p[T][E];if(!x(D,b))for(var A=u[T],M=u[T+1],$=A;$<M;$++){var O=o[$];I[O]!==C?(I[O]=C,w.push(O),k[O]=y(D,s[$])):k[O]=g(k[O],y(D,s[$]))}}for(var R=N[E],_=w.length,F=R;F<_;F++){var z=w[F];v[F]=k[z]}}return N[m]=w.length,S},"SparseMatrix, SparseMatrix":function(e,n){var i,s=e._values,o=e._index,u=e._ptr,c=e._datatype,l=n._values,p=n._index,d=n._ptr,h=n._datatype,f=e._size[0],m=n._size[1],g=s&&l,y=r,x=a;c&&h&&c===h&&"string"==typeof c&&(i=c,y=t.find(r,[i,i]),x=t.find(a,[i,i]));for(var b,v,w,N,S,k,I,E,C=g?[]:void 0,T=[],D=[],A=e.createSparseMatrix({values:C,index:T,ptr:D,size:[f,m],datatype:i}),M=g?[]:void 0,$=[],O=0;O<m;O++){D[O]=T.length;var R=O+1;for(S=d[O],k=d[O+1],N=S;N<k;N++)if(E=p[N],g)for(v=u[E],w=u[E+1],b=v;b<w;b++)$[I=o[b]]!==R?($[I]=R,T.push(I),M[I]=x(l[N],s[b])):M[I]=y(M[I],x(l[N],s[b]));else for(v=u[E],w=u[E+1],b=v;b<w;b++)$[I=o[b]]!==R&&($[I]=R,T.push(I));if(g)for(var _=D[O],F=T.length,z=_;z<F;z++){var B=T[z];C[z]=M[B]}}return D[m]=T.length,A}});return t(iJ,jU({"Array, Array":function(e,t){c(SV(e),SV(t));var r=this(n(e),n(t));return pU(r)?r.valueOf():r},"Matrix, Matrix":function(e,n){var i=e.size(),o=n.size();return c(i,o),1===i.length?1===o.length?function(e,t,n){if(0===n)throw new Error("Cannot multiply two empty vectors");return s(e,t)}(e,n,i[0]):function(e,n){if("dense"!==n.storage())throw new Error("Support for SparseMatrix not implemented");return function(e,n){var i,s=e._data,o=e._size,u=e._datatype,c=n._data,l=n._size,p=n._datatype,d=o[0],h=l[1],f=r,m=a;u&&p&&u===p&&"string"==typeof u&&(i=u,f=t.find(r,[i,i]),m=t.find(a,[i,i]));for(var g=[],y=0;y<h;y++){for(var x=m(s[0],c[0][y]),b=1;b<d;b++)x=f(x,m(s[b],c[b][y]));g[y]=x}return e.createDenseMatrix({data:g,size:[h],datatype:i})}(e,n)}(e,n):1===o.length?l(e,n):p(e,n)},"Matrix, Array":function(e,t){return this(e,n(t))},"Array, Matrix":function(e,t){return this(n(e,t.storage()),t)},"SparseMatrix, any":function(e,t){return o(e,t,a,!1)},"DenseMatrix, any":function(e,t){return u(e,t,a,!1)},"any, SparseMatrix":function(e,t){return o(t,e,a,!0)},"any, DenseMatrix":function(e,t){return u(t,e,a,!0)},"Array, any":function(e,t){return u(n(e),t,a,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,a,!0).valueOf()},"any, any":a,"any, any, ...any":function(e,t,n){for(var r=this(e,t),a=0;a<n.length;a++)r=this(r,n[a]);return r}},a.signatures))})),oJ=iq("pow",["typed","config","identity","multiply","matrix","fraction","number","Complex"],(e=>{var{typed:t,config:n,identity:r,multiply:a,matrix:i,number:s,fraction:o,Complex:u}=e;return t("pow",{"number, number":c,"Complex, Complex":function(e,t){return e.pow(t)},"BigNumber, BigNumber":function(e,t){return t.isInteger()||e>=0||n.predictable?e.pow(t):new u(e.toNumber(),0).pow(t.toNumber(),0)},"Fraction, Fraction":function(e,t){var r=e.pow(t);if(null!=r)return r;if(n.predictable)throw new Error("Result of pow is non-rational and cannot be expressed as a fraction");return c(e.valueOf(),t.valueOf())},"Array, number":l,"Array, BigNumber":function(e,t){return l(e,t.toNumber())},"Matrix, number":p,"Matrix, BigNumber":function(e,t){return p(e,t.toNumber())},"Unit, number | BigNumber":function(e,t){return e.pow(t)}});function c(e,t){if(n.predictable&&!lq(t)&&e<0)try{var r=o(t),a=s(r);if((t===a||Math.abs((t-a)/t)<1e-14)&&r.d%2==1)return(r.n%2==0?1:-1)*Math.pow(-e,t)}catch(e){}return n.predictable&&(e<-1&&t===1/0||e>-1&&e<0&&t===-1/0)?NaN:lq(t)||e>=0||n.predictable?Pj(e,t):e*e<1&&t===1/0||e*e>1&&t===-1/0?0:new u(e,0).pow(t,0)}function l(e,t){if(!lq(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var n=SV(e);if(2!==n.length)throw new Error("For A^b, A must be 2 dimensional (A has "+n.length+" dimensions)");if(n[0]!==n[1])throw new Error("For A^b, A must be square (size is "+n[0]+"x"+n[1]+")");for(var i=r(n[0]).valueOf(),s=e;t>=1;)1==(1&t)&&(i=a(s,i)),t>>=1,s=a(s,s);return i}function p(e,t){return i(l(e.valueOf(),t))}})),uJ=iq("qr",["typed","matrix","zeros","identity","isZero","equal","sign","sqrt","conj","unaryMinus","addScalar","divideScalar","multiplyScalar","subtract","complex"],(e=>{var{typed:t,matrix:n,zeros:r,identity:a,isZero:i,equal:s,sign:o,sqrt:u,conj:c,unaryMinus:l,addScalar:p,divideScalar:d,multiplyScalar:h,subtract:f,complex:m}=e;return nU(t("qr",{DenseMatrix:function(e){return y(e)},SparseMatrix:function(e){return function(e){throw new Error("qr not implemented for sparse matrices yet")}()},Array:function(e){var t=y(n(e));return{Q:t.Q.valueOf(),R:t.R.valueOf()}}}),{_denseQRimpl:g});function g(e){var t,n,m,g=e._size[0],y=e._size[1],x=a([g],"dense"),b=x._data,v=e.clone(),w=v._data,N=r([g],"");for(m=0;m<Math.min(y,g);++m){var S=w[m][m],k=l(s(S,0)?1:o(S)),I=c(k),E=0;for(t=m;t<g;t++)E=p(E,h(w[t][m],c(w[t][m])));var C=h(k,u(E));if(!i(C)){var T=f(S,C);for(N[m]=1,t=m+1;t<g;t++)N[t]=d(w[t][m],T);var D=l(c(d(T,C))),A=void 0;for(n=m;n<y;n++){for(A=0,t=m;t<g;t++)A=p(A,h(c(N[t]),w[t][n]));for(A=h(A,D),t=m;t<g;t++)w[t][n]=h(f(w[t][n],h(N[t],A)),I)}for(t=0;t<g;t++){for(A=0,n=m;n<g;n++)A=p(A,h(b[t][n],N[n]));for(A=h(A,D),n=m;n<g;++n)b[t][n]=d(f(b[t][n],h(A,c(N[n]))),I)}}}return{Q:x,R:v,toString:function(){return"Q: "+this.Q.toString()+"\nR: "+this.R.toString()}}}function y(e){var t=g(e),n=t.R._data;if(e._data.length>0)for(var r="Complex"===n[0][0].type?m(0):0,a=0;a<n.length;++a)for(var i=0;i<a&&i<(n[0]||[]).length;++i)n[a][i]=r;return t}})),cJ="range",lJ=iq(cJ,["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],(e=>{var{typed:t,config:n,matrix:r,bignumber:a,smaller:i,smallerEq:s,larger:o,largerEq:u}=e;return t(cJ,{string:l,"string, boolean":l,"number, number":function(e,t){return c(p(e,t,1))},"number, number, number":function(e,t,n){return c(p(e,t,n))},"number, number, boolean":function(e,t,n){return c(n?d(e,t,1):p(e,t,1))},"number, number, number, boolean":function(e,t,n,r){return c(r?d(e,t,n):p(e,t,n))},"BigNumber, BigNumber":function(e,t){return c(h(e,t,new(0,e.constructor)(1)))},"BigNumber, BigNumber, BigNumber":function(e,t,n){return c(h(e,t,n))},"BigNumber, BigNumber, boolean":function(e,t,n){var r=e.constructor;return c(n?f(e,t,new r(1)):h(e,t,new r(1)))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,n,r){return c(r?f(e,t,n):h(e,t,n))}});function c(e){return"Matrix"===n.matrix?r?r(e):$X():e}function l(e,t){var r=function(e){var t=e.split(":").map((function(e){return Number(e)})),n=t.some((function(e){return isNaN(e)}));if(n)return null;switch(t.length){case 2:return{start:t[0],end:t[1],step:1};case 3:return{start:t[0],end:t[2],step:t[1]};default:return null}}(e);if(!r)throw new SyntaxError('String "'+e+'" is no valid range');return"BigNumber"===n.number?(void 0===a&&AX(),c((t?f:h)(a(r.start),a(r.end),a(r.step)))):c((t?d:p)(r.start,r.end,r.step))}function p(e,t,n){var r=[],a=e;if(n>0)for(;i(a,t);)r.push(a),a+=n;else if(n<0)for(;o(a,t);)r.push(a),a+=n;return r}function d(e,t,n){var r=[],a=e;if(n>0)for(;s(a,t);)r.push(a),a+=n;else if(n<0)for(;u(a,t);)r.push(a),a+=n;return r}function h(e,t,n){var r=a(0),s=[],u=e;if(n.gt(r))for(;i(u,t);)s.push(u),u=u.plus(n);else if(n.lt(r))for(;o(u,t);)s.push(u),u=u.plus(n);return s}function f(e,t,n){var r=a(0),i=[],o=e;if(n.gt(r))for(;s(o,t);)i.push(o),o=o.plus(n);else if(n.lt(r))for(;u(o,t);)i.push(o),o=o.plus(n);return i}})),pJ="rightArithShift",dJ=iq(pJ,["typed","matrix","equalScalar","zeros","DenseMatrix"],(e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,DenseMatrix:i}=e,s=EX({typed:t}),o=xX({typed:t,equalScalar:r}),u=XZ({typed:t,equalScalar:r}),c=QX({typed:t,DenseMatrix:i}),l=wX({typed:t,equalScalar:r}),p=SX({typed:t}),d=kX({typed:t});return t(pJ,{"number, number":BG,"BigNumber, BigNumber":MG,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():l(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():d(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):c(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return r(e,0)?a(t.size(),t.storage()):d(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(n(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,n(t)).valueOf()}})})),hJ=iq("row",["typed","Index","matrix","range"],(e=>{var{typed:t,Index:n,matrix:r,range:a}=e;return t("row",{"Matrix, number":i,"Array, number":function(e,t){return i(r(WU(e)),t).valueOf()}});function i(e,t){if(2!==e.size().length)throw new Error("Only two dimensional matrix is supported");EV(t,e.size()[0]);var r=a(0,e.size()[1]),i=new n(t,r);return e.subset(i)}})),fJ="setCartesian",mJ=iq(fJ,["typed","size","subset","compareNatural","Index","DenseMatrix"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i,DenseMatrix:s}=e;return t(fJ,{"Array | Matrix, Array | Matrix":function(e,t){var o=[];if(0!==r(n(e),new i(0))&&0!==r(n(t),new i(0))){var u=FV(Array.isArray(e)?e:e.toArray()).sort(a),c=FV(Array.isArray(t)?t:t.toArray()).sort(a);o=[];for(var l=0;l<u.length;l++)for(var p=0;p<c.length;p++)o.push([u[l],c[p]])}return Array.isArray(e)&&Array.isArray(t)?o:new s(o)}})})),gJ="setDistinct",yJ=iq(gJ,["typed","size","subset","compareNatural","Index","DenseMatrix"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i,DenseMatrix:s}=e;return t(gJ,{"Array | Matrix":function(e){var t;if(0===r(n(e),new i(0)))t=[];else{var o=FV(Array.isArray(e)?e:e.toArray()).sort(a);(t=[]).push(o[0]);for(var u=1;u<o.length;u++)0!==a(o[u],o[u-1])&&t.push(o[u])}return Array.isArray(e)?t:new s(t)}})})),xJ="setIsSubset",bJ=iq(xJ,["typed","size","subset","compareNatural","Index"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i}=e;return t(xJ,{"Array | Matrix, Array | Matrix":function(e,t){if(0===r(n(e),new i(0)))return!0;if(0===r(n(t),new i(0)))return!1;for(var s,o=qV(FV(Array.isArray(e)?e:e.toArray()).sort(a)),u=qV(FV(Array.isArray(t)?t:t.toArray()).sort(a)),c=0;c<o.length;c++){s=!1;for(var l=0;l<u.length;l++)if(0===a(o[c].value,u[l].value)&&o[c].identifier===u[l].identifier){s=!0;break}if(!1===s)return!1}return!0}})})),vJ="setPowerset",wJ=iq(vJ,["typed","size","subset","compareNatural","Index"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i}=e;return t(vJ,{"Array | Matrix":function(e){if(0===r(n(e),new i(0)))return[];for(var t=FV(Array.isArray(e)?e:e.toArray()).sort(a),o=[],u=0;u.toString(2).length<=t.length;)o.push(s(t,u.toString(2).split("").reverse())),u++;return function(e){for(var t=[],n=e.length-1;n>0;n--)for(var r=0;r<n;r++)e[r].length>e[r+1].length&&(t=e[r],e[r]=e[r+1],e[r+1]=t);return e}(o)}});function s(e,t){for(var n=[],r=0;r<t.length;r++)"1"===t[r]&&n.push(e[r]);return n}}));function NJ(e,t,n,r,a,i,s){var o=0;for(n[s]=e;o>=0;){var u=n[s+o],c=n[r+u];-1===c?(o--,i[t++]=u):(n[r+u]=n[a+c],n[s+ ++o]=c)}return t}function SJ(e){return-e-2}var kJ=iq("csAmd",["add","multiply","transpose"],(e=>{var{add:t,multiply:n,transpose:r}=e;return function(e,s){if(!s||e<=0||e>3)return null;var o=s._size,u=o[0],c=o[1],l=0,p=Math.max(16,10*Math.sqrt(c)),d=function(e,a,i,s,o){var u=r(a);if(1===e&&s===i)return t(a,u);if(2===e){for(var c=u._index,l=u._ptr,p=0,d=0;d<i;d++){var h=l[d];if(l[d]=p,!(l[d+1]-h>o))for(var f=l[d+1];h<f;h++)c[p++]=c[h]}return l[i]=p,a=r(u),n(u,a)}return n(u,a)}(e,s,u,c,p=Math.min(c-2,p));!function(e,t,n){for(var r=e._values,a=e._index,i=e._ptr,s=e._size[1],o=0,u=0;u<s;u++){var c=i[u];for(i[u]=o;c<i[u+1];c++)t(a[c],u,r?r[c]:1,null)&&(a[o]=a[c],r&&(r[o]=r[c]),o++)}i[s]=o,a.splice(o,a.length-o),r&&r.splice(o,r.length-o)}(d,i);for(var h,f,m,g,y,x,b,v,w,N,S,k,I,E,C,T,D=d._index,A=d._ptr,M=A[c],$=[],O=[],R=c+1,_=2*(c+1),F=3*(c+1),z=4*(c+1),B=5*(c+1),L=6*(c+1),P=7*(c+1),U=$,q=function(e,t,n,r,i,s,o,u,c,l,p,d){for(var h=0;h<e;h++)n[0+h]=t[h+1]-t[h];n[0+e]=0;for(var f=0;f<=e;f++)n[i+f]=-1,s[f]=-1,n[o+f]=-1,n[u+f]=-1,n[c+f]=1,n[l+f]=1,n[p+f]=0,n[d+f]=n[0+f];var m=a(0,0,n,l,e);return n[p+e]=-2,t[e]=-1,n[l+e]=0,m}(c,A,O,0,F,U,_,P,R,L,z,B),W=function(e,t,n,r,a,i,s,o,u,c,l){for(var p=0,d=0;d<e;d++){var h=n[r+d];if(0===h)n[a+d]=-2,p++,t[d]=-1,n[i+d]=0;else if(h>s)n[o+d]=0,n[a+d]=-1,p++,t[d]=SJ(e),n[o+e]++;else{var f=n[u+h];-1!==f&&(c[f]=d),n[l+d]=n[u+h],n[u+h]=d}}return p}(c,A,O,B,z,L,p,R,F,U,_),V=0;W<c;){for(m=-1;V<c&&-1===(m=O[F+V]);V++);-1!==O[_+m]&&(U[O[_+m]]=-1),O[F+V]=O[_+m];var j=O[z+m],G=O[R+m];W+=G;var H=0;O[R+m]=-G;var K=A[m],X=0===j?K:M,Z=X;for(g=1;g<=j+1;g++){for(g>j?(x=m,b=K,v=O[0+m]-j):(b=A[x=D[K++]],v=O[0+x]),y=1;y<=v;y++)(w=O[R+(h=D[b++])])<=0||(H+=w,O[R+h]=-w,D[Z++]=h,-1!==O[_+h]&&(U[O[_+h]]=U[h]),-1!==U[h]?O[_+U[h]]=O[_+h]:O[F+O[B+h]]=O[_+h]);x!==m&&(A[x]=SJ(m),O[L+x]=0)}for(0!==j&&(M=Z),O[B+m]=H,A[m]=X,O[0+m]=Z-X,O[z+m]=-2,q=a(q,l,O,L,c),N=X;N<Z;N++)if(!((S=O[z+(h=D[N])])<=0)){var Y=q-(w=-O[R+h]);for(K=A[h],k=A[h]+S-1;K<=k;K++)O[L+(x=D[K])]>=q?O[L+x]-=w:0!==O[L+x]&&(O[L+x]=O[B+x]+Y)}for(N=X;N<Z;N++){for(I=(k=A[h=D[N]])+O[z+h]-1,E=k,C=0,T=0,K=k;K<=I;K++)if(0!==O[L+(x=D[K])]){var J=O[L+x]-q;J>0?(T+=J,D[E++]=x,C+=x):(A[x]=SJ(m),O[L+x]=0)}O[z+h]=E-k+1;var Q=E,ee=k+O[0+h];for(K=I+1;K<ee;K++){var te=O[R+(f=D[K])];te<=0||(T+=te,D[E++]=f,C+=f)}0===T?(A[h]=SJ(m),H-=w=-O[R+h],G+=w,W+=w,O[R+h]=0,O[z+h]=-1):(O[B+h]=Math.min(O[B+h],T),D[E]=D[Q],D[Q]=D[k],D[k]=m,O[0+h]=E-k+1,C=(C<0?-C:C)%c,O[_+h]=O[P+C],O[P+C]=h,U[h]=C)}for(O[B+m]=H,q=a(q+(l=Math.max(l,H)),l,O,L,c),N=X;N<Z;N++)if(!(O[R+(h=D[N])]>=0))for(h=O[P+(C=U[h])],O[P+C]=-1;-1!==h&&-1!==O[_+h];h=O[_+h],q++){for(v=O[0+h],S=O[z+h],K=A[h]+1;K<=A[h]+v-1;K++)O[L+D[K]]=q;var ne=h;for(f=O[_+h];-1!==f;){var re=O[0+f]===v&&O[z+f]===S;for(K=A[f]+1;re&&K<=A[f]+v-1;K++)O[L+D[K]]!==q&&(re=0);re?(A[f]=SJ(h),O[R+h]+=O[R+f],O[R+f]=0,O[z+f]=-1,f=O[_+f],O[_+ne]=f):(ne=f,f=O[_+f])}}for(K=X,N=X;N<Z;N++)(w=-O[R+(h=D[N])])<=0||(O[R+h]=w,T=O[B+h]+H-w,-1!==O[F+(T=Math.min(T,c-W-w))]&&(U[O[F+T]]=h),O[_+h]=O[F+T],U[h]=-1,O[F+T]=h,V=Math.min(V,T),O[B+h]=T,D[K++]=h);O[R+m]=G,0==(O[0+m]=K-X)&&(A[m]=-1,O[L+m]=0),0!==j&&(M=K)}for(h=0;h<c;h++)A[h]=SJ(A[h]);for(f=0;f<=c;f++)O[F+f]=-1;for(f=c;f>=0;f--)O[R+f]>0||(O[_+f]=O[F+A[f]],O[F+A[f]]=f);for(x=c;x>=0;x--)O[R+x]<=0||-1!==A[x]&&(O[_+x]=O[F+A[x]],O[F+A[x]]=x);for(m=0,h=0;h<=c;h++)-1===A[h]&&(m=NJ(h,m,O,F,_,$,L));return $.splice($.length-1,1),$};function a(e,t,n,r,a){if(e<2||e+t<0){for(var i=0;i<a;i++)0!==n[r+i]&&(n[r+i]=1);e=2}return e}function i(e,t){return e!==t}}));function IJ(e,t,n,r,a,i,s){var o,u,c,l=0;if(e<=t||n[r+t]<=n[a+e])return-1;n[a+e]=n[r+t];var p=n[i+e];if(n[i+e]=t,-1===p)l=1,c=e;else{for(l=2,c=p;c!==n[s+c];c=n[s+c]);for(o=p;o!==c;o=u)u=n[s+o],n[s+o]=c}return{jleaf:l,q:c}}var EJ=iq("csCounts",["transpose"],(e=>{var{transpose:t}=e;return function(e,n,r,a){if(!e||!n||!r)return null;var i,s,o,u,c,l,p,d=e._size,h=d[0],f=d[1],m=4*f+(a?f+h+1:0),g=[],y=f,x=2*f,b=3*f,v=4*f,w=5*f+1;for(o=0;o<m;o++)g[o]=-1;var N=[],S=t(e),k=S._index,I=S._ptr;for(o=0;o<f;o++)for(N[s=r[o]]=-1===g[b+s]?1:0;-1!==s&&-1===g[b+s];s=n[s])g[b+s]=o;if(a){for(o=0;o<f;o++)g[r[o]]=o;for(i=0;i<h;i++){for(o=f,l=I[i],p=I[i+1],c=l;c<p;c++)o=Math.min(o,g[k[c]]);g[w+i]=g[v+o],g[v+o]=i}}for(i=0;i<f;i++)g[0+i]=i;for(o=0;o<f;o++){for(-1!==n[s=r[o]]&&N[n[s]]--,u=a?g[v+o]:s;-1!==u;u=a?g[w+u]:-1)for(c=I[u];c<I[u+1];c++){var E=IJ(i=k[c],s,g,b,y,x,0);E.jleaf>=1&&N[s]++,2===E.jleaf&&N[E.q]--}-1!==n[s]&&(g[0+s]=n[s])}for(s=0;s<f;s++)-1!==n[s]&&(N[n[s]]+=N[s]);return N}})),CJ=iq("csSqr",["add","multiply","transpose"],(e=>{var{add:t,multiply:n,transpose:r}=e,a=kJ({add:t,multiply:n,transpose:r}),i=EJ({transpose:r});return function(e,t,n){var r,s=t._ptr,o=t._size[1],u={};if(u.q=a(e,t),e&&!u.q)return null;if(n){var c=e?function(e,t,n,r){for(var a=e._values,i=e._index,s=e._ptr,o=e._size,u=e._datatype,c=o[0],l=o[1],p=null,d=[],h=[],f=0,m=0;m<l;m++){h[m]=f;for(var g=n?n[m]:m,y=s[g],x=s[g+1],b=y;b<x;b++){var v=i[b];d[f]=v,p&&(p[f]=a[b]),f++}}return h[l]=f,e.createSparseMatrix({values:p,index:d,ptr:h,size:[c,l],datatype:u})}(t,0,u.q):t;u.parent=function(e,t){if(!e)return null;var n,r,a=e._index,i=e._ptr,s=e._size,o=s[0],u=s[1],c=[],l=[],p=u;for(n=0;n<o;n++)l[p+n]=-1;for(var d=0;d<u;d++){c[d]=-1,l[0+d]=-1;for(var h=i[d],f=i[d+1],m=h;m<f;m++){var g=a[m];for(n=l[p+g];-1!==n&&n<d;n=r)r=l[0+n],l[0+n]=d,-1===r&&(c[n]=d);l[p+g]=d}}return c}(c);var l=function(e,t){if(!e)return null;var n,r=0,a=[],i=[],s=t,o=2*t;for(n=0;n<t;n++)i[0+n]=-1;for(n=t-1;n>=0;n--)-1!==e[n]&&(i[s+n]=i[0+e[n]],i[0+e[n]]=n);for(n=0;n<t;n++)-1===e[n]&&(r=NJ(n,r,i,0,s,a,o));return a}(u.parent,o);if(u.cp=i(c,u.parent,l,1),c&&u.parent&&u.cp&&function(e,t){var n=e._ptr,r=e._index,a=e._size,i=a[0],s=a[1];t.pinv=[],t.leftmost=[];var o,u,c,l,p,d=t.parent,h=t.pinv,f=t.leftmost,m=[],g=i,y=i+s,x=i+2*s;for(u=0;u<s;u++)m[g+u]=-1,m[y+u]=-1,m[x+u]=0;for(o=0;o<i;o++)f[o]=-1;for(u=s-1;u>=0;u--)for(l=n[u],p=n[u+1],c=l;c<p;c++)f[r[c]]=u;for(o=i-1;o>=0;o--)h[o]=-1,-1!==(u=f[o])&&(0==m[x+u]++&&(m[y+u]=o),m[0+o]=m[g+u],m[g+u]=o);for(t.lnz=0,t.m2=i,u=0;u<s;u++)if(o=m[g+u],t.lnz++,o<0&&(o=t.m2++),h[o]=u,!(--x[u]<=0)){t.lnz+=m[x+u];var b=d[u];-1!==b&&(0===m[x+b]&&(m[y+b]=m[y+u]),m[0+m[y+u]]=m[g+b],m[g+b]=m[0+o],m[x+b]+=m[x+u])}for(o=0;o<i;o++)h[o]<0&&(h[o]=u++);return!0}(c,u))for(u.unz=0,r=0;r<o;r++)u.unz+=u.cp[r]}else u.unz=4*s[o]+o,u.lnz=u.unz;return u}}));function TJ(e,t){return e[t]<0}function DJ(e,t){e[t]=SJ(e[t])}function AJ(e){return e<0?SJ(e):e}function MJ(e,t,n,r,a){var i,s,o,u=t._index,c=t._ptr,l=t._size[1],p=0;for(r[0]=e;p>=0;){e=r[p];var d=a?a[e]:e;TJ(c,e)||(DJ(c,e),r[l+p]=d<0?0:AJ(c[d]));var h=1;for(s=r[l+p],o=d<0?0:AJ(c[d+1]);s<o;s++)if(!TJ(c,i=u[s])){r[l+p]=s,r[++p]=i,h=0;break}h&&(p--,r[--n]=e)}return n}var $J=iq("csSpsolve",["divideScalar","multiply","subtract"],(e=>{var{divideScalar:t,multiply:n,subtract:r}=e;return function(e,a,i,s,o,u,c){var l,p,d,h,f=e._values,m=e._index,g=e._ptr,y=e._size[1],x=a._values,b=a._index,v=a._ptr,w=function(e,t,n,r,a){var i,s,o,u=e._ptr,c=e._size,l=t._index,p=t._ptr,d=c[1],h=d;for(s=p[n],o=p[n+1],i=s;i<o;i++){var f=l[i];TJ(u,f)||(h=MJ(f,e,h,r,a))}for(i=h;i<d;i++)DJ(u,r[i]);return h}(e,a,i,s,u);for(l=w;l<y;l++)o[s[l]]=0;for(p=v[i],d=v[i+1],l=p;l<d;l++)o[b[l]]=x[l];for(var N=w;N<y;N++){var S=s[N],k=u?u[S]:S;if(!(k<0))for(p=g[k],d=g[k+1],o[S]=t(o[S],f[c?p:d-1]),l=c?p+1:p,h=c?d:d-1;l<h;l++){var I=m[l];o[I]=r(o[I],n(f[l],o[S]))}}return w}})),OJ=iq("csLu",["abs","divideScalar","multiply","subtract","larger","largerEq","SparseMatrix"],(e=>{var{abs:t,divideScalar:n,multiply:r,subtract:a,larger:i,largerEq:s,SparseMatrix:o}=e,u=$J({divideScalar:n,multiply:r,subtract:a});return function(e,a,c){if(!e)return null;var l,p=e._size[1],d=100,h=100;a&&(l=a.q,d=a.lnz||d,h=a.unz||h);var f,m,g=[],y=[],x=[],b=new o({values:g,index:y,ptr:x,size:[p,p]}),v=[],w=[],N=[],S=new o({values:v,index:w,ptr:N,size:[p,p]}),k=[],I=[],E=[];for(f=0;f<p;f++)I[f]=0,k[f]=-1,x[f+1]=0;d=0,h=0;for(var C=0;C<p;C++){x[C]=d,N[C]=h;var T=l?l[C]:C,D=u(b,e,T,E,I,k,1),A=-1,M=-1;for(m=D;m<p;m++)if(k[f=E[m]]<0){var $=t(I[f]);i($,M)&&(M=$,A=f)}else w[h]=k[f],v[h++]=I[f];if(-1===A||M<=0)return null;k[T]<0&&s(t(I[T]),r(M,c))&&(A=T);var O=I[A];for(w[h]=C,v[h++]=O,k[A]=C,y[d]=A,g[d++]=1,m=D;m<p;m++)k[f=E[m]]<0&&(y[d]=f,g[d++]=n(I[f],O)),I[f]=0}for(x[p]=d,N[p]=h,m=0;m<d;m++)y[m]=k[y[m]];return g.splice(d,g.length-d),y.splice(d,y.length-d),v.splice(h,v.length-h),w.splice(h,w.length-h),{L:b,U:S,pinv:k}}})),RJ=iq("slu",["typed","abs","add","multiply","transpose","divideScalar","subtract","larger","largerEq","SparseMatrix"],(e=>{var{typed:t,abs:n,add:r,multiply:a,transpose:i,divideScalar:s,subtract:o,larger:u,largerEq:c,SparseMatrix:l}=e,p=CJ({add:r,multiply:a,transpose:i}),d=OJ({abs:n,divideScalar:s,multiply:a,subtract:o,larger:u,largerEq:c,SparseMatrix:l});return t("slu",{"SparseMatrix, number, number":function(e,t,n){if(!lq(t)||t<0||t>3)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(n<0||n>1)throw new Error("Partial pivoting threshold must be a number from 0 to 1");var r=p(t,e,!1),a=d(e,r,n);return{L:a.L,U:a.U,p:a.pinv,q:r.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})})),_J=iq("sum",["typed","config","add","numeric"],(e=>{var{typed:t,config:n,add:r,numeric:a}=e;return t("sum",{"Array | Matrix":i,"Array | Matrix, number | BigNumber":function(e,t){try{return mj(e,t,r)}catch(e){throw _X(e,"sum")}},"...":function(e){if(dj(e))throw new TypeError("Scalar values expected in function sum");return i(e)}});function i(e){var t;return hj(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw _X(t,"sum",e)}})),void 0===t&&(t=a(0,n.number)),"string"==typeof t&&(t=a(t,n.number)),t}})),FJ=iq("trace",["typed","matrix","add"],(e=>{var{typed:t,matrix:n,add:r}=e;return t("trace",{Array:function(e){return a(n(e))},SparseMatrix:function(e){var t=e._values,n=e._index,a=e._ptr,i=e._size,s=i[0],o=i[1];if(s===o){var u=0;if(t.length>0)for(var c=0;c<o;c++)for(var l=a[c],p=a[c+1],d=l;d<p;d++){var h=n[d];if(h===c){u=r(u,t[d]);break}if(h>c)break}return u}throw new RangeError("Matrix must be square (size: "+gV(i)+")")},DenseMatrix:a,any:WU});function a(e){var t=e._size,n=e._data;switch(t.length){case 1:if(1===t[0])return WU(n[0]);throw new RangeError("Matrix must be square (size: "+gV(t)+")");case 2:var a=t[0];if(a===t[1]){for(var i=0,s=0;s<a;s++)i=r(i,n[s][s]);return i}throw new RangeError("Matrix must be square (size: "+gV(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+gV(t)+")")}}})),zJ="usolveAll",BJ=iq(zJ,["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(e=>{var{typed:t,matrix:n,divideScalar:r,multiplyScalar:a,subtract:i,equalScalar:s,DenseMatrix:o}=e,u=JZ({DenseMatrix:o});return t(zJ,{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=[u(e,t,!0)._data.map((e=>e[0]))],c=e._size[0],l=e._size[1],p=e._values,d=e._index,h=e._ptr,f=l-1;f>=0;f--)for(var m=n.length,g=0;g<m;g++){for(var y=n[g],x=[],b=[],v=h[f],w=0,N=h[f+1]-1;N>=v;N--){var S=d[N];S===f?w=p[N]:S<f&&(x.push(p[N]),b.push(S))}if(s(w,0))if(s(y[f],0)){if(0===g){var k=[...y];k[f]=1;for(var I=0,E=b.length;I<E;I++){var C=b[I];k[C]=i(k[C],x[I])}n.push(k)}}else{if(0===g)return[];n.splice(g,1),g-=1,m-=1}else{y[f]=r(y[f],w);for(var T=0,D=b.length;T<D;T++){var A=b[T];y[A]=i(y[A],a(y[f],x[T]))}}}return n.map((e=>new o({data:e.map((e=>[e])),size:[c,1]})))}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return c(e,t)},"Array, Array | Matrix":function(e,t){return c(n(e),t).map((e=>e.valueOf()))}});function c(e,t){for(var n=[u(e,t,!0)._data.map((e=>e[0]))],c=e._data,l=e._size[0],p=e._size[1]-1;p>=0;p--)for(var d=n.length,h=0;h<d;h++){var f=n[h];if(s(c[p][p],0))if(s(f[p],0)){if(0===h){var m=[...f];m[p]=1;for(var g=p-1;g>=0;g--)m[g]=i(m[g],c[g][p]);n.push(m)}}else{if(0===h)return[];n.splice(h,1),h-=1,d-=1}else{f[p]=r(f[p],c[p][p]);for(var y=p-1;y>=0;y--)f[y]=i(f[y],a(f[p],c[y][p]))}}return n.map((e=>new o({data:e.map((e=>[e])),size:[l,1]})))}})),LJ="asin",PJ=iq(LJ,["typed","config","Complex"],(e=>{var{typed:t,config:n,Complex:r}=e;return t(LJ,{number:function(e){return e>=-1&&e<=1||n.predictable?Math.asin(e):new r(e,0).asin()},Complex:function(e){return e.asin()},BigNumber:function(e){return e.asin()},"Array | Matrix":function(e){return fj(e,this,!0)}})})),UJ=iq("ceil",["typed","config","round","matrix","equalScalar"],(e=>{var{typed:t,config:n,round:r,matrix:a,equalScalar:i}=e,s=wX({typed:t,equalScalar:i}),o=kX({typed:t});return t("ceil",{number:function(e){return Iq(e,r(e),n.epsilon)?r(e):Ej(e)},"number, number":function(e,t){if(Iq(e,r(e,t),n.epsilon))return r(e,t);var[a,i]="".concat(e,"e").split("e"),s=Math.ceil(Number("".concat(a,"e").concat(Number(i)+t)));return[a,i]="".concat(s,"e").split("e"),Number("".concat(a,"e").concat(Number(i)-t))},Complex:function(e){return e.ceil()},"Complex, number":function(e,t){return e.ceil(t)},BigNumber:function(e){return oH(e,r(e),n.epsilon)?r(e):e.ceil()},"BigNumber, BigNumber":function(e,t){return oH(e,r(e,t),n.epsilon)?r(e,t):e.toDecimalPlaces(t.toNumber(),aq.ROUND_CEIL)},Fraction:function(e){return e.ceil()},"Fraction, number":function(e,t){return e.ceil(t)},"Array | Matrix":function(e){return fj(e,this,!0)},"Array | Matrix, number":function(e,t){return fj(e,(e=>this(e,t)),!0)},"SparseMatrix, number | BigNumber":function(e,t){return s(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return o(e,t,this,!1)},"number | Complex | BigNumber, Array":function(e,t){return o(a(t),e,this,!0).valueOf()}})})),qJ="column",WJ=iq(qJ,["typed","Index","matrix","range"],(e=>{var{typed:t,Index:n,matrix:r,range:a}=e;return t(qJ,{"Matrix, number":i,"Array, number":function(e,t){return i(r(WU(e)),t).valueOf()}});function i(e,t){if(2!==e.size().length)throw new Error("Only two dimensional matrix is supported");EV(t,e.size()[1]);var r=a(0,e.size()[0]),i=new n(r,t);return e.subset(i)}})),VJ="composition",jJ=iq(VJ,["typed","addScalar","combinations","isNegative","isPositive","isInteger","larger"],(e=>{var{typed:t,addScalar:n,combinations:r,isPositive:a,isNegative:i,isInteger:s,larger:o}=e;return t(VJ,{"number | BigNumber, number | BigNumber":function(e,t){if(!(s(e)&&a(e)&&s(t)&&a(t)))throw new TypeError("Positive integer value expected in function composition");if(o(t,e))throw new TypeError("k must be less than or equal to n in function composition");return r(n(e,-1),n(t,-1))}})})),GJ="cross",HJ=iq(GJ,["typed","matrix","subtract","multiply"],(e=>{var{typed:t,matrix:n,subtract:r,multiply:a}=e;return t(GJ,{"Matrix, Matrix":function(e,t){return n(i(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return n(i(e.toArray(),t))},"Array, Matrix":function(e,t){return n(i(e,t.toArray()))},"Array, Array":i});function i(e,t){var n=Math.max(SV(e).length,SV(t).length);e=$V(e),t=$V(t);var i=SV(e),s=SV(t);if(1!==i.length||1!==s.length||3!==i[0]||3!==s[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+i.join(", ")+"], B = ["+s.join(", ")+"])");var o=[r(a(e[1],t[2]),a(e[2],t[1])),r(a(e[2],t[0]),a(e[0],t[2])),r(a(e[0],t[1]),a(e[1],t[0]))];return n>1?[o]:o}})),KJ="distance",XJ=iq(KJ,["typed","addScalar","subtract","divideScalar","multiplyScalar","unaryMinus","sqrt","abs"],(e=>{var{typed:t,addScalar:n,subtract:r,multiplyScalar:a,divideScalar:i,unaryMinus:s,sqrt:o,abs:u}=e;return t(KJ,{"Array, Array, Array":function(e,t,n){if(2===e.length&&2===t.length&&2===n.length){if(!l(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!l(t))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!l(n))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");var o=i(r(n[1],n[0]),r(t[1],t[0])),u=a(a(o,o),t[0]),c=s(a(o,t[0])),p=e[1];return m(e[0],e[1],u,c,p)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object, Object":function(e,t,n){if(2===Object.keys(e).length&&2===Object.keys(t).length&&2===Object.keys(n).length){if(!l(e))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!l(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers");if(!l(n))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"lineOnePtX"in t&&"lineOnePtY"in t&&"lineTwoPtX"in n&&"lineTwoPtY"in n){var o=i(r(n.lineTwoPtY,n.lineTwoPtX),r(t.lineOnePtY,t.lineOnePtX)),u=a(a(o,o),t.lineOnePtX),c=s(a(o,t.lineOnePtX)),p=e.pointX;return m(e.pointX,e.pointY,u,c,p)}throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},"Array, Array":function(e,t){if(2===e.length&&3===t.length){if(!l(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!p(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");return m(e[0],e[1],t[0],t[1],t[2])}if(3===e.length&&6===t.length){if(!p(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!h(t))throw new TypeError("Array with 6 numbers or BigNumbers expected for second argument");return g(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5])}if(e.length===t.length&&e.length>0){if(!d(e))throw new TypeError("All values of an array should be numbers or BigNumbers");if(!d(t))throw new TypeError("All values of an array should be numbers or BigNumbers");return y(e,t)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object":function(e,t){if(2===Object.keys(e).length&&3===Object.keys(t).length){if(!l(e))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!p(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"xCoeffLine"in t&&"yCoeffLine"in t&&"constant"in t)return m(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant);throw new TypeError("Key names do not match")}if(3===Object.keys(e).length&&6===Object.keys(t).length){if(!p(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers or BigNumbers");if(!h(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"x0"in t&&"y0"in t&&"z0"in t&&"a"in t&&"b"in t&&"c"in t)return g(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c);throw new TypeError("Key names do not match")}if(2===Object.keys(e).length&&2===Object.keys(t).length){if(!l(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers or BigNumbers");if(!l(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers or BigNumbers");if("pointOneX"in e&&"pointOneY"in e&&"pointTwoX"in t&&"pointTwoY"in t)return y([e.pointOneX,e.pointOneY],[t.pointTwoX,t.pointTwoY]);throw new TypeError("Key names do not match")}if(3===Object.keys(e).length&&3===Object.keys(t).length){if(!p(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers");if(!p(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers");if("pointOneX"in e&&"pointOneY"in e&&"pointOneZ"in e&&"pointTwoX"in t&&"pointTwoY"in t&&"pointTwoZ"in t)return y([e.pointOneX,e.pointOneY,e.pointOneZ],[t.pointTwoX,t.pointTwoY,t.pointTwoZ]);throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},Array:function(e){if(!function(e){if(2===e[0].length&&c(e[0][0])&&c(e[0][1])){if(e.some((e=>2!==e.length||!c(e[0])||!c(e[1]))))return!1}else{if(!(3===e[0].length&&c(e[0][0])&&c(e[0][1])&&c(e[0][2])))return!1;if(e.some((e=>3!==e.length||!c(e[0])||!c(e[1])||!c(e[2]))))return!1}return!0}(e))throw new TypeError("Incorrect array format entered for pairwise distance calculation");return function(e){for(var t=[],n=[],r=[],a=0;a<e.length-1;a++)for(var i=a+1;i<e.length;i++)2===e[0].length?(n=[e[a][0],e[a][1]],r=[e[i][0],e[i][1]]):3===e[0].length&&(n=[e[a][0],e[a][1],e[a][2]],r=[e[i][0],e[i][1],e[i][2]]),t.push(y(n,r));return t}(e)}});function c(e){return"number"==typeof e||iU(e)}function l(e){return e.constructor!==Array&&(e=f(e)),c(e[0])&&c(e[1])}function p(e){return e.constructor!==Array&&(e=f(e)),c(e[0])&&c(e[1])&&c(e[2])}function d(e){return Array.isArray(e)||(e=f(e)),e.every(c)}function h(e){return e.constructor!==Array&&(e=f(e)),c(e[0])&&c(e[1])&&c(e[2])&&c(e[3])&&c(e[4])&&c(e[5])}function f(e){for(var t=Object.keys(e),n=[],r=0;r<t.length;r++)n.push(e[t[r]]);return n}function m(e,t,r,s,c){var l=u(n(n(a(r,e),a(s,t)),c)),p=o(n(a(r,r),a(s,s)));return i(l,p)}function g(e,t,s,u,c,l,p,d,h){var f=[r(a(r(c,t),h),a(r(l,s),d)),r(a(r(l,s),p),a(r(u,e),h)),r(a(r(u,e),d),a(r(c,t),p))];f=o(n(n(a(f[0],f[0]),a(f[1],f[1])),a(f[2],f[2])));var m=o(n(n(a(p,p),a(d,d)),a(h,h)));return i(f,m)}function y(e,t){for(var i=e.length,s=0,u=0,c=0;c<i;c++)u=r(e[c],t[c]),s=n(a(u,u),s);return o(s)}})),ZJ="dotMultiply",YJ=iq(ZJ,["typed","matrix","equalScalar","multiplyScalar"],(e=>{var{typed:t,matrix:n,equalScalar:r,multiplyScalar:a}=e,i=xX({typed:t,equalScalar:r}),s=AY({typed:t,equalScalar:r}),o=wX({typed:t,equalScalar:r}),u=SX({typed:t}),c=kX({typed:t});return t(ZJ,{"any, any":a,"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,a,!1)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,a,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,a,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,a)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,a,!1)},"DenseMatrix, any":function(e,t){return c(e,t,a,!1)},"any, SparseMatrix":function(e,t){return o(t,e,a,!0)},"any, DenseMatrix":function(e,t){return c(t,e,a,!0)},"Array, any":function(e,t){return c(n(e),t,a,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,a,!0).valueOf()}})})),JJ=iq("FibonacciHeap",["smaller","larger"],(e=>{var{smaller:t,larger:n}=e,r=1/Math.log((1+Math.sqrt(5))/2);function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}function i(e,t,n){t.left.right=t.right,t.right.left=t.left,n.degree--,n.child===t&&(n.child=t.right),0===n.degree&&(n.child=null),t.left=e,t.right=e.right,e.right=t,t.right.left=t,t.parent=null,t.mark=!1}function s(e,t){var n=t.parent;n&&(t.mark?(i(e,t,n),s(n)):t.mark=!0)}a.prototype.type="FibonacciHeap",a.prototype.isFibonacciHeap=!0,a.prototype.insert=function(e,n){var r={key:e,value:n,degree:0};if(this._minimum){var a=this._minimum;r.left=a,r.right=a.right,a.right=r,r.right.left=r,t(e,a.key)&&(this._minimum=r)}else r.left=r,r.right=r,this._minimum=r;return this._size++,r},a.prototype.size=function(){return this._size},a.prototype.clear=function(){this._minimum=null,this._size=0},a.prototype.isEmpty=function(){return 0===this._size},a.prototype.extractMinimum=function(){var e=this._minimum;if(null===e)return e;for(var a=this._minimum,i=e.degree,s=e.child;i>0;){var u=s.right;s.left.right=s.right,s.right.left=s.left,s.left=a,s.right=a.right,a.right=s,s.right.left=s,s.parent=null,s=u,i--}return e.left.right=e.right,e.right.left=e.left,a=e===e.right?null:function(e,a){var i,s=Math.floor(Math.log(a)*r)+1,u=new Array(s),c=0,l=e;if(l)for(c++,l=l.right;l!==e;)c++,l=l.right;for(;c>0;){for(var p=l.degree,d=l.right;i=u[p];){if(n(l.key,i.key)){var h=i;i=l,l=h}o(i,l),u[p]=null,p++}u[p]=l,l=d,c--}e=null;for(var f=0;f<s;f++)(i=u[f])&&(e?(i.left.right=i.right,i.right.left=i.left,i.left=e,i.right=e.right,e.right=i,i.right.left=i,t(i.key,e.key)&&(e=i)):e=i);return e}(a=e.right,this._size),this._size--,this._minimum=a,e},a.prototype.remove=function(e){this._minimum=function(e,n,r){n.key=-1;var a=n.parent;return a&&t(n.key,a.key)&&(i(e,n,a),s(e,a)),t(n.key,e.key)&&(e=n),e}(this._minimum,e),this.extractMinimum()};var o=function(e,t){e.left.right=e.right,e.right.left=e.left,e.parent=t,t.child?(e.left=t.child,e.right=t.child.right,t.child.right=e,e.right.left=e):(t.child=e,e.right=e,e.left=e),t.degree++,e.mark=!1};return a}),{isClass:!0}),QJ=iq("fix",["typed","Complex","matrix","ceil","floor"],(e=>{var{typed:t,Complex:n,matrix:r,ceil:a,floor:i}=e,s=kX({typed:t});return t("fix",{number:function(e){return e>0?i(e):a(e)},"number, number | BigNumber":function(e,t){return e>0?i(e,t):a(e,t)},Complex:function(e){return new n(e.re>0?Math.floor(e.re):Math.ceil(e.re),e.im>0?Math.floor(e.im):Math.ceil(e.im))},"Complex, number | BigNumber":function(e,t){return new n(e.re>0?i(e.re,t):a(e.re,t),e.im>0?i(e.im,t):a(e.im,t))},BigNumber:function(e){return e.isNegative()?a(e):i(e)},"BigNumber, number | BigNumber":function(e,t){return e.isNegative()?a(e,t):i(e,t)},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Fraction, number | BigNumber":function(e,t){return e.s<0?e.ceil(t):e.floor(t)},"Array | Matrix":function(e){return fj(e,this,!0)},"Array | Matrix, number | BigNumber":function(e,t){return fj(e,(e=>this(e,t)),!0)},"number | Complex | BigNumber, Array":function(e,t){return s(r(t),e,this,!0).valueOf()}})}));function eQ(e){var t;if(lq(e))return e<=0?isFinite(e)?1/0:NaN:e>171?1/0:GG(1,e-1);if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*eQ(1-e));if(e>=171.35)return 1/0;if(e>85){var n=e*e,r=n*e,a=r*e,i=a*e;return Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*n)-139/(51840*r)-571/(2488320*a)+163879/(209018880*i)+5246819/(75246796800*i*e))}--e,t=nQ[0];for(var s=1;s<nQ.length;++s)t+=nQ[s]/(e+s);var o=e+tQ+.5;return Math.sqrt(2*Math.PI)*Math.pow(o,e+.5)*Math.exp(-o)*t}eQ.signature="number";var tQ=4.7421875,nQ=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22],rQ="gamma",aQ=iq(rQ,["typed","config","multiplyScalar","pow","BigNumber","Complex"],(e=>{var{typed:t,config:n,multiplyScalar:r,pow:a,BigNumber:i,Complex:s}=e;return t(rQ,{number:eQ,Complex:function(e){if(0===e.im)return this(e.re);if(e.re<.5){var t=new s(1-e.re,-e.im),n=new s(Math.PI*e.re,Math.PI*e.im);return new s(Math.PI).div(n.sin()).div(this(t))}e=new s(e.re-1,e.im);for(var r=new s(nQ[0],0),a=1;a<nQ.length;++a){var i=new s(nQ[a],0);r=r.add(i.div(e.add(a)))}var o=new s(e.re+tQ+.5,e.im),u=Math.sqrt(2*Math.PI),c=o.pow(e.add(.5)),l=o.neg().exp();return r.mul(u).mul(c).mul(l)},BigNumber:function(e){if(e.isInteger())return e.isNegative()||e.isZero()?new i(1/0):o(e.minus(1));if(!e.isFinite())return new i(e.isNegative()?NaN:1/0);throw new Error("Integer BigNumber expected")},"Array | Matrix":function(e){return fj(e,this)}});function o(e){if(e<8)return new i([1,1,2,6,24,120,720,5040][e]);var t=n.precision+(0|Math.log(e.toNumber())),r=i.clone({precision:t});if(e%2==1)return e.times(o(new i(e-1)));for(var a=e,s=new r(e),u=e.toNumber();a>2;)u+=a-=2,s=s.times(u);return new i(s.toPrecision(i.precision))}})),iQ="index",sQ=iq(iQ,["typed","Index"],(e=>{var{typed:t,Index:n}=e;return t(iQ,{"...number | string | BigNumber | Range | Array | Matrix":function(e){var t=e.map((function(e){return iU(e)?e.toNumber():Array.isArray(e)||pU(e)?e.map((function(e){return iU(e)?e.toNumber():e})):e})),r=new n;return n.apply(r,t),r}})})),oQ=iq("lcm",["typed","matrix","equalScalar"],(e=>{var{typed:t,matrix:n,equalScalar:r}=e,a=xX({typed:t,equalScalar:r}),i=CX({typed:t,equalScalar:r}),s=wX({typed:t,equalScalar:r}),o=SX({typed:t}),u=kX({typed:t});return t("lcm",{"number, number":Mj,"BigNumber, BigNumber":function(e,t){if(!e.isInt()||!t.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(e.isZero())return e;if(t.isZero())return t;for(var n=e.times(t);!t.isZero();){var r=t;t=e.mod(r),e=r}return n.div(e).abs()},"Fraction, Fraction":function(e,t){return e.lcm(t)},"SparseMatrix, SparseMatrix":function(e,t){return i(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return o(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return s(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return u(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return s(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return u(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return u(n(t),e,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,n){for(var r=this(e,t),a=0;a<n.length;a++)r=this(r,n[a]);return r}})})),uQ=iq("max",["typed","config","numeric","larger"],(e=>{var{typed:t,config:n,numeric:r,larger:a}=e;return t("max",{"Array | Matrix":s,"Array | Matrix, number | BigNumber":function(e,t){return mj(e,t.valueOf(),i)},"...":function(e){if(dj(e))throw new TypeError("Scalar values expected in function max");return s(e)}});function i(e,t){try{return a(e,t)?e:t}catch(e){throw _X(e,"max",t)}}function s(e){var t;if(hj(e,(function(e){try{isNaN(e)&&"number"==typeof e?t=NaN:(void 0===t||a(e,t))&&(t=e)}catch(t){throw _X(t,"max",e)}})),void 0===t)throw new Error("Cannot calculate max of an empty array");return"string"==typeof t&&(t=r(t,n.number)),t}})),cQ=iq("quantileSeq",["typed","add","multiply","partitionSelect","compare"],(e=>{var{typed:t,add:n,multiply:r,partitionSelect:a,compare:i}=e;function s(e,t,s){var u=FV(e),c=u.length;if(0===c)throw new Error("Cannot calculate quantile of an empty sequence");if(aU(t)){var l=t*(c-1),p=l%1;if(0===p){var d=s?u[l]:a(u,l);return o(d),d}var h,f,m=Math.floor(l);if(s)h=u[m],f=u[m+1];else{f=a(u,m+1),h=u[m];for(var g=0;g<m;++g)i(u[g],h)>0&&(h=u[g])}return o(h),o(f),n(r(h,1-p),r(f,p))}var y=t.times(c-1);if(y.isInteger()){y=y.toNumber();var x=s?u[y]:a(u,y);return o(x),x}var b,v,w=y.floor(),N=y.minus(w),S=w.toNumber();if(s)b=u[S],v=u[S+1];else{v=a(u,S+1),b=u[S];for(var k=0;k<S;++k)i(u[k],b)>0&&(b=u[k])}o(b),o(v);var I=new N.constructor(1);return n(r(b,I.minus(N)),r(v,N))}var o=t({"number | BigNumber | Unit":function(e){return e}});return function(e,t,n){var r,a,i;if(arguments.length<2||arguments.length>3)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(dU(e)){if("boolean"==typeof(n=n||!1)){if(a=e.valueOf(),aU(t)){if(t<0)throw new Error("N/prob must be non-negative");if(t<=1)return s(a,t,n);if(t>1){if(!lq(t))throw new Error("N must be a positive integer");var o=t+1;r=new Array(t);for(var u=0;u<t;)r[u]=s(a,++u/o,n);return r}}if(iU(t)){var c=t.constructor;if(t.isNegative())throw new Error("N/prob must be non-negative");if(i=new c(1),t.lte(i))return new c(s(a,t,n));if(t.gt(i)){if(!t.isInteger())throw new Error("N must be a positive integer");var l=t.toNumber();if(l>4294967295)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");var p=new c(l+1);r=new Array(l);for(var d=0;d<l;)r[d]=new c(s(a,new c(++d).div(p),n));return r}}if(Array.isArray(t)){r=new Array(t.length);for(var h=0;h<r.length;++h){var f=t[h];if(aU(f)){if(f<0||f>1)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!iU(f))throw new TypeError("Unexpected type of argument in function quantileSeq");if(i=new f.constructor(1),f.isNegative()||f.gt(i))throw new Error("Probability must be between 0 and 1, inclusive")}r[h]=s(a,f,n)}return r}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}})),lQ="setDifference",pQ=iq(lQ,["typed","size","subset","compareNatural","Index","DenseMatrix"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i,DenseMatrix:s}=e;return t(lQ,{"Array | Matrix, Array | Matrix":function(e,t){var o;if(0===r(n(e),new i(0)))o=[];else{if(0===r(n(t),new i(0)))return FV(e.toArray());var u,c=qV(FV(Array.isArray(e)?e:e.toArray()).sort(a)),l=qV(FV(Array.isArray(t)?t:t.toArray()).sort(a));o=[];for(var p=0;p<c.length;p++){u=!1;for(var d=0;d<l.length;d++)if(0===a(c[p].value,l[d].value)&&c[p].identifier===l[d].identifier){u=!0;break}u||o.push(c[p])}}return Array.isArray(e)&&Array.isArray(t)?WV(o):new s(WV(o))}})})),dQ="setMultiplicity",hQ=iq(dQ,["typed","size","subset","compareNatural","Index"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i}=e;return t(dQ,{"number | BigNumber | Fraction | Complex, Array | Matrix":function(e,t){if(0===r(n(t),new i(0)))return 0;for(var s=FV(Array.isArray(t)?t:t.toArray()),o=0,u=0;u<s.length;u++)0===a(s[u],e)&&o++;return o}})})),fQ="setSymDifference",mQ=iq(fQ,["typed","size","concat","subset","setDifference","Index"],(e=>{var{typed:t,size:n,concat:r,subset:a,setDifference:i,Index:s}=e;return t(fQ,{"Array | Matrix, Array | Matrix":function(e,t){if(0===a(n(e),new s(0)))return FV(t);if(0===a(n(t),new s(0)))return FV(e);var o=FV(e),u=FV(t);return r(i(o,u),i(u,o))}})})),gQ="sort",yQ=iq(gQ,["typed","matrix","compare","compareNatural"],(e=>{var{typed:t,matrix:n,compare:r,compareNatural:a}=e,i=r,s=(e,t)=>-r(e,t);return t(gQ,{Array:function(e){return u(e),e.sort(i)},Matrix:function(e){return c(e),n(e.toArray().sort(i),e.storage())},"Array, function":function(e,t){return u(e),e.sort(t)},"Matrix, function":function(e,t){return c(e),n(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return u(e),e.sort(o(t))},"Matrix, string":function(e,t){return c(e),n(e.toArray().sort(o(t)),e.storage())}});function o(e){if("asc"===e)return i;if("desc"===e)return s;if("natural"===e)return a;throw new Error('String "asc", "desc", or "natural" expected')}function u(e){if(1!==SV(e).length)throw new Error("One dimensional array expected")}function c(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}}));function xQ(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function bQ(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xQ(Object(n),!0).forEach((function(t){mY(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xQ(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var vQ=iq("Unit",["?on","config","addScalar","subtract","multiplyScalar","divideScalar","pow","abs","fix","round","equal","isNumeric","format","number","Complex","BigNumber","Fraction"],(e=>{var t,n,r,{on:a,config:i,addScalar:s,subtract:o,multiplyScalar:u,divideScalar:c,pow:l,abs:p,fix:d,round:h,equal:f,isNumeric:m,format:g,number:y,Complex:x,BigNumber:b,Fraction:v}=e,w=y;function N(e,t){if(!(this instanceof N))throw new Error("Constructor must be called with the new operator");if(null!=e&&!m(e)&&!sU(e))throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(void 0!==t&&("string"!=typeof t||""===t))throw new TypeError("Second parameter in Unit constructor must be a string");if(void 0!==t){var n=N.parse(t);this.units=n.units,this.dimensions=n.dimensions}else{this.units=[{unit:F,prefix:$.NONE,power:0}],this.dimensions=[];for(var r=0;r<O.length;r++)this.dimensions[r]=0}this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.skipAutomaticSimplification=!0}function S(){for(;" "===r||"\t"===r;)I()}function k(e){return e>="0"&&e<="9"}function I(){n++,r=t.charAt(n)}function E(e){n=e,r=t.charAt(n)}function C(){var e="",t=n;if("+"===r?I():"-"===r&&(e+=r,I()),!function(e){return e>="0"&&e<="9"||"."===e}(r))return E(t),null;if("."===r){if(e+=r,I(),!k(r))return E(t),null}else{for(;k(r);)e+=r,I();"."===r&&(e+=r,I())}for(;k(r);)e+=r,I();if("E"===r||"e"===r){var a="",i=n;if(a+=r,I(),"+"!==r&&"-"!==r||(a+=r,I()),!k(r))return E(i),e;for(e+=a;k(r);)e+=r,I()}return e}function T(){for(var e="";k(r)||N.isValidAlpha(r);)e+=r,I();var t=e.charAt(0);return N.isValidAlpha(t)?e:null}function D(e){return r===e?(I(),e):null}N.prototype.type="Unit",N.prototype.isUnit=!0,N.parse=function(e,a){if(a=a||{},n=-1,r="","string"!=typeof(t=e))throw new TypeError("Invalid argument in Unit.parse, string expected");var s=new N;s.units=[];var o=1,u=!1;I(),S();var c=C(),l=null;if(c){if("BigNumber"===i.number)l=new b(c);else if("Fraction"===i.number)try{l=new v(c)}catch(e){l=parseFloat(c)}else l=parseFloat(c);S(),D("*")?(o=1,u=!0):D("/")&&(o=-1,u=!0)}for(var p=[],d=1;;){for(S();"("===r;)p.push(o),d*=o,o=1,I(),S();var h;if(!r)break;var f=r;if(null===(h=T()))throw new SyntaxError('Unexpected "'+f+'" in "'+t+'" at index '+n.toString());var m=A(h);if(null===m)throw new SyntaxError('Unit "'+h+'" not found.');var g=o*d;if(S(),D("^")){S();var y=C();if(null===y)throw new SyntaxError('In "'+e+'", "^" must be followed by a floating-point number');g*=y}s.units.push({unit:m.unit,prefix:m.prefix,power:g});for(var x=0;x<O.length;x++)s.dimensions[x]+=(m.unit.dimensions[x]||0)*g;for(S();")"===r;){if(0===p.length)throw new SyntaxError('Unmatched ")" in "'+t+'" at index '+n.toString());d/=p.pop(),I(),S()}if(u=!1,D("*")?(o=1,u=!0):D("/")?(o=-1,u=!0):o=1,m.unit.base){var w=m.unit.base.key;P.auto[w]={unit:m.unit,prefix:m.prefix}}}if(S(),r)throw new SyntaxError('Could not parse: "'+e+'"');if(u)throw new SyntaxError('Trailing characters: "'+e+'"');if(0!==p.length)throw new SyntaxError('Unmatched "(" in "'+t+'"');if(0===s.units.length&&!a.allowNoUnits)throw new SyntaxError('"'+e+'" contains no units');return s.value=void 0!==l?s._normalize(l):null,s},N.prototype.clone=function(){var e=new N;e.fixPrefix=this.fixPrefix,e.skipAutomaticSimplification=this.skipAutomaticSimplification,e.value=WU(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var n in e.units[t]={},this.units[t])YU(this.units[t],n)&&(e.units[t][n]=this.units[t][n]);return e},N.prototype._isDerived=function(){return 0!==this.units.length&&(this.units.length>1||Math.abs(this.units[0].power-1)>1e-15)},N.prototype._normalize=function(e){var t,n,r,a,i;if(null==e||0===this.units.length)return e;if(this._isDerived()){var o=e;i=N._getNumberConverter(qU(e));for(var c=0;c<this.units.length;c++)t=i(this.units[c].unit.value),a=i(this.units[c].prefix.value),r=i(this.units[c].power),o=u(o,l(u(t,a),r));return o}return t=(i=N._getNumberConverter(qU(e)))(this.units[0].unit.value),n=i(this.units[0].unit.offset),a=i(this.units[0].prefix.value),u(s(e,n),u(t,a))},N.prototype._denormalize=function(e,t){var n,r,a,i,s;if(null==e||0===this.units.length)return e;if(this._isDerived()){var p=e;s=N._getNumberConverter(qU(e));for(var d=0;d<this.units.length;d++)n=s(this.units[d].unit.value),i=s(this.units[d].prefix.value),a=s(this.units[d].power),p=c(p,l(u(n,i),a));return p}return n=(s=N._getNumberConverter(qU(e)))(this.units[0].unit.value),i=s(this.units[0].prefix.value),r=s(this.units[0].unit.offset),o(c(c(e,n),null==t?i:t),r)};var A=Rq((e=>{if(YU(z,e)){var t=z[e];return{unit:t,prefix:t.prefixes[""]}}for(var n in z)if(YU(z,n)&&mV(e,n)){var r=z[n],a=e.length-n.length,i=e.substring(0,a),s=YU(r.prefixes,i)?r.prefixes[i]:void 0;if(void 0!==s)return{unit:r,prefix:s}}return null}),{hasher:e=>e[0],limit:100});function M(e){return e.equalBase(R.NONE)&&null!==e.value&&!i.predictable?e.value:e}N.isValuelessUnit=function(e){return null!==A(e)},N.prototype.hasBase=function(e){if("string"==typeof e&&(e=R[e]),!e)return!1;for(var t=0;t<O.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},N.prototype.equalBase=function(e){for(var t=0;t<O.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},N.prototype.equals=function(e){return this.equalBase(e)&&f(this.value,e.value)},N.prototype.multiply=function(e){for(var t=this.clone(),n=0;n<O.length;n++)t.dimensions[n]=(this.dimensions[n]||0)+(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var a=bQ({},e.units[r]);t.units.push(a)}if(null!==this.value||null!==e.value){var i=null===this.value?this._normalize(1):this.value,s=null===e.value?e._normalize(1):e.value;t.value=u(i,s)}else t.value=null;return t.skipAutomaticSimplification=!1,M(t)},N.prototype.divide=function(e){for(var t=this.clone(),n=0;n<O.length;n++)t.dimensions[n]=(this.dimensions[n]||0)-(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var a=bQ(bQ({},e.units[r]),{},{power:-e.units[r].power});t.units.push(a)}if(null!==this.value||null!==e.value){var i=null===this.value?this._normalize(1):this.value,s=null===e.value?e._normalize(1):e.value;t.value=c(i,s)}else t.value=null;return t.skipAutomaticSimplification=!1,M(t)},N.prototype.pow=function(e){for(var t=this.clone(),n=0;n<O.length;n++)t.dimensions[n]=(this.dimensions[n]||0)*e;for(var r=0;r<t.units.length;r++)t.units[r].power*=e;return null!==t.value?t.value=l(t.value,e):t.value=null,t.skipAutomaticSimplification=!1,M(t)},N.prototype.abs=function(){var e=this.clone();for(var t in e.value=null!==e.value?p(e.value):null,e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=z.W);return e},N.prototype.to=function(e){var t,n=null===this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=N.parse(e),!this.equalBase(t))throw new Error("Units do not match ('".concat(t.toString(),"' != '").concat(this.toString(),"')"));if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=WU(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}if(uU(e)){if(!this.equalBase(e))throw new Error("Units do not match ('".concat(e.toString(),"' != '").concat(this.toString(),"')"));if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=WU(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}throw new Error("String or Unit expected as parameter")},N.prototype.toNumber=function(e){return w(this.toNumeric(e))},N.prototype.toNumeric=function(e){var t;return(t=e?this.to(e):this.clone())._isDerived()||0===t.units.length?t._denormalize(t.value):t._denormalize(t.value,t.units[0].prefix.value)},N.prototype.toString=function(){return this.format()},N.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},N.fromJSON=function(e){var t=new N(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},N.prototype.valueOf=N.prototype.toString,N.prototype.simplify=function(){var e,t,n=this.clone(),r=[];for(var a in U)if(YU(U,a)&&n.hasBase(R[a])){e=a;break}if("NONE"===e)n.units=[];else if(e&&YU(U,e)&&(t=U[e]),t)n.units=[{unit:t.unit,prefix:t.prefix,power:1}];else{for(var i=!1,s=0;s<O.length;s++){var o=O[s];Math.abs(n.dimensions[s]||0)>1e-12&&(YU(U,o)?r.push({unit:U[o].unit,prefix:U[o].prefix,power:n.dimensions[s]||0}):i=!0)}r.length<n.units.length&&!i&&(n.units=r)}return n},N.prototype.toSI=function(){for(var e=this.clone(),t=[],n=0;n<O.length;n++){var r=O[n];if(Math.abs(e.dimensions[n]||0)>1e-12){if(!YU(P.si,r))throw new Error("Cannot express custom unit "+r+" in SI units");t.push({unit:P.si[r].unit,prefix:P.si[r].prefix,power:e.dimensions[n]||0})}}return e.units=t,e.fixPrefix=!0,e.skipAutomaticSimplification=!0,e},N.prototype.formatUnits=function(){for(var e="",t="",n=0,r=0,a=0;a<this.units.length;a++)this.units[a].power>0?(n++,e+=" "+this.units[a].prefix.name+this.units[a].unit.name,Math.abs(this.units[a].power-1)>1e-15&&(e+="^"+this.units[a].power)):this.units[a].power<0&&r++;if(r>0)for(var i=0;i<this.units.length;i++)this.units[i].power<0&&(n>0?(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,Math.abs(this.units[i].power+1)>1e-15&&(t+="^"+-this.units[i].power)):(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,t+="^"+this.units[i].power));e=e.substr(1),t=t.substr(1),n>1&&r>0&&(e="("+e+")"),r>1&&n>0&&(t="("+t+")");var s=e;return n>0&&r>0&&(s+=" / "),s+t},N.prototype.format=function(e){var t=this.skipAutomaticSimplification||null===this.value?this.clone():this.simplify(),n=!1;for(var r in void 0!==t.value&&null!==t.value&&sU(t.value)&&(n=Math.abs(t.value.re)<1e-14),t.units)YU(t.units,r)&&t.units[r].unit&&("VA"===t.units[r].unit.name&&n?t.units[r].unit=z.VAR:"VAR"!==t.units[r].unit.name||n||(t.units[r].unit=z.VA));1!==t.units.length||t.fixPrefix||Math.abs(t.units[0].power-Math.round(t.units[0].power))<1e-14&&(t.units[0].prefix=t._bestPrefix());var a=t._denormalize(t.value),i=null!==t.value?g(a,e||{}):"",s=t.formatUnits();return t.value&&sU(t.value)&&(i="("+i+")"),s.length>0&&i.length>0&&(i+=" "),i+s},N.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(Math.abs(this.units[0].power-Math.round(this.units[0].power))>=1e-14)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=null!==this.value?p(this.value):0,t=p(this.units[0].unit.value),n=this.units[0].prefix;if(0===e)return n;var r=this.units[0].power,a=Math.log(e/Math.pow(n.value*t,r))/Math.LN10-1.2;if(a>-2.200001&&a<1.800001)return n;a=Math.abs(a);var i=this.units[0].unit.prefixes;for(var s in i)if(YU(i,s)){var o=i[s];if(o.scientific){var u=Math.abs(Math.log(e/Math.pow(o.value*t,r))/Math.LN10-1.2);(u<a||u===a&&o.name.length<n.name.length)&&(n=o,a=u)}}return n},N.prototype.splitUnit=function(e){for(var t=this.clone(),n=[],r=0;r<e.length&&(t=t.to(e[r]),r!==e.length-1);r++){var a=t.toNumeric(),i=h(a),u=new N(f(i,a)?i:d(t.toNumeric()),e[r].toString());n.push(u),t=o(t,u)}for(var c=0,l=0;l<n.length;l++)c=s(c,n[l].value);return f(c,this.value)&&(t.value=0),n.push(t),n};var $={NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!1},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT_SI:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0}},BINARY_SHORT_IEC:{"":{name:"",value:1,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG_SI:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0}},BINARY_LONG_IEC:{"":{name:"",value:1,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}};$.SHORTLONG=nU({},$.SHORT,$.LONG),$.BINARY_SHORT=nU({},$.BINARY_SHORT_SI,$.BINARY_SHORT_IEC),$.BINARY_LONG=nU({},$.BINARY_LONG_SI,$.BINARY_LONG_IEC);var O=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],R={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(var _ in R)YU(R,_)&&(R[_].key=_);var F={name:"",base:{},value:1,offset:0,dimensions:O.map((e=>0))},z={meter:{name:"meter",base:R.LENGTH,prefixes:$.LONG,value:1,offset:0},inch:{name:"inch",base:R.LENGTH,prefixes:$.NONE,value:.0254,offset:0},foot:{name:"foot",base:R.LENGTH,prefixes:$.NONE,value:.3048,offset:0},yard:{name:"yard",base:R.LENGTH,prefixes:$.NONE,value:.9144,offset:0},mile:{name:"mile",base:R.LENGTH,prefixes:$.NONE,value:1609.344,offset:0},link:{name:"link",base:R.LENGTH,prefixes:$.NONE,value:.201168,offset:0},rod:{name:"rod",base:R.LENGTH,prefixes:$.NONE,value:5.0292,offset:0},chain:{name:"chain",base:R.LENGTH,prefixes:$.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:R.LENGTH,prefixes:$.NONE,value:1e-10,offset:0},m:{name:"m",base:R.LENGTH,prefixes:$.SHORT,value:1,offset:0},in:{name:"in",base:R.LENGTH,prefixes:$.NONE,value:.0254,offset:0},ft:{name:"ft",base:R.LENGTH,prefixes:$.NONE,value:.3048,offset:0},yd:{name:"yd",base:R.LENGTH,prefixes:$.NONE,value:.9144,offset:0},mi:{name:"mi",base:R.LENGTH,prefixes:$.NONE,value:1609.344,offset:0},li:{name:"li",base:R.LENGTH,prefixes:$.NONE,value:.201168,offset:0},rd:{name:"rd",base:R.LENGTH,prefixes:$.NONE,value:5.02921,offset:0},ch:{name:"ch",base:R.LENGTH,prefixes:$.NONE,value:20.1168,offset:0},mil:{name:"mil",base:R.LENGTH,prefixes:$.NONE,value:254e-7,offset:0},m2:{name:"m2",base:R.SURFACE,prefixes:$.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:R.SURFACE,prefixes:$.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:R.SURFACE,prefixes:$.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:R.SURFACE,prefixes:$.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:R.SURFACE,prefixes:$.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:R.SURFACE,prefixes:$.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:R.SURFACE,prefixes:$.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:R.SURFACE,prefixes:$.NONE,value:6.4516e-10,offset:0},acre:{name:"acre",base:R.SURFACE,prefixes:$.NONE,value:4046.86,offset:0},hectare:{name:"hectare",base:R.SURFACE,prefixes:$.NONE,value:1e4,offset:0},m3:{name:"m3",base:R.VOLUME,prefixes:$.CUBIC,value:1,offset:0},L:{name:"L",base:R.VOLUME,prefixes:$.SHORT,value:.001,offset:0},l:{name:"l",base:R.VOLUME,prefixes:$.SHORT,value:.001,offset:0},litre:{name:"litre",base:R.VOLUME,prefixes:$.LONG,value:.001,offset:0},cuin:{name:"cuin",base:R.VOLUME,prefixes:$.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:R.VOLUME,prefixes:$.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:R.VOLUME,prefixes:$.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:R.VOLUME,prefixes:$.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:R.VOLUME,prefixes:$.NONE,value:15e-6,offset:0},drop:{name:"drop",base:R.VOLUME,prefixes:$.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:R.VOLUME,prefixes:$.NONE,value:5e-8,offset:0},minim:{name:"minim",base:R.VOLUME,prefixes:$.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:R.VOLUME,prefixes:$.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:R.VOLUME,prefixes:$.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:R.VOLUME,prefixes:$.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:R.VOLUME,prefixes:$.NONE,value:1e-6,offset:0},cup:{name:"cup",base:R.VOLUME,prefixes:$.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:R.VOLUME,prefixes:$.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:R.VOLUME,prefixes:$.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:R.VOLUME,prefixes:$.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:R.VOLUME,prefixes:$.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:R.VOLUME,prefixes:$.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:R.VOLUME,prefixes:$.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:R.VOLUME,prefixes:$.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:R.VOLUME,prefixes:$.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:R.VOLUME,prefixes:$.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:R.VOLUME,prefixes:$.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:R.VOLUME,prefixes:$.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:R.VOLUME,prefixes:$.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:R.VOLUME,prefixes:$.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:R.VOLUME,prefixes:$.NONE,value:.1173478,offset:0},obl:{name:"obl",base:R.VOLUME,prefixes:$.NONE,value:.1589873,offset:0},g:{name:"g",base:R.MASS,prefixes:$.SHORT,value:.001,offset:0},gram:{name:"gram",base:R.MASS,prefixes:$.LONG,value:.001,offset:0},ton:{name:"ton",base:R.MASS,prefixes:$.SHORT,value:907.18474,offset:0},t:{name:"t",base:R.MASS,prefixes:$.SHORT,value:1e3,offset:0},tonne:{name:"tonne",base:R.MASS,prefixes:$.LONG,value:1e3,offset:0},grain:{name:"grain",base:R.MASS,prefixes:$.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:R.MASS,prefixes:$.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:R.MASS,prefixes:$.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:R.MASS,prefixes:$.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:R.MASS,prefixes:$.NONE,value:45.359237,offset:0},stick:{name:"stick",base:R.MASS,prefixes:$.NONE,value:.115,offset:0},stone:{name:"stone",base:R.MASS,prefixes:$.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:R.MASS,prefixes:$.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:R.MASS,prefixes:$.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:R.MASS,prefixes:$.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:R.MASS,prefixes:$.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:R.MASS,prefixes:$.NONE,value:45.359237,offset:0},s:{name:"s",base:R.TIME,prefixes:$.SHORT,value:1,offset:0},min:{name:"min",base:R.TIME,prefixes:$.NONE,value:60,offset:0},h:{name:"h",base:R.TIME,prefixes:$.NONE,value:3600,offset:0},second:{name:"second",base:R.TIME,prefixes:$.LONG,value:1,offset:0},sec:{name:"sec",base:R.TIME,prefixes:$.LONG,value:1,offset:0},minute:{name:"minute",base:R.TIME,prefixes:$.NONE,value:60,offset:0},hour:{name:"hour",base:R.TIME,prefixes:$.NONE,value:3600,offset:0},day:{name:"day",base:R.TIME,prefixes:$.NONE,value:86400,offset:0},week:{name:"week",base:R.TIME,prefixes:$.NONE,value:604800,offset:0},month:{name:"month",base:R.TIME,prefixes:$.NONE,value:2629800,offset:0},year:{name:"year",base:R.TIME,prefixes:$.NONE,value:31557600,offset:0},decade:{name:"decade",base:R.TIME,prefixes:$.NONE,value:315576e3,offset:0},century:{name:"century",base:R.TIME,prefixes:$.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:R.TIME,prefixes:$.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:R.FREQUENCY,prefixes:$.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:R.FREQUENCY,prefixes:$.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:R.ANGLE,prefixes:$.SHORT,value:1,offset:0},radian:{name:"radian",base:R.ANGLE,prefixes:$.LONG,value:1,offset:0},deg:{name:"deg",base:R.ANGLE,prefixes:$.SHORT,value:null,offset:0},degree:{name:"degree",base:R.ANGLE,prefixes:$.LONG,value:null,offset:0},grad:{name:"grad",base:R.ANGLE,prefixes:$.SHORT,value:null,offset:0},gradian:{name:"gradian",base:R.ANGLE,prefixes:$.LONG,value:null,offset:0},cycle:{name:"cycle",base:R.ANGLE,prefixes:$.NONE,value:null,offset:0},arcsec:{name:"arcsec",base:R.ANGLE,prefixes:$.NONE,value:null,offset:0},arcmin:{name:"arcmin",base:R.ANGLE,prefixes:$.NONE,value:null,offset:0},A:{name:"A",base:R.CURRENT,prefixes:$.SHORT,value:1,offset:0},ampere:{name:"ampere",base:R.CURRENT,prefixes:$.LONG,value:1,offset:0},K:{name:"K",base:R.TEMPERATURE,prefixes:$.NONE,value:1,offset:0},degC:{name:"degC",base:R.TEMPERATURE,prefixes:$.NONE,value:1,offset:273.15},degF:{name:"degF",base:R.TEMPERATURE,prefixes:$.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:R.TEMPERATURE,prefixes:$.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:R.TEMPERATURE,prefixes:$.NONE,value:1,offset:0},celsius:{name:"celsius",base:R.TEMPERATURE,prefixes:$.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:R.TEMPERATURE,prefixes:$.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:R.TEMPERATURE,prefixes:$.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:R.AMOUNT_OF_SUBSTANCE,prefixes:$.SHORT,value:1,offset:0},mole:{name:"mole",base:R.AMOUNT_OF_SUBSTANCE,prefixes:$.LONG,value:1,offset:0},cd:{name:"cd",base:R.LUMINOUS_INTENSITY,prefixes:$.SHORT,value:1,offset:0},candela:{name:"candela",base:R.LUMINOUS_INTENSITY,prefixes:$.LONG,value:1,offset:0},N:{name:"N",base:R.FORCE,prefixes:$.SHORT,value:1,offset:0},newton:{name:"newton",base:R.FORCE,prefixes:$.LONG,value:1,offset:0},dyn:{name:"dyn",base:R.FORCE,prefixes:$.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:R.FORCE,prefixes:$.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:R.FORCE,prefixes:$.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:R.FORCE,prefixes:$.NONE,value:4.4482216152605,offset:0},kip:{name:"kip",base:R.FORCE,prefixes:$.LONG,value:4448.2216,offset:0},kilogramforce:{name:"kilogramforce",base:R.FORCE,prefixes:$.NONE,value:9.80665,offset:0},J:{name:"J",base:R.ENERGY,prefixes:$.SHORT,value:1,offset:0},joule:{name:"joule",base:R.ENERGY,prefixes:$.SHORT,value:1,offset:0},erg:{name:"erg",base:R.ENERGY,prefixes:$.NONE,value:1e-7,offset:0},Wh:{name:"Wh",base:R.ENERGY,prefixes:$.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:R.ENERGY,prefixes:$.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:R.ENERGY,prefixes:$.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:R.ENERGY,prefixes:$.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:R.POWER,prefixes:$.SHORT,value:1,offset:0},watt:{name:"watt",base:R.POWER,prefixes:$.LONG,value:1,offset:0},hp:{name:"hp",base:R.POWER,prefixes:$.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:R.POWER,prefixes:$.SHORT,value:x.I,offset:0},VA:{name:"VA",base:R.POWER,prefixes:$.SHORT,value:1,offset:0},Pa:{name:"Pa",base:R.PRESSURE,prefixes:$.SHORT,value:1,offset:0},psi:{name:"psi",base:R.PRESSURE,prefixes:$.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:R.PRESSURE,prefixes:$.NONE,value:101325,offset:0},bar:{name:"bar",base:R.PRESSURE,prefixes:$.SHORTLONG,value:1e5,offset:0},torr:{name:"torr",base:R.PRESSURE,prefixes:$.NONE,value:133.322,offset:0},mmHg:{name:"mmHg",base:R.PRESSURE,prefixes:$.NONE,value:133.322,offset:0},mmH2O:{name:"mmH2O",base:R.PRESSURE,prefixes:$.NONE,value:9.80665,offset:0},cmH2O:{name:"cmH2O",base:R.PRESSURE,prefixes:$.NONE,value:98.0665,offset:0},coulomb:{name:"coulomb",base:R.ELECTRIC_CHARGE,prefixes:$.LONG,value:1,offset:0},C:{name:"C",base:R.ELECTRIC_CHARGE,prefixes:$.SHORT,value:1,offset:0},farad:{name:"farad",base:R.ELECTRIC_CAPACITANCE,prefixes:$.LONG,value:1,offset:0},F:{name:"F",base:R.ELECTRIC_CAPACITANCE,prefixes:$.SHORT,value:1,offset:0},volt:{name:"volt",base:R.ELECTRIC_POTENTIAL,prefixes:$.LONG,value:1,offset:0},V:{name:"V",base:R.ELECTRIC_POTENTIAL,prefixes:$.SHORT,value:1,offset:0},ohm:{name:"ohm",base:R.ELECTRIC_RESISTANCE,prefixes:$.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:R.ELECTRIC_INDUCTANCE,prefixes:$.LONG,value:1,offset:0},H:{name:"H",base:R.ELECTRIC_INDUCTANCE,prefixes:$.SHORT,value:1,offset:0},siemens:{name:"siemens",base:R.ELECTRIC_CONDUCTANCE,prefixes:$.LONG,value:1,offset:0},S:{name:"S",base:R.ELECTRIC_CONDUCTANCE,prefixes:$.SHORT,value:1,offset:0},weber:{name:"weber",base:R.MAGNETIC_FLUX,prefixes:$.LONG,value:1,offset:0},Wb:{name:"Wb",base:R.MAGNETIC_FLUX,prefixes:$.SHORT,value:1,offset:0},tesla:{name:"tesla",base:R.MAGNETIC_FLUX_DENSITY,prefixes:$.LONG,value:1,offset:0},T:{name:"T",base:R.MAGNETIC_FLUX_DENSITY,prefixes:$.SHORT,value:1,offset:0},b:{name:"b",base:R.BIT,prefixes:$.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:R.BIT,prefixes:$.BINARY_LONG,value:1,offset:0},B:{name:"B",base:R.BIT,prefixes:$.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:R.BIT,prefixes:$.BINARY_LONG,value:8,offset:0}},B={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",kips:"kip",kgf:"kilogramforce",acres:"acre",hectares:"hectare",sqfeet:"sqft",sqyard:"sqyd",sqmile:"sqmi",sqmiles:"sqmi",mmhg:"mmHg",mmh2o:"mmH2O",cmh2o:"cmH2O",seconds:"second",secs:"second",minutes:"minute",mins:"minute",hours:"hour",hr:"hour",hrs:"hour",days:"day",weeks:"week",months:"month",years:"year",decades:"decade",centuries:"century",millennia:"millennium",hertz:"hertz",radians:"radian",degrees:"degree",gradians:"gradian",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole",bit:"bits",byte:"bytes"};function L(e){if("BigNumber"===e.number){var t=Bq(b);z.rad.value=new b(1),z.deg.value=t.div(180),z.grad.value=t.div(200),z.cycle.value=t.times(2),z.arcsec.value=t.div(648e3),z.arcmin.value=t.div(10800)}else z.rad.value=1,z.deg.value=Math.PI/180,z.grad.value=Math.PI/200,z.cycle.value=2*Math.PI,z.arcsec.value=Math.PI/648e3,z.arcmin.value=Math.PI/10800;z.radian.value=z.rad.value,z.degree.value=z.deg.value,z.gradian.value=z.grad.value}L(i),a&&a("config",(function(e,t){e.number!==t.number&&L(e)}));var P={si:{NONE:{unit:F,prefix:$.NONE[""]},LENGTH:{unit:z.m,prefix:$.SHORT[""]},MASS:{unit:z.g,prefix:$.SHORT.k},TIME:{unit:z.s,prefix:$.SHORT[""]},CURRENT:{unit:z.A,prefix:$.SHORT[""]},TEMPERATURE:{unit:z.K,prefix:$.SHORT[""]},LUMINOUS_INTENSITY:{unit:z.cd,prefix:$.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:z.mol,prefix:$.SHORT[""]},ANGLE:{unit:z.rad,prefix:$.SHORT[""]},BIT:{unit:z.bits,prefix:$.SHORT[""]},FORCE:{unit:z.N,prefix:$.SHORT[""]},ENERGY:{unit:z.J,prefix:$.SHORT[""]},POWER:{unit:z.W,prefix:$.SHORT[""]},PRESSURE:{unit:z.Pa,prefix:$.SHORT[""]},ELECTRIC_CHARGE:{unit:z.C,prefix:$.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:z.F,prefix:$.SHORT[""]},ELECTRIC_POTENTIAL:{unit:z.V,prefix:$.SHORT[""]},ELECTRIC_RESISTANCE:{unit:z.ohm,prefix:$.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:z.H,prefix:$.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:z.S,prefix:$.SHORT[""]},MAGNETIC_FLUX:{unit:z.Wb,prefix:$.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:z.T,prefix:$.SHORT[""]},FREQUENCY:{unit:z.Hz,prefix:$.SHORT[""]}}};P.cgs=JSON.parse(JSON.stringify(P.si)),P.cgs.LENGTH={unit:z.m,prefix:$.SHORT.c},P.cgs.MASS={unit:z.g,prefix:$.SHORT[""]},P.cgs.FORCE={unit:z.dyn,prefix:$.SHORT[""]},P.cgs.ENERGY={unit:z.erg,prefix:$.NONE[""]},P.us=JSON.parse(JSON.stringify(P.si)),P.us.LENGTH={unit:z.ft,prefix:$.NONE[""]},P.us.MASS={unit:z.lbm,prefix:$.NONE[""]},P.us.TEMPERATURE={unit:z.degF,prefix:$.NONE[""]},P.us.FORCE={unit:z.lbf,prefix:$.NONE[""]},P.us.ENERGY={unit:z.BTU,prefix:$.BTU[""]},P.us.POWER={unit:z.hp,prefix:$.NONE[""]},P.us.PRESSURE={unit:z.psi,prefix:$.NONE[""]},P.auto=JSON.parse(JSON.stringify(P.si));var U=P.auto;for(var q in N.setUnitSystem=function(e){if(!YU(P,e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(P).join(", "));U=P[e]},N.getUnitSystem=function(){for(var e in P)if(YU(P,e)&&P[e]===U)return e},N.typeConverters={BigNumber:function(e){return new b(e+"")},Fraction:function(e){return new v(e)},Complex:function(e){return e},number:function(e){return e}},N._getNumberConverter=function(e){if(!N.typeConverters[e])throw new TypeError('Unsupported type "'+e+'"');return N.typeConverters[e]},z)if(YU(z,q)){var W=z[q];W.dimensions=W.base.dimensions}for(var V in B)if(YU(B,V)){var j=z[B[V]],G={};for(var H in j)YU(j,H)&&(G[H]=j[H]);G.name=V,z[V]=G}return N.isValidAlpha=function(e){return/^[a-zA-Z]$/.test(e)},N.createUnit=function(e,t){if("object"!=typeof e)throw new TypeError("createUnit expects first parameter to be of type 'Object'");if(t&&t.override)for(var n in e)if(YU(e,n)&&N.deleteUnit(n),e[n].aliases)for(var r=0;r<e[n].aliases.length;r++)N.deleteUnit(e[n].aliases[r]);var a;for(var i in e)YU(e,i)&&(a=N.createUnitSingle(i,e[i]));return a},N.createUnitSingle=function(e,t,n){if(null==t&&(t={}),"string"!=typeof e)throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");if(YU(z,e))throw new Error('Cannot create unit "'+e+'": a unit with that name already exists');!function(e){for(var t=0;t<e.length;t++){if(r=e.charAt(t),0===t&&!N.isValidAlpha(r))throw new Error('Invalid unit name (must begin with alpha character): "'+e+'"');if(t>0&&!N.isValidAlpha(r)&&!k(r))throw new Error('Invalid unit name (only alphanumeric characters are allowed): "'+e+'"')}}(e);var a,i,s,o=null,u=[],c=0;if(t&&"Unit"===t.type)o=t.clone();else if("string"==typeof t)""!==t&&(a=t);else{if("object"!=typeof t)throw new TypeError('Cannot create unit "'+e+'" from "'+t.toString()+'": expecting "string" or "Unit" or "Object"');a=t.definition,i=t.prefixes,c=t.offset,s=t.baseName,t.aliases&&(u=t.aliases.valueOf())}if(u)for(var l=0;l<u.length;l++)if(YU(z,u[l]))throw new Error('Cannot create alias "'+u[l]+'": a unit with that name already exists');if(a&&"string"==typeof a&&!o)try{o=N.parse(a,{allowNoUnits:!0})}catch(t){throw t.message='Could not create unit "'+e+'" from "'+a+'": '+t.message,t}else a&&"Unit"===a.type&&(o=a.clone());u=u||[],c=c||0,i=i&&i.toUpperCase&&$[i.toUpperCase()]||$.NONE;var p={};if(o){p={name:e,value:o.value,dimensions:o.dimensions.slice(0),prefixes:i,offset:c};var d=!1;for(var h in R)if(YU(R,h)){for(var f=!0,m=0;m<O.length;m++)if(Math.abs((p.dimensions[m]||0)-(R[h].dimensions[m]||0))>1e-12){f=!1;break}if(f){d=!0,p.base=R[h];break}}if(!d){s=s||e+"_STUFF";var g={dimensions:o.dimensions.slice(0)};g.key=s,R[s]=g,U[s]={unit:p,prefix:$.NONE[""]},p.base=R[s]}}else{if(s=s||e+"_STUFF",O.indexOf(s)>=0)throw new Error('Cannot create new base unit "'+e+'": a base unit with that name already exists (and cannot be overridden)');for(var y in O.push(s),R)YU(R,y)&&(R[y].dimensions[O.length-1]=0);for(var x={dimensions:[]},b=0;b<O.length;b++)x.dimensions[b]=0;x.dimensions[O.length-1]=1,x.key=s,R[s]=x,p={name:e,value:1,dimensions:R[s].dimensions.slice(0),prefixes:i,offset:c,base:R[s]},U[s]={unit:p,prefix:$.NONE[""]}}N.UNITS[e]=p;for(var v=0;v<u.length;v++){var w=u[v],S={};for(var I in p)YU(p,I)&&(S[I]=p[I]);S.name=w,N.UNITS[w]=S}return delete A.cache,new N(null,e)},N.deleteUnit=function(e){delete N.UNITS[e]},N.PREFIXES=$,N.BASE_DIMENSIONS=O,N.BASE_UNITS=R,N.UNIT_SYSTEMS=P,N.UNITS=z,N}),{isClass:!0}),wQ="createUnit",NQ=iq(wQ,["typed","Unit"],(e=>{var{typed:t,Unit:n}=e;return t(wQ,{"Object, Object":function(e,t){return n.createUnit(e,t)},Object:function(e){return n.createUnit(e,{})},"string, Unit | string | Object, Object":function(e,t,r){var a={};return a[e]=t,n.createUnit(a,r)},"string, Unit | string | Object":function(e,t){var r={};return r[e]=t,n.createUnit(r,{})},string:function(e){var t={};return t[e]={},n.createUnit(t,{})}})})),SQ="dotPow",kQ=iq(SQ,["typed","equalScalar","matrix","pow","DenseMatrix"],(e=>{var{typed:t,equalScalar:n,matrix:r,pow:a,DenseMatrix:i}=e,s=bX({typed:t}),o=qX({typed:t,DenseMatrix:i}),u=wX({typed:t,equalScalar:n}),c=NX({typed:t,DenseMatrix:i}),l=SX({typed:t}),p=kX({typed:t});return t(SQ,{"any, any":a,"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,a,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,a,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,a,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,a)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return u(e,t,this,!1)},"DenseMatrix, any":function(e,t){return p(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return p(t,e,this,!0)},"Array, any":function(e,t){return p(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return p(r(t),e,this,!0).valueOf()}})})),IQ="factorial",EQ=iq(IQ,["typed","gamma"],(e=>{var{typed:t,gamma:n}=e;return t(IQ,{number:function(e){if(e<0)throw new Error("Value must be non-negative");return n(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return n(e.plus(1))},"Array | Matrix":function(e){return fj(e,this)}})})),CQ=iq("intersect",["typed","config","abs","add","addScalar","matrix","multiply","multiplyScalar","divideScalar","subtract","smaller","equalScalar","flatten","isZero","isNumeric"],(e=>{var{typed:t,config:n,abs:r,add:a,addScalar:i,matrix:s,multiply:o,multiplyScalar:u,divideScalar:c,subtract:l,smaller:p,equalScalar:d,flatten:h,isZero:f,isNumeric:m}=e;return t("intersect",{"Array, Array, Array":g,"Array, Array, Array, Array":y,"Matrix, Matrix, Matrix":function(e,t,n){var r=g(e.valueOf(),t.valueOf(),n.valueOf());return null===r?null:s(r)},"Matrix, Matrix, Matrix, Matrix":function(e,t,n,r){var a=y(e.valueOf(),t.valueOf(),n.valueOf(),r.valueOf());return null===a?null:s(a)}});function g(e,t,n){if(e=x(e),t=x(t),n=x(n),!v(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!v(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!function(e){return 4===e.length&&m(e[0])&&m(e[1])&&m(e[2])&&m(e[3])}(n))throw new TypeError("Array with 4 numbers expected as third argument");return function(e,t,n,r,a,s,o,p,d,h){var f=u(e,o),m=u(r,o),g=u(t,p),y=u(a,p),x=u(n,d),b=u(s,d),v=l(l(l(h,f),g),x),w=l(l(l(i(i(m,y),b),f),g),x),N=c(v,w);return[i(e,u(N,l(r,e))),i(t,u(N,l(a,t))),i(n,u(N,l(s,n)))]}(e[0],e[1],e[2],t[0],t[1],t[2],n[0],n[1],n[2],n[3])}function y(e,t,s,h){if(e=x(e),t=x(t),s=x(s),h=x(h),2===e.length){if(!b(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!b(t))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!b(s))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");if(!b(h))throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");return function(e,t,s,d){var h=e,m=s,g=l(h,t),y=l(m,d),x=l(u(g[0],y[1]),u(y[0],g[1]));if(f(x))return null;if(p(r(x),n.epsilon))return null;var b=u(y[0],h[1]),v=u(y[1],h[0]),w=u(y[0],m[1]),N=u(y[1],m[0]),S=c(i(l(l(b,v),w),N),x);return a(o(g,S),h)}(e,t,s,h)}if(3===e.length){if(!v(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!v(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!v(s))throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");if(!v(h))throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");return function(e,t,n,r,a,s,o,p,h,m,g,y){var x=w(e,o,m,o,t,p,g,p,n,h,y,h),b=w(m,o,r,e,g,p,a,t,y,h,s,n),v=w(e,o,r,e,t,p,a,t,n,h,s,n),N=w(m,o,m,o,g,p,g,p,y,h,y,h),S=w(r,e,r,e,a,t,a,t,s,n,s,n),k=l(u(x,b),u(v,N)),I=l(u(S,N),u(b,b));if(f(I))return null;var E=c(k,I),C=c(i(x,u(E,b)),N),T=i(e,u(E,l(r,e))),D=i(t,u(E,l(a,t))),A=i(n,u(E,l(s,n))),M=i(o,u(C,l(m,o))),$=i(p,u(C,l(g,p))),O=i(h,u(C,l(y,h)));return d(T,M)&&d(D,$)&&d(A,O)?[T,D,A]:null}(e[0],e[1],e[2],t[0],t[1],t[2],s[0],s[1],s[2],h[0],h[1],h[2])}throw new TypeError("Arrays with two or thee dimensional points expected")}function x(e){return 1===e.length?e[0]:e.length>1&&Array.isArray(e[0])&&e.every((e=>Array.isArray(e)&&1===e.length))?h(e):e}function b(e){return 2===e.length&&m(e[0])&&m(e[1])}function v(e){return 3===e.length&&m(e[0])&&m(e[1])&&m(e[2])}function w(e,t,n,r,a,s,o,c,p,d,h,f){var m=u(l(e,t),l(n,r)),g=u(l(a,s),l(o,c)),y=u(l(p,d),l(h,f));return i(i(m,g),y)}})),TQ="permutations",DQ=iq(TQ,["typed","factorial"],(e=>{var{typed:t,factorial:n}=e;return t(TQ,{"number | BigNumber":n,"number, number":function(e,t){if(!lq(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!lq(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(t>e)throw new TypeError("second argument k must be less than or equal to first argument n");return GG(e-t+1,e)},"BigNumber, BigNumber":function(e,t){var n,r;if(!AQ(e)||!AQ(t))throw new TypeError("Positive integer value expected in function permutations");if(t.gt(e))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e.mul(0).add(1),r=e.minus(t).plus(1);r.lte(e);r=r.plus(1))n=n.times(r);return n}})}));function AQ(e){return e.isInteger()&&e.gte(0)}var MQ="setIntersect",$Q=iq(MQ,["typed","size","subset","compareNatural","Index","DenseMatrix"],(e=>{var{typed:t,size:n,subset:r,compareNatural:a,Index:i,DenseMatrix:s}=e;return t(MQ,{"Array | Matrix, Array | Matrix":function(e,t){var o;if(0===r(n(e),new i(0))||0===r(n(t),new i(0)))o=[];else{var u=qV(FV(Array.isArray(e)?e:e.toArray()).sort(a)),c=qV(FV(Array.isArray(t)?t:t.toArray()).sort(a));o=[];for(var l=0;l<u.length;l++)for(var p=0;p<c.length;p++)if(0===a(u[l].value,c[p].value)&&u[l].identifier===c[p].identifier){o.push(u[l]);break}}return Array.isArray(e)&&Array.isArray(t)?WV(o):new s(WV(o))}})})),OQ="setUnion",RQ=iq(OQ,["typed","size","concat","subset","setIntersect","setSymDifference","Index"],(e=>{var{typed:t,size:n,concat:r,subset:a,setIntersect:i,setSymDifference:s,Index:o}=e;return t(OQ,{"Array | Matrix, Array | Matrix":function(e,t){if(0===a(n(e),new o(0)))return FV(t);if(0===a(n(t),new o(0)))return FV(e);var u=FV(e),c=FV(t);return r(s(u,c),i(u,c))}})})),_Q=iq("Spa",["addScalar","equalScalar","FibonacciHeap"],(e=>{var{addScalar:t,equalScalar:n,FibonacciHeap:r}=e;function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new r}return a.prototype.type="Spa",a.prototype.isSpa=!0,a.prototype.set=function(e,t){if(this._values[e])this._values[e].value=t;else{var n=this._heap.insert(e,t);this._values[e]=n}},a.prototype.get=function(e){var t=this._values[e];return t?t.value:0},a.prototype.accumulate=function(e,n){var r=this._values[e];r?r.value=t(r.value,n):(r=this._heap.insert(e,n),this._values[e]=r)},a.prototype.forEach=function(e,t,r){var a=this._heap,i=this._values,s=[],o=a.extractMinimum();for(o&&s.push(o);o&&o.key<=t;)o.key>=e&&(n(o.value,0)||r(o.key,o.value,this)),(o=a.extractMinimum())&&s.push(o);for(var u=0;u<s.length;u++){var c=s[u];i[(o=a.insert(c.key,c.value)).key]=o}},a.prototype.swap=function(e,t){var n=this._values[e],r=this._values[t];if(!n&&r)n=this._heap.insert(e,r.value),this._heap.remove(r),this._values[e]=n,this._values[t]=void 0;else if(n&&!r)r=this._heap.insert(t,n.value),this._heap.remove(n),this._values[t]=r,this._values[e]=void 0;else if(n&&r){var a=n.value;n.value=r.value,r.value=a}},a}),{isClass:!0}),FQ="unit",zQ=iq(FQ,["typed","Unit"],(e=>{var{typed:t,Unit:n}=e;return t(FQ,{Unit:function(e){return e.clone()},string:function(e){return n.isValuelessUnit(e)?new n(null,e):n.parse(e,{allowNoUnits:!0})},"number | BigNumber | Fraction | Complex, string":function(e,t){return new n(e,t)},"Array | Matrix":function(e){return fj(e,this)}})})),BQ="log1p",LQ=iq(BQ,["typed","config","divideScalar","log","Complex"],(e=>{var{typed:t,config:n,divideScalar:r,log:a,Complex:i}=e;return t(BQ,{number:function(e){return e>=-1||n.predictable?fq(e):s(new i(e,0))},Complex:s,BigNumber:function(e){var t=e.plus(1);return!t.isNegative()||n.predictable?t.ln():s(new i(e.toNumber(),0))},"Array | Matrix":function(e){return fj(e,this)},"any, any":function(e,t){return r(this(e),a(t))}});function s(e){var t=e.re+1;return new i(Math.log(Math.sqrt(t*t+e.im*e.im)),Math.atan2(e.im,t))}})),PQ="stirlingS2",UQ=iq(PQ,["typed","addScalar","subtract","multiplyScalar","divideScalar","pow","factorial","combinations","isNegative","isInteger","larger"],(e=>{var{typed:t,addScalar:n,subtract:r,multiplyScalar:a,divideScalar:i,pow:s,factorial:o,combinations:u,isNegative:c,isInteger:l,larger:p}=e;return t(PQ,{"number | BigNumber, number | BigNumber":function(e,t){if(!l(e)||c(e)||!l(t)||c(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(p(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var d=o(t),h=0,f=0;f<=t;f++){var m=s(-1,r(t,f)),g=u(t,f),y=s(f,e);h=n(h,a(a(g,y),m))}return i(h,d)}})})),qQ="bellNumbers",WQ=iq(qQ,["typed","addScalar","isNegative","isInteger","stirlingS2"],(e=>{var{typed:t,addScalar:n,isNegative:r,isInteger:a,stirlingS2:i}=e;return t(qQ,{"number | BigNumber":function(e){if(!a(e)||r(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,s=0;s<=e;s++)t=n(t,i(e,s));return t}})})),VQ=iq("lup",["typed","matrix","abs","addScalar","divideScalar","multiplyScalar","subtract","larger","equalScalar","unaryMinus","DenseMatrix","SparseMatrix","Spa"],(e=>{var{typed:t,matrix:n,abs:r,addScalar:a,divideScalar:i,multiplyScalar:s,subtract:o,larger:u,equalScalar:c,unaryMinus:l,DenseMatrix:p,SparseMatrix:d,Spa:h}=e;return t("lup",{DenseMatrix:function(e){return f(e)},SparseMatrix:function(e){return function(e){var t,n,a,o=e._size[0],p=e._size[1],f=Math.min(o,p),m=e._values,g=e._index,y=e._ptr,x=[],b=[],v=[],w=[o,f],N=[],S=[],k=[],I=[f,p],E=[],C=[];for(t=0;t<o;t++)E[t]=t,C[t]=t;var T=function(){var e=new h;n<o&&(v.push(x.length),x.push(1),b.push(n)),k.push(N.length);var p=y[n],f=y[n+1];for(a=p;a<f;a++)t=g[a],e.set(E[t],m[a]);n>0&&e.forEach(0,n-1,(function(t,n){d._forEachRow(t,x,b,v,(function(r,a){r>t&&e.accumulate(r,l(s(a,n)))}))}));var T,D,A,M,$=n,O=e.get(n),R=r(O);e.forEach(n+1,o-1,(function(e,t){var n=r(t);u(n,R)&&($=e,R=n,O=t)})),n!==$&&(d._swapRows(n,$,w[1],x,b,v),d._swapRows(n,$,I[1],N,S,k),e.swap(n,$),D=$,A=C[T=n],M=C[D],E[A]=D,E[M]=T,C[T]=M,C[D]=A),e.forEach(0,o-1,(function(e,t){e<=n?(N.push(t),S.push(e)):(t=i(t,O),c(t,0)||(x.push(t),b.push(e)))}))};for(n=0;n<p;n++)T();return k.push(N.length),v.push(x.length),{L:new d({values:x,index:b,ptr:v,size:w}),U:new d({values:N,index:S,ptr:k,size:I}),p:E,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}(e)},Array:function(e){var t=f(n(e));return{L:t.L.valueOf(),U:t.U.valueOf(),p:t.p}}});function f(e){var t,n,l,d=e._size[0],h=e._size[1],f=Math.min(d,h),m=WU(e._data),g=[],y=[d,f],x=[],b=[f,h],v=[];for(t=0;t<d;t++)v[t]=t;for(n=0;n<h;n++){if(n>0)for(t=0;t<d;t++){var w=Math.min(t,n),N=0;for(l=0;l<w;l++)N=a(N,s(m[t][l],m[l][n]));m[t][n]=o(m[t][n],N)}var S=n,k=0,I=0;for(t=n;t<d;t++){var E=m[t][n],C=r(E);u(C,k)&&(S=t,k=C,I=E)}if(n!==S&&(v[n]=[v[S],v[S]=v[n]][0],p._swapRows(n,S,m)),n<d)for(t=n+1;t<d;t++){var T=m[t][n];c(T,0)||(m[t][n]=i(m[t][n],I))}}for(n=0;n<h;n++)for(t=0;t<d;t++)0===n&&(t<h&&(x[t]=[]),g[t]=[]),t<n?(t<h&&(x[t][n]=m[t][n]),n<d&&(g[t][n]=0)):t!==n?(t<h&&(x[t][n]=0),n<d&&(g[t][n]=m[t][n])):(t<h&&(x[t][n]=m[t][n]),n<d&&(g[t][n]=1));var D=new p({data:g,size:y}),A=new p({data:x,size:b}),M=[];for(t=0,f=v.length;t<f;t++)M[v[t]]=t;return{L:D,U:A,p:M,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}})),jQ="setSize",GQ=iq(jQ,["typed","compareNatural"],(e=>{var{typed:t,compareNatural:n}=e;return t(jQ,{"Array | Matrix":function(e){return Array.isArray(e)?FV(e).length:FV(e.toArray()).length},"Array | Matrix, boolean":function(e,t){if(!1===t||0===e.length)return Array.isArray(e)?FV(e).length:FV(e.toArray()).length;for(var r=FV(Array.isArray(e)?e:e.toArray()).sort(n),a=1,i=1;i<r.length;i++)0!==n(r[i],r[i-1])&&a++;return a}})})),HQ=iq("det",["typed","matrix","subtract","multiply","unaryMinus","lup"],(e=>{var{typed:t,matrix:n,subtract:r,multiply:a,unaryMinus:i,lup:s}=e;return t("det",{any:function(e){return WU(e)},"Array | Matrix":function(e){var t;switch((t=pU(e)?e.size():Array.isArray(e)?(e=n(e)).size():[]).length){case 0:return WU(e);case 1:if(1===t[0])return WU(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+gV(t)+")");case 2:var o=t[0];if(o===t[1])return function(e,t,n){if(1===t)return WU(e[0][0]);if(2===t)return r(a(e[0][0],e[1][1]),a(e[1][0],e[0][1]));for(var o=s(e),u=o.U[0][0],c=1;c<t;c++)u=a(u,o.U[c][c]);for(var l=0,p=0,d=[];;){for(;d[p];)p++;if(p>=t)break;for(var h=p,f=0;!d[o.p[h]];)d[o.p[h]]=!0,h=o.p[h],f++;f%2==0&&l++}return l%2==0?u:i(u)}(e.clone().valueOf(),o);throw new RangeError("Matrix must be square (size: "+gV(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+gV(t)+")")}}})})),KQ=iq("inv",["typed","matrix","divideScalar","addScalar","multiply","unaryMinus","det","identity","abs"],(e=>{var{typed:t,matrix:n,divideScalar:r,addScalar:a,multiply:i,unaryMinus:s,det:o,identity:u,abs:c}=e;return t("inv",{"Array | Matrix":function(e){var t=pU(e)?e.size():SV(e);switch(t.length){case 1:if(1===t[0])return pU(e)?n([r(1,e.valueOf()[0])]):[r(1,e[0])];throw new RangeError("Matrix must be square (size: "+gV(t)+")");case 2:var a=t[0],i=t[1];if(a===i)return pU(e)?n(l(e.valueOf(),a,i),e.storage()):l(e,a,i);throw new RangeError("Matrix must be square (size: "+gV(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+gV(t)+")")}},any:function(e){return r(1,e)}});function l(e,t,n){var l,p,d,h,f;if(1===t){if(0===(h=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[r(1,h)]]}if(2===t){var m=o(e);if(0===m)throw Error("Cannot calculate inverse, determinant is zero");return[[r(e[1][1],m),r(s(e[0][1]),m)],[r(s(e[1][0]),m),r(e[0][0],m)]]}var g=e.concat();for(l=0;l<t;l++)g[l]=g[l].concat();for(var y=u(t).valueOf(),x=0;x<n;x++){var b=c(g[x][x]),v=x;for(l=x+1;l<t;)c(g[l][x])>b&&(b=c(g[l][x]),v=l),l++;if(0===b)throw Error("Cannot calculate inverse, determinant is zero");(l=v)!==x&&(f=g[x],g[x]=g[l],g[l]=f,f=y[x],y[x]=y[l],y[l]=f);var w=g[x],N=y[x];for(l=0;l<t;l++){var S=g[l],k=y[l];if(l!==x){if(0!==S[x]){for(d=r(s(S[x]),w[x]),p=x;p<n;p++)S[p]=a(S[p],i(d,w[p]));for(p=0;p<n;p++)k[p]=a(k[p],i(d,N[p]))}}else{for(d=w[x],p=x;p<n;p++)S[p]=r(S[p],d);for(p=0;p<n;p++)k[p]=r(k[p],d)}}}return y}}));function XQ(e,t){var n,r=t.length,a=[];if(e)for(n=0;n<r;n++)a[e[n]]=t[n];else for(n=0;n<r;n++)a[n]=t[n];return a}var ZQ="lusolve",YQ=iq(ZQ,["typed","matrix","lup","slu","usolve","lsolve","DenseMatrix"],(e=>{var{typed:t,matrix:n,lup:r,slu:a,usolve:i,lsolve:s,DenseMatrix:o}=e,u=JZ({DenseMatrix:o});return t(ZQ,{"Array, Array | Matrix":function(e,t){e=n(e);var a=r(e);return l(a.L,a.U,a.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){var n=r(e);return l(n.L,n.U,n.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){var n=r(e);return l(n.L,n.U,n.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,n,r){var i=a(e,n,r);return l(i.L,i.U,i.p,i.q,t)},"Object, Array | Matrix":function(e,t){return l(e.L,e.U,e.p,e.q,t)}});function c(e){if(pU(e))return e;if(lU(e))return n(e);throw new TypeError("Invalid Matrix LU decomposition")}function l(e,t,n,r,a){e=c(e),t=c(t),n&&((a=u(e,a,!0))._data=XQ(n,a._data));var o=s(e,a),l=i(t,o);return r&&(l._data=XQ(r,l._data)),l}})),JQ="sqrtm",QQ=iq(JQ,["typed","abs","add","multiply","sqrt","subtract","inv","size","max","identity"],(e=>{var{typed:t,abs:n,add:r,multiply:a,sqrt:i,subtract:s,inv:o,size:u,max:c,identity:l}=e,p=1e-6;function d(e){var t,i=0,d=e,h=l(u(e));do{var f=d;if(d=a(.5,r(f,o(h))),h=a(.5,r(h,o(f))),(t=c(n(s(d,f))))>p&&++i>1e3)throw new Error("computing square root of matrix: iterative method could not converge")}while(t>p);return d}return t(JQ,{"Array | Matrix":function(e){var t=pU(e)?e.size():SV(e);switch(t.length){case 1:if(1===t[0])return i(e);throw new RangeError("Matrix must be square (size: "+gV(t)+")");case 2:if(t[0]===t[1])return d(e);throw new RangeError("Matrix must be square (size: "+gV(t)+")");default:throw new RangeError("Matrix must be at most two dimensional (size: "+gV(t)+")")}}})})),e0=iq("divide",["typed","matrix","multiply","equalScalar","divideScalar","inv"],(e=>{var{typed:t,matrix:n,multiply:r,equalScalar:a,divideScalar:i,inv:s}=e,o=wX({typed:t,equalScalar:a}),u=kX({typed:t});return t("divide",jU({"Array | Matrix, Array | Matrix":function(e,t){return r(e,s(t))},"DenseMatrix, any":function(e,t){return u(e,t,i,!1)},"SparseMatrix, any":function(e,t){return o(e,t,i,!1)},"Array, any":function(e,t){return u(n(e),t,i,!1).valueOf()},"any, Array | Matrix":function(e,t){return r(e,s(t))}},i.signatures))})),t0="expm",n0=iq(t0,["typed","abs","add","identity","inv","multiply"],(e=>{var{typed:t,abs:n,add:r,identity:a,inv:i,multiply:s}=e;return t(t0,{Matrix:function(e){var t=e.size();if(2!==t.length||t[0]!==t[1])throw new RangeError("Matrix must be square (size: "+gV(t)+")");for(var u=t[0],c=function(e){for(var t=e.size()[0],r=0,a=0;a<t;a++){for(var i=0,s=0;s<t;s++)i+=n(e.get([a,s]));r=Math.max(i,r)}return r}(e),l=function(e,t){for(var n=0;n<30;n++)for(var r=0;r<=n;r++){var a=n-r;if(o(e,r,a)<1e-15)return{q:r,j:a}}throw new Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)")}(c),p=l.q,d=l.j,h=s(e,Math.pow(2,-d)),f=a(u),m=a(u),g=1,y=h,x=-1,b=1;b<=p;b++)b>1&&(y=s(y,h),x=-x),f=r(f,s(g=g*(p-b+1)/((2*p-b+1)*b),y)),m=r(m,s(g*x,y));for(var v=s(i(m),f),w=0;w<d;w++)v=s(v,v);return fU(e)?e.createSparseMatrix(v):v}});function o(e,t,n){for(var r=1,a=2;a<=t;a++)r*=a;for(var i=r,s=t+1;s<=2*t;s++)i*=s;var o=i*(2*t+1);return 8*Math.pow(e/Math.pow(2,n),2*t)*r*r/(i*o)}})),r0="kldivergence",a0=iq(r0,["typed","matrix","divide","sum","multiply","dotDivide","log","isNumeric"],(e=>{var{typed:t,matrix:n,divide:r,sum:a,multiply:i,dotDivide:s,log:o,isNumeric:u}=e;return t(r0,{"Array, Array":function(e,t){return c(n(e),n(t))},"Matrix, Array":function(e,t){return c(e,n(t))},"Array, Matrix":function(e,t){return c(n(e),t)},"Matrix, Matrix":function(e,t){return c(e,t)}});function c(e,t){var n=t.size().length,c=e.size().length;if(n>1)throw new Error("first object must be one dimensional");if(c>1)throw new Error("second object must be one dimensional");if(n!==c)throw new Error("Length of two vectors must be equal");if(0===a(e))throw new Error("Sum of elements in first object must be non zero");if(0===a(t))throw new Error("Sum of elements in second object must be non zero");var l=r(e,a(e)),p=r(t,a(t)),d=a(i(l,o(s(l,p))));return u(d)?d:Number.NaN}})),i0="mean",s0=iq(i0,["typed","add","divide"],(e=>{var{typed:t,add:n,divide:r}=e;return t(i0,{"Array | Matrix":a,"Array | Matrix, number | BigNumber":function(e,t){try{var a=mj(e,t,n),i=Array.isArray(e)?SV(e):e.size();return r(a,i[t])}catch(e){throw _X(e,"mean")}},"...":function(e){if(dj(e))throw new TypeError("Scalar values expected in function mean");return a(e)}});function a(e){var t,a=0;if(hj(e,(function(e){try{t=void 0===t?e:n(t,e),a++}catch(t){throw _X(t,"mean",e)}})),0===a)throw new Error("Cannot calculate the mean of an empty array");return r(t,a)}})),o0="median",u0=iq(o0,["typed","add","divide","compare","partitionSelect"],(e=>{var{typed:t,add:n,divide:r,compare:a,partitionSelect:i}=e;function s(e){try{var t=(e=FV(e.valueOf())).length;if(0===t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var n=t/2-1,r=i(e,n+1),s=e[n],c=0;c<n;++c)a(e[c],s)>0&&(s=e[c]);return u(s,r)}var l=i(e,(t-1)/2);return o(l)}catch(e){throw _X(e,"median")}}var o=t({"number | BigNumber | Complex | Unit":function(e){return e}}),u=t({"number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit":function(e,t){return r(n(e,t),2)}});return t(o0,{"Array | Matrix":s,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(e){if(dj(e))throw new TypeError("Scalar values expected in function median");return s(e)}})})),c0="unbiased",l0="variance",p0=iq(l0,["typed","add","subtract","multiply","divide","apply","isNaN"],(e=>{var{typed:t,add:n,subtract:r,multiply:a,divide:i,apply:s,isNaN:o}=e;return t(l0,{"Array | Matrix":function(e){return u(e,c0)},"Array | Matrix, string":u,"Array | Matrix, number | BigNumber":function(e,t){return c(e,t,c0)},"Array | Matrix, number | BigNumber, string":c,"...":function(e){return u(e,c0)}});function u(e,t){var s,u=0;if(0===e.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");if(hj(e,(function(e){try{s=void 0===s?e:n(s,e),u++}catch(t){throw _X(t,"variance",e)}})),0===u)throw new Error("Cannot calculate variance of an empty array");var c=i(s,u);if(s=void 0,hj(e,(function(e){var t=r(e,c);s=void 0===s?a(t,t):n(s,a(t,t))})),o(s))return s;switch(t){case"uncorrected":return i(s,u);case"biased":return i(s,u+1);case"unbiased":var l=iU(s)?s.mul(0):0;return 1===u?l:i(s,u-1);default:throw new Error('Unknown normalization "'+t+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}function c(e,t,n){try{if(0===e.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");return s(e,t,(e=>u(e,n)))}catch(e){throw _X(e,"variance")}}})),d0=iq("std",["typed","sqrt","variance"],(e=>{var{typed:t,sqrt:n,variance:r}=e;return t("std",{"Array | Matrix":a,"Array | Matrix, string":a,"Array | Matrix, number | BigNumber":a,"Array | Matrix, number | BigNumber, string":a,"...":function(e){return a(e)}});function a(e,t){if(0===e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");try{return n(r.apply(null,arguments))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf(" variance")?new TypeError(e.message.replace(" variance"," std")):e}}}));var h0=["config","typed","matrix","addScalar","equal","subtract","abs","atan","cos","sin","multiplyScalar","divideScalar","inv","bignumber","multiply","add","larger","column","flatten","number","complex","sqrt","diag","qr","usolve","usolveAll","im","re","smaller","matrixFromColumns","dot"],f0=iq("eigs",h0,(e=>{var{config:t,typed:n,matrix:r,addScalar:a,subtract:i,equal:s,abs:o,atan:u,cos:c,sin:l,multiplyScalar:p,divideScalar:d,inv:h,bignumber:f,multiply:m,add:g,larger:y,column:x,flatten:b,number:v,complex:w,sqrt:N,diag:S,qr:k,usolve:I,usolveAll:E,im:C,re:T,smaller:D,matrixFromColumns:A,dot:M}=e,$=function(e){var{config:t,addScalar:n,subtract:r,abs:a,atan:i,cos:s,sin:o,multiplyScalar:u,inv:c,bignumber:l,multiply:p,add:d}=e;function h(e,n){for(var r,a=e.length,i=Math.abs(n/a),s=new Array(a),o=0;o<a;o++)s[o]=N(a,0),s[o][o]=1;for(var u=b(e);Math.abs(u[1])>=Math.abs(i);){var c=u[0][0],l=u[0][1];e=x(e,(p=e[c][c],d=e[l][l],h=e[c][l],f=void 0,f=d-p,r=Math.abs(f)<=t.epsilon?Math.PI/4:.5*Math.atan(2*h/(d-p))),c,l),s=m(s,r,c,l),u=b(e)}for(var p,d,h,f,g=N(a,0),y=0;y<a;y++)g[y]=e[y][y];return w(WU(g),WU(s))}function f(e,n){for(var s,o=e.length,d=a(n/o),h=new Array(o),f=0;f<o;f++)h[f]=N(o,0),h[f][f]=1;for(var m=v(e);a(m[1])>=a(d);){var x=m[0][0],b=m[0][1];e=y(e,(S=e[x][x],k=e[b][b],I=e[x][b],E=void 0,E=r(k,S),s=a(E)<=t.epsilon?l(-1).acos().div(4):u(.5,i(p(2,I,c(E))))),x,b),h=g(h,s,x,b),m=v(e)}for(var S,k,I,E,C=N(o,0),T=0;T<o;T++)C[T]=e[T][T];return w(WU(C),WU(h))}function m(e,t,n,r){for(var a=e.length,i=Math.cos(t),s=Math.sin(t),o=N(a,0),u=N(a,0),c=0;c<a;c++)o[c]=i*e[c][n]-s*e[c][r],u[c]=s*e[c][n]+i*e[c][r];for(var l=0;l<a;l++)e[l][n]=o[l],e[l][r]=u[l];return e}function g(e,t,a,i){for(var c=e.length,p=s(t),d=o(t),h=N(c,l(0)),f=N(c,l(0)),m=0;m<c;m++)h[m]=r(u(p,e[m][a]),u(d,e[m][i])),f[m]=n(u(d,e[m][a]),u(p,e[m][i]));for(var g=0;g<c;g++)e[g][a]=h[g],e[g][i]=f[g];return e}function y(e,t,a,i){for(var c=e.length,h=l(s(t)),f=l(o(t)),m=u(h,h),g=u(f,f),y=N(c,l(0)),x=N(c,l(0)),b=p(l(2),h,f,e[a][i]),v=n(r(u(m,e[a][a]),b),u(g,e[i][i])),w=d(u(g,e[a][a]),b,u(m,e[i][i])),S=0;S<c;S++)y[S]=r(u(h,e[a][S]),u(f,e[i][S])),x[S]=n(u(f,e[a][S]),u(h,e[i][S]));e[a][a]=v,e[i][i]=w,e[a][i]=l(0),e[i][a]=l(0);for(var k=0;k<c;k++)k!==a&&k!==i&&(e[a][k]=y[k],e[k][a]=y[k],e[i][k]=x[k],e[k][i]=x[k]);return e}function x(e,t,n,r){for(var a=e.length,i=Math.cos(t),s=Math.sin(t),o=i*i,u=s*s,c=N(a,0),l=N(a,0),p=o*e[n][n]-2*i*s*e[n][r]+u*e[r][r],d=u*e[n][n]+2*i*s*e[n][r]+o*e[r][r],h=0;h<a;h++)c[h]=i*e[n][h]-s*e[r][h],l[h]=s*e[n][h]+i*e[r][h];e[n][n]=p,e[r][r]=d,e[n][r]=0,e[r][n]=0;for(var f=0;f<a;f++)f!==n&&f!==r&&(e[n][f]=c[f],e[f][n]=c[f],e[r][f]=l[f],e[f][r]=l[f]);return e}function b(e){for(var t=e.length,n=0,r=[0,1],a=0;a<t;a++)for(var i=a+1;i<t;i++)Math.abs(n)<Math.abs(e[a][i])&&(n=Math.abs(e[a][i]),r=[a,i]);return[r,n]}function v(e){for(var t=e.length,n=0,r=[0,1],i=0;i<t;i++)for(var s=i+1;s<t;s++)a(n)<a(e[i][s])&&(n=a(e[i][s]),r=[i,s]);return[r,n]}function w(e,t){for(var n=e.length,r=Array(n),i=Array(n),s=0;s<n;s++)i[s]=Array(n);for(var o=0;o<n;o++){for(var u=0,c=e[0],l=0;l<e.length;l++)a(e[l])<a(c)&&(c=e[u=l]);r[o]=e.splice(u,1)[0];for(var p=0;p<n;p++)i[p][o]=t[p][u],t[p].splice(u,1)}return{values:r,vectors:i}}function N(e,t){for(var n=new Array(e),r=0;r<e;r++)n[r]=t;return n}return function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.epsilon,a=arguments.length>3?arguments[3]:void 0;if("number"===a)return h(e,r);if("BigNumber"===a)return f(e,r);throw TypeError("Unsupported data type: "+a)}}({config:t,addScalar:a,subtract:i,column:x,flatten:b,equal:s,abs:o,atan:u,cos:c,sin:l,multiplyScalar:p,inv:h,bignumber:f,complex:w,multiply:m,add:g}),O=function(e){var{addScalar:t,subtract:n,flatten:r,multiply:a,multiplyScalar:i,divideScalar:s,sqrt:o,abs:u,bignumber:c,diag:l,inv:p,qr:d,usolve:h,usolveAll:f,equal:m,complex:g,larger:y,smaller:x,matrixFromColumns:b,dot:v}=e;function w(e,t,r,a,i,s,o,l){var p="BigNumber"===l,d="Complex"===l,h=p?c(0):d?g(0):0,f=p?c(1):d?g(1):1;if(x(u(r),o))return[[f,h],[h,f]];if(y(u(n(i,s)),o))return[[n(i,a),n(s,a)],[r,r]];var m=n(e,i),b=n(t,i),v=n(r,i),w=n(a,i);return x(u(b),o)?[[m,f],[v,h]]:[[b,h],[w,f]]}function N(e,t){for(var n=0;n<e.length;n++)e[n].push(...Array(t-e[n].length).fill(0));for(var r=e.length;r<t;r++)e.push(Array(t).fill(0)),e[r][r]=1;return e}function S(e,t,n){for(var r=0;r<e.length;r++)if(n(e[r],t))return r;return-1}function k(e,t,n,r,a){for(var i,s="BigNumber"===a?c(1e3):1e3,o=0;i=I(t,n,a),i=h(e,i),!y(C(i),s);)if(++o>=5)return null;for(o=0;;){var u=h(e,i);if(x(C(E(i,[u])),r))break;if(++o>=10)return null;i=T(u)}return i}function I(e,t,n){var r="BigNumber"===n,a="Complex"===n,i=Array(e).fill(0).map((e=>2*Math.random()-1));return r&&(i=i.map((e=>c(e)))),a&&(i=i.map((e=>g(e)))),T(i=E(i,t),n)}function E(e,t){for(var r of t)e=n(e,a(s(v(r,e),v(r,r)),r));return e}function C(e){return u(o(v(e,e)))}function T(e,t){var n="Complex"===t,r="BigNumber"===t?c(1):n?g(1):1;return a(s(r,C(e)),e)}return function(e,h,v,I,E){void 0===E&&(E=!0);var C=function(e,n,r,a,o){var p,d="BigNumber"===a,h="Complex"===a,f=d?c(0):h?g(0):0,b=d?c(1):h?g(1):1,v=d?c(10):2,w=i(v,v);o&&(p=Array(n).fill(b));for(var N=!1;!N;){N=!0;for(var S=0;S<n;S++){for(var k=f,I=f,E=0;E<n;E++)if(S!==E){var C=u(e[S][E]);k=t(k,C),I=t(I,C)}if(!m(k,0)&&!m(I,0)){for(var T=b,D=k,A=s(I,v),M=i(I,v);x(D,A);)D=i(D,w),T=i(T,v);for(;y(D,M);)D=s(D,w),T=s(T,v);if(x(s(t(D,I),T),i(t(k,I),.95))){N=!1;for(var $=s(1,T),O=0;O<n;O++)S!==O&&(e[S][O]=i(e[S][O],T),e[O][S]=i(e[O][S],$));o&&(p[S]=i(p[S],T))}}}}return l(p)}(e,h,0,I,E);!function(e,r,a,o,l,p){var d="BigNumber"===o,h="Complex"===o,f=d?c(0):h?g(0):0;d&&(a=c(a));for(var m=0;m<r-2;m++){for(var y=0,b=f,v=m+1;v<r;v++){var w=e[v][m];x(u(b),u(w))&&(b=w,y=v)}if(!x(u(b),a)){if(y!==m+1){var N=e[y];e[y]=e[m+1],e[m+1]=N;for(var S=0;S<r;S++){var k=e[S][y];e[S][y]=e[S][m+1],e[S][m+1]=k}if(l){var I=p[y];p[y]=p[m+1],p[m+1]=I}}for(var E=m+2;E<r;E++){var C=s(e[E][m],b);if(0!==C){for(var T=0;T<r;T++)e[E][T]=n(e[E][T],i(C,e[m+1][T]));for(var D=0;D<r;D++)e[D][m+1]=t(e[D][m+1],i(C,e[D][E]));if(l)for(var A=0;A<r;A++)p[E][A]=n(p[E][A],i(C,p[m+1][A]))}}}}}(e,h,v,I,E,C);var T,{values:D,C:A}=function(e,r,s,p,h){var f="BigNumber"===p,m="Complex"===p,y=f?c(1):m?g(1):1;f&&(s=c(s));for(var b,v,S,k,I,E,C,T,D=WU(e),A=[],M=r,$=[],O=h?l(Array(r).fill(y)):void 0,R=h?l(Array(M).fill(y)):void 0,_=0;_<=100;){_+=1;for(var F=0;F<M;F++)D[F][F]=n(D[F][F],0);var{Q:z,R:B}=d(D);D=a(B,z);for(var L=0;L<M;L++)D[L][L]=t(D[L][L],0);if(h&&(R=a(R,z)),1===M||x(u(D[M-1][M-2]),s)){_=0,A.push(D[M-1][M-1]),h&&($.unshift([[1]]),N(R,r),O=a(O,R),M>1&&(R=l(Array(M-1).fill(y)))),M-=1,D.pop();for(var P=0;P<M;P++)D[P].pop()}else if(2===M||x(u(D[M-2][M-3]),s)){_=0;var U=(b=D[M-2][M-2],v=D[M-2][M-1],S=D[M-1][M-2],k=D[M-1][M-1],I=void 0,E=void 0,C=void 0,T=void 0,I=t(b,k),E=n(i(b,k),i(v,S)),C=i(I,.5),T=i(o(n(i(I,I),i(4,E))),.5),[t(C,T),n(C,T)]);A.push(...U),h&&($.unshift(w(D[M-2][M-2],D[M-2][M-1],D[M-1][M-2],D[M-1][M-1],U[0],U[1],s,p)),N(R,r),O=a(O,R),M>2&&(R=l(Array(M-2).fill(y)))),M-=2,D.pop(),D.pop();for(var q=0;q<M;q++)D[q].pop(),D[q].pop()}if(0===M)break}if(A.sort(((e,t)=>+n(u(e),u(t)))),_>100){var W=Error("The eigenvalues failed to converge. Only found these eigenvalues: "+A.join(", "));throw W.values=A,W.vectors=[],W}var V=h?a(O,function(e,t){for(var n=[],r=0;r<t;r++)n[r]=Array(t).fill(0);var a=0;for(var i of e){for(var s=i.length,o=0;o<s;o++)for(var u=0;u<s;u++)n[a+o][a+u]=i[o][u];a+=s}return n}($,r)):void 0;return{values:A,C:V}}(e,h,v,I,E);return A=a(p(C),A),E&&(T=function(e,t,i,s,o,u){var d=p(i),h=a(d,e,i),y="BigNumber"===u,x="Complex"===u,b=y?c(0):x?g(0):0,v=y?c(1):x?g(1):1,w=[],N=[];for(var I of s){var E=S(w,I,m);-1===E?(w.push(I),N.push(1)):N[E]+=1}for(var C=[],T=w.length,D=Array(t).fill(b),A=l(Array(t).fill(v)),M=[],$=0;$<T;$++){var O=w[$],R=n(h,a(O,A)),_=f(R,D);for((_=_.map((e=>a(i,e)))).shift();_.length<N[$];){var F=k(R,t,_,o,u);if(null==F){M.push(O);break}_.push(F)}C.push(..._.map((e=>r(e))))}if(0!==M.length){var z=new Error("Failed to find eigenvectors for the following eigenvalues: "+M.join(", "));throw z.values=s,z.vectors=C,z}return C}(e,h,A,D,v,I),T=b(...T)),{values:D,vectors:T}}}({config:t,addScalar:a,subtract:i,multiply:m,multiplyScalar:p,flatten:b,divideScalar:d,sqrt:N,abs:o,bignumber:f,diag:S,qr:k,inv:h,usolve:I,usolveAll:E,equal:s,complex:w,larger:y,smaller:D,matrixFromColumns:A,dot:M});return n("eigs",{Array:function(e){return R(r(e))},"Array, number|BigNumber":function(e,t){return R(r(e),t)},Matrix:function(e){var{values:t,vectors:n}=R(e);return{values:r(t),vectors:r(n)}},"Matrix, number|BigNumber":function(e,t){var{values:n,vectors:a}=R(e,t);return{values:r(n),vectors:r(a)}}});function R(e,n){void 0===n&&(n=t.epsilon);var r=e.size();if(2!==r.length||r[0]!==r[1])throw new RangeError("Matrix must be square (size: "+gV(r)+")");var a=e.toArray(),s=r[0];if(function(e,t,n){for(var r=0;r<t;r++)for(var a=0;a<t;a++)if(y(f(o(C(e[r][a]))),n))return!1;return!0}(a,s,n)&&(function(e,t){for(var n=0;n<t;n++)for(var r=0;r<t;r++)e[n][r]=T(e[n][r])}(a,s),function(e,t,n){for(var r=0;r<t;r++)for(var a=r;a<t;a++)if(y(f(o(i(e[r][a],e[a][r]))),n))return!1;return!0}(a,s,n))){var u=_(e,a,s);return $(a,s,n,u)}var c=_(e,a,s);return O(a,s,n,c)}function _(e,t,n){var r=e.datatype();if("number"===r||"BigNumber"===r||"Complex"===r)return r;for(var a=!1,i=!1,s=!1,o=0;o<n;o++)for(var u=0;u<n;u++){var c=t[o][u];if(aU(c)||oU(c))a=!0;else if(iU(c))i=!0;else{if(!sU(c))throw TypeError("Unsupported type in Matrix: "+qU(c));s=!0}}if(i&&s&&console.warn("Complex BigNumbers not supported, this operation will lose precission."),s){for(var l=0;l<n;l++)for(var p=0;p<n;p++)t[l][p]=w(t[l][p]);return"Complex"}if(i){for(var d=0;d<n;d++)for(var h=0;h<n;h++)t[d][h]=f(t[d][h]);return"BigNumber"}if(a){for(var m=0;m<n;m++)for(var g=0;g<n;g++)t[m][g]=v(t[m][g]);return"number"}throw TypeError("Matrix contains unsupported types only.")}})),m0="multinomial",g0=["typed","add","divide","multiply","factorial","isInteger","isPositive"],y0=iq(m0,g0,(e=>{var{typed:t,add:n,divide:r,multiply:a,factorial:i,isInteger:s,isPositive:o}=e;return t(m0,{"Array | Matrix":function(e){var t=0,u=1;return hj(e,(function(e){if(!s(e)||!o(e))throw new TypeError("Positive integer value expected in function multinomial");t=n(t,e),u=a(u,i(e))})),r(i(t),u)}})})),x0=["typed","abs","map","median","subtract"],b0=iq("mad",x0,(e=>{var{typed:t,abs:n,map:r,median:a,subtract:i}=e;return t("mad",{"Array | Matrix":s,"...":function(e){return s(e)}});function s(e){if(0===(e=FV(e.valueOf())).length)throw new Error("Cannot calculate median absolute deviation (mad) of an empty array");try{var t=a(e);return a(r(e,(function(e){return n(i(e,t))})))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf("median")?new TypeError(e.message.replace("median","mad")):_X(e,"mad")}}})),v0="norm",w0=["typed","abs","add","pow","conj","sqrt","multiply","equalScalar","larger","smaller","matrix","ctranspose","eigs"],N0=iq(v0,w0,(e=>{var{typed:t,abs:n,add:r,pow:a,conj:i,sqrt:s,multiply:o,equalScalar:u,larger:c,smaller:l,matrix:p,ctranspose:d,eigs:h}=e;return t(v0,{number:Math.abs,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},boolean:function(e){return Math.abs(e)},Array:function(e){return f(p(e),2)},Matrix:function(e){return f(e,2)},"number | Complex | BigNumber | boolean, number | BigNumber | string":function(e){return this(e)},"Array, number | BigNumber | string":function(e,t){return f(p(e),t)},"Matrix, number | BigNumber | string":function(e,t){return f(e,t)}});function f(e,t){var p=e.size();if(1===p.length)return function(e,t){if(t===Number.POSITIVE_INFINITY||"inf"===t)return function(e){var t=0;return e.forEach((function(e){var r=n(e);c(r,t)&&(t=r)}),!0),t}(e);if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return function(e){var t;return e.forEach((function(e){var r=n(e);t&&!l(r,t)||(t=r)}),!0),t||0}(e);if("fro"===t)return f(e,2);if("number"==typeof t&&!isNaN(t)){if(!u(t,0)){var i=0;return e.forEach((function(e){i=r(a(n(e),t),i)}),!0),a(i,1/t)}return Number.POSITIVE_INFINITY}throw new Error("Unsupported parameter value")}(e,t);if(2===p.length){if(p[0]&&p[1])return function(e,t){if(1===t)return function(e){var t=[],a=0;return e.forEach((function(e,i){var s=i[1],o=r(t[s]||0,n(e));c(o,a)&&(a=o),t[s]=o}),!0),a}(e);if(t===Number.POSITIVE_INFINITY||"inf"===t)return function(e){var t=[],a=0;return e.forEach((function(e,i){var s=i[0],o=r(t[s]||0,n(e));c(o,a)&&(a=o),t[s]=o}),!0),a}(e);if("fro"===t)return function(e){var t=0;return e.forEach((function(e,n){t=r(t,o(e,i(e)))})),n(s(t))}(e);if(2===t)return function(e){var t=e.size();if(t[0]!==t[1])throw new RangeError("Invalid matrix dimensions");var r=d(e),a=o(r,e),i=h(a).values.toArray(),u=i[i.length-1];return n(s(u))}(e);throw new Error("Unsupported parameter value "+t)}(e,t);throw new RangeError("Invalid matrix dimensions")}}})),S0="rotationMatrix",k0=["typed","config","multiplyScalar","addScalar","unaryMinus","norm","matrix","BigNumber","DenseMatrix","SparseMatrix","cos","sin"],I0=iq(S0,k0,(e=>{var{typed:t,config:n,multiplyScalar:r,addScalar:a,unaryMinus:i,norm:s,BigNumber:o,matrix:u,DenseMatrix:c,SparseMatrix:l,cos:p,sin:d}=e;return t(S0,{"":function(){return"Matrix"===n.matrix?u([]):[]},string:function(e){return u(e)},"number | BigNumber | Complex | Unit":function(e){return h(e,"Matrix"===n.matrix?"dense":void 0)},"number | BigNumber | Complex | Unit, string":function(e,t){return h(e,t)},"number | BigNumber | Complex | Unit, Array":function(e,t){var n=u(t);return f(n),y(e,n,void 0)},"number | BigNumber | Complex | Unit, Matrix":function(e,t){f(t);var r=t.storage()||("Matrix"===n.matrix?"dense":void 0);return y(e,t,r)},"number | BigNumber | Complex | Unit, Array, string":function(e,t,n){var r=u(t);return f(r),y(e,r,n)},"number | BigNumber | Complex | Unit, Matrix, string":function(e,t,n){return f(t),y(e,t,n)}});function h(e,t){var n=iU(e)?new o(-1):-1,a=p(e),i=d(e);return g([[a,r(n,i)],[i,a]],t)}function f(e){var t=e.size();if(t.length<1||3!==t[0])throw new RangeError("Vector must be of dimensions 1x3")}function m(e){return e.reduce(((e,t)=>r(e,t)))}function g(e,t){if(t){if("sparse"===t)return new l(e);if("dense"===t)return new c(e);throw new TypeError('Unknown matrix type "'.concat(t,'"'))}return e}function y(e,t,n){var r=s(t);if(0===r)throw new RangeError("Rotation around zero vector");var u=iU(e)?o:null,c=u?new u(1):1,l=u?new u(-1):-1,h=u?new u(t.get([0])/r):t.get([0])/r,f=u?new u(t.get([1])/r):t.get([1])/r,y=u?new u(t.get([2])/r):t.get([2])/r,x=p(e),b=a(c,i(x)),v=d(e);return g([[a(x,m([h,h,b])),a(m([h,f,b]),m([l,y,v])),a(m([h,y,b]),m([f,v]))],[a(m([h,f,b]),m([y,v])),a(x,m([f,f,b])),a(m([f,y,b]),m([l,h,v]))],[a(m([h,y,b]),m([l,f,v])),a(m([f,y,b]),m([h,v])),a(x,m([y,y,b]))]],n)}})),E0="rotate",C0=["typed","multiply","rotationMatrix"],T0=iq(E0,C0,(e=>{var{typed:t,multiply:n,rotationMatrix:r}=e;return t(E0,{"Array , number | BigNumber | Complex | Unit":function(e,t){return a(e,2),n(r(t),e).toArray()},"Matrix , number | BigNumber | Complex | Unit":function(e,t){return a(e,2),n(r(t),e)},"Array, number | BigNumber | Complex | Unit, Array | Matrix":function(e,t,i){return a(e,3),n(r(t,i),e)},"Matrix, number | BigNumber | Complex | Unit, Array | Matrix":function(e,t,i){return a(e,3),n(r(t,i),e)}});function a(e,t){var n=Array.isArray(e)?SV(e):e.size();if(n.length>2)throw new RangeError("Vector must be of dimensions 1x".concat(t));if(2===n.length&&1!==n[1])throw new RangeError("Vector must be of dimensions 1x".concat(t));if(n[0]!==t)throw new RangeError("Vector must be of dimensions 1x".concat(t))}})),D0=uq({config:rq}),A0=$q({}),M0=Yq({BigNumber:D0,config:rq}),$0=jq({}),O0=DW({BigNumber:D0,config:rq}),R0=cV({}),_0=iW({Complex:A0}),F0=Hq({BigNumber:D0,config:rq}),z0=eW({BigNumber:D0,config:rq}),B0=nW({BigNumber:D0,config:rq}),L0=lV({}),P0=Kq({BigNumber:D0,config:rq}),U0=Gq({}),q0=Jq({BigNumber:D0,config:rq}),W0=pV({}),V0=dV({}),j0=rW({BigNumber:D0,config:rq}),G0=KW({BigNumber:D0,config:rq}),H0=Zq({BigNumber:D0,config:rq}),K0=Vq({}),X0=uW({}),Z0=GV({Matrix:L0}),Y0=BW({BigNumber:D0,config:rq}),J0=Qq({BigNumber:D0,config:rq}),Q0=Xq({BigNumber:D0,config:rq}),e1=HV({}),t1=aW({BigNumber:D0,config:rq}),n1=uj({BigNumber:D0,Complex:A0,DenseMatrix:Z0,Fraction:R0}),r1=Wj({BigNumber:D0,config:rq,typed:n1}),a1=zW({BigNumber:D0,config:rq}),i1=Vj({typed:n1}),s1=Gj({Complex:A0,config:rq,typed:n1}),o1=pG({BigNumber:D0,typed:n1}),u1=hG({BigNumber:D0,Complex:A0,config:rq,typed:n1}),c1=mG({typed:n1}),l1=gG({typed:n1}),p1=xG({BigNumber:D0,Complex:A0,config:rq,typed:n1}),d1=bG({typed:n1}),h1=vG({typed:n1}),f1=NG({Complex:A0,config:rq,typed:n1}),m1=SG({BigNumber:D0,typed:n1}),g1=UG({typed:n1}),y1=WG({typed:n1}),x1=jG({typed:n1}),b1=XG({typed:n1}),v1=YG({Complex:A0,typed:n1}),w1=QG({typed:n1}),N1=tH({typed:n1}),S1=rH({BigNumber:D0,typed:n1}),k1=aH({BigNumber:D0,typed:n1}),I1=sH({typed:n1}),E1=cH({config:rq,typed:n1}),C1=lH({typed:n1}),T1=gH({typed:n1}),D1=xH({Complex:A0,typed:n1}),A1=bH({typed:n1}),M1=NH({typed:n1}),$1=IH({typed:n1}),O1=CH({typed:n1}),R1=TH({format:$1,typed:n1}),_1=DH({typed:n1}),F1=MH({typed:n1}),z1=BH({typed:n1}),B1=PH({typed:n1}),L1=qH({typed:n1}),P1=tW({BigNumber:D0,config:rq}),U1=VH({Complex:A0,config:rq,typed:n1}),q1=GH({Complex:A0,config:rq,typed:n1}),W1=HH({typed:n1}),V1=XH({typed:n1}),j1=tK({typed:n1}),G1=nK({typed:n1}),H1=rK({format:$1,typed:n1}),K1=uK({config:rq,typed:n1}),X1=lK({typed:n1}),Z1=fK({config:rq,typed:n1}),Y1=mK({typed:n1}),J1=gK({BigNumber:D0,typed:n1}),Q1=xK({BigNumber:D0,Fraction:R0,complex:v1,typed:n1}),e2=bK({typed:n1}),t2=vK({Matrix:L0,equalScalar:E1,typed:n1}),n2=NK({typed:n1}),r2=kK({typed:n1}),a2=EK({typed:n1}),i2=CK({typed:n1}),s2=DK({typed:n1}),o2=MK({Complex:A0,config:rq,typed:n1}),u2=OK({BigNumber:D0,typed:n1}),c2=_K({isInteger:F1,typed:n1}),l2=BK({BigNumber:D0,Complex:A0,config:rq,typed:n1}),p2=LK({format:$1,typed:n1}),d2=UK({typed:n1}),h2=WK({typed:n1}),f2=jK({BigNumber:D0,typed:n1}),m2=HK({typed:n1}),g2=XK({typed:n1}),y2=YK({config:rq,typed:n1}),x2=QK({BigNumber:D0,typed:n1}),b2=tX({typed:n1}),v2=rX({SparseMatrix:t2,typed:n1}),w2=aX({Complex:A0,config:rq,typed:n1}),N2=iX({typed:n1}),S2=oX({typed:n1}),k2=cX({BigNumber:D0,Complex:A0,config:rq,typed:n1}),I2=lX({BigNumber:D0,typed:n1}),E2=pX({Fraction:R0,typed:n1}),C2=hX({typed:n1}),T2=mX({DenseMatrix:Z0,Matrix:L0,SparseMatrix:t2,typed:n1}),D2=yX({isZero:L1,matrix:T2,typed:n1}),A2=IX({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),M2=DX({BigNumber:D0,equalScalar:E1,matrix:T2,typed:n1}),$2=OX({bignumber:m1,fraction:E2,number:G1}),O2=RX({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),R2=zX({config:rq,multiplyScalar:V1,numeric:$2,typed:n1}),_2=LX({isInteger:F1,matrix:T2,typed:n1}),F2=UX({matrix:T2,config:rq,typed:n1}),z2=VX({DenseMatrix:Z0,config:rq,matrix:T2,typed:n1}),B2=GX({matrix:T2,typed:n1}),L2=KX({matrix:T2,typed:n1}),P2=tZ({DenseMatrix:Z0,addScalar:c1,equalScalar:E1,matrix:T2,typed:n1,unaryMinus:S2}),U2=rZ({matrix:T2,typed:n1}),q2=aZ({matrix:T2,typed:n1}),W2=sZ({BigNumber:D0,config:rq,matrix:T2,typed:n1}),V2=uZ({BigNumber:D0,config:rq,matrix:T2,typed:n1}),j2=cZ({equalScalar:E1,matrix:T2,not:j1,typed:n1,zeros:V2}),G2=pZ({equalScalar:E1,matrix:T2,typed:n1}),H2=hZ({DenseMatrix:Z0,matrix:T2,typed:n1}),K2=mZ({BigNumber:D0,Complex:A0,Fraction:R0,config:rq,isNegative:z1,matrix:T2,typed:n1,unaryMinus:S2}),X2=yZ({BigNumber:D0,DenseMatrix:Z0,Fraction:R0,config:rq,equalScalar:E1,matrix:T2,typed:n1}),Z2=bZ({matrix:T2,typed:n1}),Y2=wZ({isInteger:F1,matrix:T2,typed:n1}),J2=kZ({prod:R2,size:F2,typed:n1}),Q2=EZ({conj:w1,transpose:q2,typed:n1}),e3=TZ({DenseMatrix:Z0,SparseMatrix:t2,matrix:T2,typed:n1}),t3=AZ({numeric:$2,typed:n1}),n3=$Z({DenseMatrix:Z0,divideScalar:t3,equalScalar:E1,matrix:T2,typed:n1}),r3=RZ({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),a3=FZ({matrix:T2,typed:n1}),i3=BZ({BigNumber:D0,DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),s3=PZ({isNumeric:C2,typed:n1}),o3=qZ({abs:i1,addScalar:c1,divideScalar:t3,isPositive:B1,multiplyScalar:V1,smaller:z2,sqrt:w2,typed:n1}),u3=WZ({DenseMatrix:Z0,smaller:z2}),c3=VZ({ImmutableDenseMatrix:u3}),l3=GZ({matrix:T2,multiplyScalar:V1,typed:n1}),p3=KZ({DenseMatrix:Z0,config:rq,matrix:T2,typed:n1}),d3=YZ({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1,zeros:V2}),h3=eY({DenseMatrix:Z0,divideScalar:t3,equalScalar:E1,matrix:T2,multiplyScalar:V1,subtract:P2,typed:n1}),f3=nY({flatten:a3,matrix:T2,size:F2,typed:n1}),m3=rY({config:rq,numeric:$2,smaller:z2,typed:n1}),g3=iY({isNaN:m2,isNumeric:C2,typed:n1}),y3=oY({Complex:A0,config:rq,divideScalar:t3,typed:n1}),x3=uY({BigNumber:D0,config:rq,matrix:T2,typed:n1}),b3=lY({compare:X2,isNaN:m2,isNumeric:C2,typed:n1}),v3=dY({config:rq,matrix:T2}),w3=fY({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1,zeros:V2}),N3=vY({BigNumber:D0,DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1,zeros:V2}),S3=SY({DenseMatrix:Z0,config:rq,matrix:T2,typed:n1}),k3=IY({DenseMatrix:Z0,config:rq,equalScalar:E1,matrix:T2,typed:n1}),I3=CY({DenseMatrix:Z0,divideScalar:t3,equalScalar:E1,matrix:T2,multiplyScalar:V1,subtract:P2,typed:n1}),E3=TY({DenseMatrix:Z0,matrix:T2,typed:n1}),C3=DY({DenseMatrix:Z0,SparseMatrix:t2,addScalar:c1,equalScalar:E1,matrix:T2,typed:n1}),T3=$Y({BigNumber:D0,DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),D3=RY({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1}),A3=FY({addScalar:c1,combinations:b1,divideScalar:t3,isInteger:F1,isNegative:z1,multiplyScalar:V1,typed:n1}),M3=LY({compare:X2,typed:n1}),$3=UY({equal:r3,typed:n1}),O3=WY({matrix:T2,number:G1,subtract:P2,typed:n1}),R3=VY({addScalar:c1,conj:w1,multiplyScalar:V1,size:F2,typed:n1}),_3=GY({compareText:Z2,isZero:L1,typed:n1}),F3=HY({config:rq,equalScalar:E1,matrix:T2,round:N3,typed:n1}),z3=XY({BigNumber:D0,DenseMatrix:Z0,SparseMatrix:t2,config:rq,matrix:T2,typed:n1}),B3=YY({BigNumber:D0,add:C3,config:rq,equal:r3,isInteger:F1,mod:A2,smaller:z2,typed:n1,xgcd:W2}),L3=QY({DenseMatrix:Z0,config:rq,matrix:T2,typed:n1}),P3=eJ({Complex:A0,config:rq,divideScalar:t3,typed:n1}),U3=nJ({DenseMatrix:Z0,divideScalar:t3,equalScalar:E1,matrix:T2,multiplyScalar:V1,subtract:P2,typed:n1}),q3=aJ({flatten:a3,matrix:T2,size:F2,typed:n1}),W3=sJ({addScalar:c1,dot:R3,equalScalar:E1,matrix:T2,multiplyScalar:V1,typed:n1}),V3=oJ({Complex:A0,config:rq,fraction:E2,identity:z3,matrix:T2,multiply:W3,number:G1,typed:n1}),j3=uJ({addScalar:c1,complex:v1,conj:w1,divideScalar:t3,equal:r3,identity:z3,isZero:L1,matrix:T2,multiplyScalar:V1,sign:Q1,sqrt:w2,subtract:P2,typed:n1,unaryMinus:S2,zeros:V2}),G3=lJ({bignumber:m1,matrix:T2,config:rq,larger:L3,largerEq:p3,smaller:z2,smallerEq:S3,typed:n1}),H3=dJ({DenseMatrix:Z0,equalScalar:E1,matrix:T2,typed:n1,zeros:V2}),K3=hJ({Index:c3,matrix:T2,range:G3,typed:n1}),X3=mJ({DenseMatrix:Z0,Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),Z3=yJ({DenseMatrix:Z0,Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),Y3=bJ({Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),J3=wJ({Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),Q3=RJ({SparseMatrix:t2,abs:i1,add:C3,divideScalar:t3,larger:L3,largerEq:p3,multiply:W3,subtract:P2,transpose:q2,typed:n1}),e4=_J({add:C3,config:rq,numeric:$2,typed:n1}),t4=FJ({add:C3,matrix:T2,typed:n1}),n4=BJ({DenseMatrix:Z0,divideScalar:t3,equalScalar:E1,matrix:T2,multiplyScalar:V1,subtract:P2,typed:n1}),r4=PJ({Complex:A0,config:rq,typed:n1}),a4=UJ({config:rq,equalScalar:E1,matrix:T2,round:N3,typed:n1}),i4=WJ({Index:c3,matrix:T2,range:G3,typed:n1}),s4=jJ({addScalar:c1,combinations:b1,isInteger:F1,isNegative:z1,isPositive:B1,larger:L3,typed:n1}),o4=HJ({matrix:T2,multiply:W3,subtract:P2,typed:n1}),u4=XJ({abs:i1,addScalar:c1,divideScalar:t3,multiplyScalar:V1,sqrt:w2,subtract:P2,typed:n1,unaryMinus:S2}),c4=YJ({equalScalar:E1,matrix:T2,multiplyScalar:V1,typed:n1}),l4=JJ({larger:L3,smaller:z2}),p4=QJ({Complex:A0,ceil:a4,floor:F3,matrix:T2,typed:n1}),d4=aQ({BigNumber:D0,Complex:A0,config:rq,multiplyScalar:V1,pow:V3,typed:n1}),h4=sQ({Index:c3,typed:n1}),f4=oQ({equalScalar:E1,matrix:T2,typed:n1}),m4=uQ({config:rq,larger:L3,numeric:$2,typed:n1}),g4=cQ({add:C3,compare:X2,multiply:W3,partitionSelect:b3,typed:n1}),y4=pQ({DenseMatrix:Z0,Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),x4=hQ({Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),b4=mQ({Index:c3,concat:Y2,setDifference:y4,size:F2,subset:L2,typed:n1}),v4=yQ({compare:X2,compareNatural:M3,matrix:T2,typed:n1}),w4=vQ({BigNumber:D0,Complex:A0,Fraction:R0,abs:i1,addScalar:c1,config:rq,divideScalar:t3,equal:r3,fix:p4,format:$1,isNumeric:C2,multiplyScalar:V1,number:G1,pow:V3,round:N3,subtract:P2}),N4=gW({BigNumber:D0,Unit:w4,config:rq}),S4=YW({BigNumber:D0,Unit:w4,config:rq}),k4=LW({BigNumber:D0,Unit:w4,config:rq}),I4=bW({BigNumber:D0,Unit:w4,config:rq}),E4=UW({BigNumber:D0,Unit:w4,config:rq}),C4=vW({BigNumber:D0,Unit:w4,config:rq}),T4=NQ({Unit:w4,typed:n1}),D4=$W({BigNumber:D0,Unit:w4,config:rq}),A4=kQ({DenseMatrix:Z0,equalScalar:E1,matrix:T2,pow:V3,typed:n1}),M4=mW({BigNumber:D0,Unit:w4,config:rq}),$4=xW({BigNumber:D0,Unit:w4,config:rq}),O4=EQ({gamma:d4,typed:n1}),R4=TW({BigNumber:D0,Unit:w4,config:rq}),_4=jW({BigNumber:D0,Unit:w4,config:rq}),F4=eV({BigNumber:D0,Unit:w4,config:rq}),z4=CQ({abs:i1,add:C3,addScalar:c1,config:rq,divideScalar:t3,equalScalar:E1,flatten:a3,isNumeric:C2,isZero:L1,matrix:T2,multiply:W3,multiplyScalar:V1,smaller:z2,subtract:P2,typed:n1}),B4=wW({BigNumber:D0,Unit:w4,config:rq}),L4=kW({BigNumber:D0,Unit:w4,config:rq}),P4=VW({BigNumber:D0,Unit:w4,config:rq}),U4=fW({BigNumber:D0,Unit:w4,config:rq}),q4=JW({BigNumber:D0,Unit:w4,config:rq}),W4=GW({BigNumber:D0,Unit:w4,config:rq}),V4=OW({BigNumber:D0,Unit:w4,config:rq}),j4=SW({BigNumber:D0,Unit:w4,config:rq}),G4=DQ({factorial:O4,typed:n1}),H4=dW({BigNumber:D0,Unit:w4,config:rq}),K4=nV({BigNumber:D0,Unit:w4,config:rq}),X4=rV({BigNumber:D0,Unit:w4,config:rq}),Z4=RW({BigNumber:D0,Unit:w4,config:rq}),Y4=hW({BigNumber:D0,Unit:w4,config:rq}),J4=_W({BigNumber:D0,Unit:w4,config:rq}),Q4=$Q({DenseMatrix:Z0,Index:c3,compareNatural:M3,size:F2,subset:L2,typed:n1}),e5=RQ({Index:c3,concat:Y2,setIntersect:Q4,setSymDifference:b4,size:F2,subset:L2,typed:n1}),t5=_Q({FibonacciHeap:l4,addScalar:c1,equalScalar:E1}),n5=ZW({BigNumber:D0,Unit:w4,config:rq}),r5=zQ({Unit:w4,typed:n1}),a5=PW({BigNumber:D0,Unit:w4,config:rq}),i5=IW({BigNumber:D0,Unit:w4,config:rq}),s5=yW({BigNumber:D0,Unit:w4,config:rq}),o5=CW({BigNumber:D0,Unit:w4,config:rq}),u5=qW({BigNumber:D0,Unit:w4,config:rq}),c5=AW({BigNumber:D0,Unit:w4,config:rq}),l5=LQ({Complex:A0,config:rq,divideScalar:t3,log:P3,typed:n1}),d5=NW({BigNumber:D0,Unit:w4,config:rq}),h5=QW({BigNumber:D0,Unit:w4,config:rq}),f5=aV({BigNumber:D0,Unit:w4,config:rq}),m5=iV({BigNumber:D0,Unit:w4,config:rq}),g5=XW({BigNumber:D0,Unit:w4,config:rq}),y5=lW({BigNumber:D0,Unit:w4,config:rq}),x5=UQ({addScalar:c1,combinations:b1,divideScalar:t3,factorial:O4,isInteger:F1,isNegative:z1,larger:L3,multiplyScalar:V1,pow:V3,subtract:P2,typed:n1}),b5=WQ({addScalar:c1,isInteger:F1,isNegative:z1,stirlingS2:x5,typed:n1}),v5=WW({BigNumber:D0,Unit:w4,config:rq}),w5=VQ({DenseMatrix:Z0,Spa:t5,SparseMatrix:t2,abs:i1,addScalar:c1,divideScalar:t3,equalScalar:E1,larger:L3,matrix:T2,multiplyScalar:V1,subtract:P2,typed:n1,unaryMinus:S2}),N5=HW({BigNumber:D0,Unit:w4,config:rq}),S5=MW({BigNumber:D0,Unit:w4,config:rq}),k5=GQ({compareNatural:M3,typed:n1}),I5=FW({BigNumber:D0,Unit:w4,config:rq}),E5=EW({BigNumber:D0,Unit:w4,config:rq}),C5=HQ({lup:w5,matrix:T2,multiply:W3,subtract:P2,typed:n1,unaryMinus:S2}),T5=pW({BigNumber:D0,Unit:w4,config:rq}),D5=KQ({abs:i1,addScalar:c1,det:C5,divideScalar:t3,identity:z3,matrix:T2,multiply:W3,typed:n1,unaryMinus:S2}),A5=YQ({DenseMatrix:Z0,lsolve:h3,lup:w5,matrix:T2,slu:Q3,typed:n1,usolve:I3}),M5=QQ({abs:i1,add:C3,identity:z3,inv:D5,max:m4,multiply:W3,size:F2,sqrt:w2,subtract:P2,typed:n1}),$5=e0({divideScalar:t3,equalScalar:E1,inv:D5,matrix:T2,multiply:W3,typed:n1}),O5=n0({abs:i1,add:C3,identity:z3,inv:D5,multiply:W3,typed:n1}),R5=a0({divide:$5,dotDivide:n3,isNumeric:C2,log:P3,matrix:T2,multiply:W3,sum:e4,typed:n1}),_5=s0({add:C3,divide:$5,typed:n1}),F5=u0({add:C3,compare:X2,divide:$5,partitionSelect:b3,typed:n1}),z5=tV({BigNumber:D0,Unit:w4,config:rq}),B5=p0({add:C3,apply:c2,divide:$5,isNaN:m2,multiply:W3,subtract:P2,typed:n1}),L5=d0({sqrt:w2,typed:n1,variance:B5}),P5=f0({abs:i1,add:C3,addScalar:c1,atan:h1,bignumber:m1,column:i4,complex:v1,config:rq,cos:h2,diag:e3,divideScalar:t3,dot:R3,equal:r3,flatten:a3,im:_1,inv:D5,larger:L3,matrix:T2,matrixFromColumns:f3,multiply:W3,multiplyScalar:V1,number:G1,qr:j3,re:Y1,sin:e2,smaller:z2,sqrt:w2,subtract:P2,typed:n1,usolve:I3,usolveAll:n4}),U5=y0({add:C3,divide:$5,factorial:O4,isInteger:F1,isPositive:B1,multiply:W3,typed:n1}),q5=b0({abs:i1,map:W1,median:F5,subtract:P2,typed:n1}),W5=N0({abs:i1,add:C3,conj:w1,ctranspose:Q2,eigs:P5,equalScalar:E1,larger:L3,matrix:T2,multiply:W3,pow:V3,smaller:z2,sqrt:w2,typed:n1}),V5=I0({BigNumber:D0,DenseMatrix:Z0,SparseMatrix:t2,addScalar:c1,config:rq,cos:h2,matrix:T2,multiplyScalar:V1,norm:W5,sin:e2,typed:n1,unaryMinus:S2}),j5=T0({multiply:W3,rotationMatrix:V5,typed:n1}),G5=iq("Chain",["?on","math"],(e=>{var{on:t,math:n}=e;function r(e){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");UU(e)?this.value=e.value:this.value=e}function a(e,t){ZU(r.prototype,e,(function(){var e=t();if("function"==typeof e)return i(e)}))}function i(e){return function(){for(var t=[this.value],n=0;n<arguments.length;n++)t[n+1]=arguments[n];return new r(e.apply(e,t))}}r.prototype.type="Chain",r.prototype.isChain=!0,r.prototype.done=function(){return this.value},r.prototype.valueOf=function(){return this.value},r.prototype.toString=function(){return gV(this.value)},r.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}},r.fromJSON=function(e){return new r(e.value)},r.createProxy=function(e,t){if("string"==typeof e)u=e,"function"==typeof(c=t)&&(r.prototype[u]=i(c));else{var n=function(t){YU(e,t)&&void 0===s[t]&&a(t,(()=>e[t]))};for(var o in e)n(o)}var u,c};var s={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return r.createProxy(n),t&&t("import",(function(e,t,n){n||a(e,t)})),r}),{isClass:!0}),H5=new Set(["end"]),K5=iq("Node",["mathWithTransform"],(e=>{var{mathWithTransform:t}=e;function n(){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator")}return n.prototype.evaluate=function(e){return this.compile().evaluate(e)},n.prototype.type="Node",n.prototype.isNode=!0,n.prototype.comment="",n.prototype.compile=function(){var e=this._compile(t,{}),n={};return{evaluate:function(t){var r=aj(t);return function(e){for(var t of[...H5])if(e.has(t))throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}(r),e(r,n,null)}}},n.prototype._compile=function(e,t){throw new Error("Method _compile should be implemented by type "+this.type)},n.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},n.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},n.prototype._ifNode=function(e){if(!_U(e))throw new TypeError("Callback function must return a Node");return e},n.prototype.traverse=function(e){e(this,null,null),function e(t,n){t.forEach((function(t,r,a){n(t,r,a),e(t,n)}))}(this,e)},n.prototype.transform=function(e){return function t(n,r,a){var i=e(n,r,a);return i!==n?i:n.map(t)}(this,null,null)},n.prototype.filter=function(e){var t=[];return this.traverse((function(n,r,a){e(n,r,a)&&t.push(n)})),t},n.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},n.prototype.cloneDeep=function(){return this.map((function(e){return e.cloneDeep()}))},n.prototype.equals=function(e){return!!e&&HU(this,e)},n.prototype.toString=function(e){var t=this._getCustomString(e);return void 0!==t?t:this._toString(e)},n.prototype.toJSON=function(){throw new Error("Cannot serialize object: toJSON not implemented by "+this.type)},n.prototype.toHTML=function(e){var t=this._getCustomString(e);return void 0!==t?t:this.toHTML(e)},n.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},n.prototype.toTex=function(e){var t=this._getCustomString(e);return void 0!==t?t:this._toTex(e)},n.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},n.prototype._getCustomString=function(e){if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":return;case"function":return e.handler(this,e);default:throw new TypeError("Object or function expected as callback")}},n.prototype.getIdentifier=function(){return this.type},n.prototype.getContent=function(){return this},n}),{isClass:!0,isNode:!0}),X5=iq("ObjectNode",["Node"],(e=>{var{Node:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(this.properties=e||{},e&&("object"!=typeof e||!Object.keys(e).every((function(t){return _U(e[t])}))))throw new TypeError("Object containing Nodes expected")}return n.prototype=new t,n.prototype.type="ObjectNode",n.prototype.isObjectNode=!0,n.prototype._compile=function(e,t){var n={};for(var r in this.properties)if(YU(this.properties,r)){var a=yV(r),i=JSON.parse(a);if(!YV(this.properties,i))throw new Error('No access to property "'+i+'"');n[i]=this.properties[r]._compile(e,t)}return function(e,t,r){var a={};for(var i in n)YU(n,i)&&(a[i]=n[i](e,t,r));return a}},n.prototype.forEach=function(e){for(var t in this.properties)YU(this.properties,t)&&e(this.properties[t],"properties["+yV(t)+"]",this)},n.prototype.map=function(e){var t={};for(var r in this.properties)YU(this.properties,r)&&(t[r]=this._ifNode(e(this.properties[r],"properties["+yV(r)+"]",this)));return new n(t)},n.prototype.clone=function(){var e={};for(var t in this.properties)YU(this.properties,t)&&(e[t]=this.properties[t]);return new n(e)},n.prototype._toString=function(e){var t=[];for(var n in this.properties)YU(this.properties,n)&&t.push(yV(n)+": "+this.properties[n].toString(e));return"{"+t.join(", ")+"}"},n.prototype.toJSON=function(){return{mathjs:"ObjectNode",properties:this.properties}},n.fromJSON=function(e){return new n(e.properties)},n.prototype.toHTML=function(e){var t=[];for(var n in this.properties)YU(this.properties,n)&&t.push('<span class="math-symbol math-property">'+xV(n)+'</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>'+this.properties[n].toHTML(e));return'<span class="math-parenthesis math-curly-parenthesis">{</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-curly-parenthesis">}</span>'},n.prototype._toTex=function(e){var t=[];for(var n in this.properties)YU(this.properties,n)&&t.push("\\mathbf{"+n+":} & "+this.properties[n].toTex(e)+"\\\\");return"\\left\\{\\begin{array}{ll}".concat(t.join("\n"),"\\end{array}\\right\\}")},n}),{isClass:!0,isNode:!0}),Z5=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];function Y5(e,t){var n=e;"keep"!==t&&(n=e.getContent());for(var r=n.getIdentifier(),a=0;a<Z5.length;a++)if(r in Z5[a])return a;return null}function J5(e,t){var n=e;"keep"!==t&&(n=e.getContent());var r=n.getIdentifier(),a=Y5(n,t);if(null===a)return null;var i=Z5[a][r];if(YU(i,"associativity")){if("left"===i.associativity)return"left";if("right"===i.associativity)return"right";throw Error("'"+r+"' has the invalid associativity '"+i.associativity+"'.")}return null}function Q5(e,t,n){var r="keep"!==n?e.getContent():e,a="keep"!==n?e.getContent():t,i=r.getIdentifier(),s=a.getIdentifier(),o=Y5(r,n);if(null===o)return null;var u=Z5[o][i];if(YU(u,"associativeWith")&&u.associativeWith instanceof Array){for(var c=0;c<u.associativeWith.length;c++)if(u.associativeWith[c]===s)return!0;return!1}return null}var e6=n(928),t6={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},n6={transpose:"^\\top",ctranspose:"^H",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"\\~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},r6={abs:{1:"\\left|${args[0]}\\right|"},add:{2:"\\left(${args[0]}".concat(n6.add,"${args[1]}\\right)")},cbrt:{1:"\\sqrt[3]{${args[0]}}"},ceil:{1:"\\left\\lceil${args[0]}\\right\\rceil"},cube:{1:"\\left(${args[0]}\\right)^3"},divide:{2:"\\frac{${args[0]}}{${args[1]}}"},dotDivide:{2:"\\left(${args[0]}".concat(n6.dotDivide,"${args[1]}\\right)")},dotMultiply:{2:"\\left(${args[0]}".concat(n6.dotMultiply,"${args[1]}\\right)")},dotPow:{2:"\\left(${args[0]}".concat(n6.dotPow,"${args[1]}\\right)")},exp:{1:"\\exp\\left(${args[0]}\\right)"},expm1:"\\left(e".concat(n6.pow,"{${args[0]}}-1\\right)"),fix:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},floor:{1:"\\left\\lfloor${args[0]}\\right\\rfloor"},gcd:"\\gcd\\left(${args}\\right)",hypot:"\\hypot\\left(${args}\\right)",log:{1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},log10:{1:"\\log_{10}\\left(${args[0]}\\right)"},log1p:{1:"\\ln\\left(${args[0]}+1\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}+1\\right)"},log2:"\\log_{2}\\left(${args[0]}\\right)",mod:{2:"\\left(${args[0]}".concat(n6.mod,"${args[1]}\\right)")},multiply:{2:"\\left(${args[0]}".concat(n6.multiply,"${args[1]}\\right)")},norm:{1:"\\left\\|${args[0]}\\right\\|",2:void 0},nthRoot:{2:"\\sqrt[${args[1]}]{${args[0]}}"},nthRoots:{2:"\\{y : $y^{args[1]} = {${args[0]}}\\}"},pow:{2:"\\left(${args[0]}\\right)".concat(n6.pow,"{${args[1]}}")},round:{1:"\\left\\lfloor${args[0]}\\right\\rceil",2:void 0},sign:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},sqrt:{1:"\\sqrt{${args[0]}}"},square:{1:"\\left(${args[0]}\\right)^2"},subtract:{2:"\\left(${args[0]}".concat(n6.subtract,"${args[1]}\\right)")},unaryMinus:{1:"".concat(n6.unaryMinus,"\\left(${args[0]}\\right)")},unaryPlus:{1:"".concat(n6.unaryPlus,"\\left(${args[0]}\\right)")},bitAnd:{2:"\\left(${args[0]}".concat(n6.bitAnd,"${args[1]}\\right)")},bitNot:{1:n6.bitNot+"\\left(${args[0]}\\right)"},bitOr:{2:"\\left(${args[0]}".concat(n6.bitOr,"${args[1]}\\right)")},bitXor:{2:"\\left(${args[0]}".concat(n6.bitXor,"${args[1]}\\right)")},leftShift:{2:"\\left(${args[0]}".concat(n6.leftShift,"${args[1]}\\right)")},rightArithShift:{2:"\\left(${args[0]}".concat(n6.rightArithShift,"${args[1]}\\right)")},rightLogShift:{2:"\\left(${args[0]}".concat(n6.rightLogShift,"${args[1]}\\right)")},bellNumbers:{1:"\\mathrm{B}_{${args[0]}}"},catalan:{1:"\\mathrm{C}_{${args[0]}}"},stirlingS2:{2:"\\mathrm{S}\\left(${args}\\right)"},arg:{1:"\\arg\\left(${args[0]}\\right)"},conj:{1:"\\left(${args[0]}\\right)^*"},im:{1:"\\Im\\left\\lbrace${args[0]}\\right\\rbrace"},re:{1:"\\Re\\left\\lbrace${args[0]}\\right\\rbrace"},and:{2:"\\left(${args[0]}".concat(n6.and,"${args[1]}\\right)")},not:{1:n6.not+"\\left(${args[0]}\\right)"},or:{2:"\\left(${args[0]}".concat(n6.or,"${args[1]}\\right)")},xor:{2:"\\left(${args[0]}".concat(n6.xor,"${args[1]}\\right)")},cross:{2:"\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"},ctranspose:{1:"\\left(${args[0]}\\right)".concat(n6.ctranspose)},det:{1:"\\det\\left(${args[0]}\\right)"},dot:{2:"\\left(${args[0]}\\cdot${args[1]}\\right)"},expm:{1:"\\exp\\left(${args[0]}\\right)"},inv:{1:"\\left(${args[0]}\\right)^{-1}"},sqrtm:{1:"{${args[0]}}".concat(n6.pow,"{\\frac{1}{2}}")},trace:{1:"\\mathrm{tr}\\left(${args[0]}\\right)"},transpose:{1:"\\left(${args[0]}\\right)".concat(n6.transpose)},combinations:{2:"\\binom{${args[0]}}{${args[1]}}"},combinationsWithRep:{2:"\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"},factorial:{1:"\\left(${args[0]}\\right)".concat(n6.factorial)},gamma:{1:"\\Gamma\\left(${args[0]}\\right)"},equal:{2:"\\left(${args[0]}".concat(n6.equal,"${args[1]}\\right)")},larger:{2:"\\left(${args[0]}".concat(n6.larger,"${args[1]}\\right)")},largerEq:{2:"\\left(${args[0]}".concat(n6.largerEq,"${args[1]}\\right)")},smaller:{2:"\\left(${args[0]}".concat(n6.smaller,"${args[1]}\\right)")},smallerEq:{2:"\\left(${args[0]}".concat(n6.smallerEq,"${args[1]}\\right)")},unequal:{2:"\\left(${args[0]}".concat(n6.unequal,"${args[1]}\\right)")},erf:{1:"erf\\left(${args[0]}\\right)"},max:"\\max\\left(${args}\\right)",min:"\\min\\left(${args}\\right)",variance:"\\mathrm{Var}\\left(${args}\\right)",acos:{1:"\\cos^{-1}\\left(${args[0]}\\right)"},acosh:{1:"\\cosh^{-1}\\left(${args[0]}\\right)"},acot:{1:"\\cot^{-1}\\left(${args[0]}\\right)"},acoth:{1:"\\coth^{-1}\\left(${args[0]}\\right)"},acsc:{1:"\\csc^{-1}\\left(${args[0]}\\right)"},acsch:{1:"\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"},asec:{1:"\\sec^{-1}\\left(${args[0]}\\right)"},asech:{1:"\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"},asin:{1:"\\sin^{-1}\\left(${args[0]}\\right)"},asinh:{1:"\\sinh^{-1}\\left(${args[0]}\\right)"},atan:{1:"\\tan^{-1}\\left(${args[0]}\\right)"},atan2:{2:"\\mathrm{atan2}\\left(${args}\\right)"},atanh:{1:"\\tanh^{-1}\\left(${args[0]}\\right)"},cos:{1:"\\cos\\left(${args[0]}\\right)"},cosh:{1:"\\cosh\\left(${args[0]}\\right)"},cot:{1:"\\cot\\left(${args[0]}\\right)"},coth:{1:"\\coth\\left(${args[0]}\\right)"},csc:{1:"\\csc\\left(${args[0]}\\right)"},csch:{1:"\\mathrm{csch}\\left(${args[0]}\\right)"},sec:{1:"\\sec\\left(${args[0]}\\right)"},sech:{1:"\\mathrm{sech}\\left(${args[0]}\\right)"},sin:{1:"\\sin\\left(${args[0]}\\right)"},sinh:{1:"\\sinh\\left(${args[0]}\\right)"},tan:{1:"\\tan\\left(${args[0]}\\right)"},tanh:{1:"\\tanh\\left(${args[0]}\\right)"},to:{2:"\\left(${args[0]}".concat(n6.to,"${args[1]}\\right)")},numeric:function(e,t){return e.args[0].toTex()},number:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},string:{0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},bignumber:{0:"0",1:"\\left(${args[0]}\\right)"},complex:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+".concat(t6.i,"\\cdot\\left(${args[1]}\\right)\\right)")},matrix:{0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},sparse:{0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},unit:{1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"}},a6={deg:"^\\circ"};function i6(e){return e6(e,{preserveFormatting:!0})}function s6(e,t){return(t=void 0!==t&&t)?YU(a6,e)?a6[e]:"\\mathrm{"+i6(e)+"}":YU(t6,e)?t6[e]:i6(e)}var o6=iq("OperatorNode",["Node"],(e=>{var{Node:t}=e;function n(e,t,r,a,i){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(_U))throw new TypeError('Array containing Nodes expected for parameter "args"');this.implicit=!0===a,this.isPercentage=!0===i,this.op=e,this.fn=t,this.args=r||[]}function r(e,t,n,r,a){var i,s=Y5(e,t),o=J5(e,t);if("all"===t||r.length>2&&"OperatorNode:add"!==e.getIdentifier()&&"OperatorNode:multiply"!==e.getIdentifier())return r.map((function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return!1;default:return!0}}));switch(r.length){case 0:i=[];break;case 1:var u=Y5(r[0],t);if(a&&null!==u){var c,l;if("keep"===t?(c=r[0].getIdentifier(),l=e.getIdentifier()):(c=r[0].getContent().getIdentifier(),l=e.getContent().getIdentifier()),!1===Z5[s][l].latexLeftParens){i=[!1];break}if(!1===Z5[u][c].latexParens){i=[!1];break}}if(null===u){i=[!1];break}if(u<=s){i=[!0];break}i=[!1];break;case 2:var p,d,h=Y5(r[0],t),f=Q5(e,r[0],t);p=null!==h&&(h===s&&"right"===o&&!f||h<s);var m,g,y,x=Y5(r[1],t),b=Q5(e,r[1],t);d=null!==x&&(x===s&&"left"===o&&!b||x<s),a&&("keep"===t?(m=e.getIdentifier(),g=e.args[0].getIdentifier(),y=e.args[1].getIdentifier()):(m=e.getContent().getIdentifier(),g=e.args[0].getContent().getIdentifier(),y=e.args[1].getContent().getIdentifier()),null!==h&&(!1===Z5[s][m].latexLeftParens&&(p=!1),!1===Z5[h][g].latexParens&&(p=!1)),null!==x&&(!1===Z5[s][m].latexRightParens&&(d=!1),!1===Z5[x][y].latexParens&&(d=!1))),i=[p,d];break;default:"OperatorNode:add"!==e.getIdentifier()&&"OperatorNode:multiply"!==e.getIdentifier()||(i=r.map((function(n){var r=Y5(n,t),a=Q5(e,n,t),i=J5(n,t);return null!==r&&(s===r&&o===i&&!a||r<s)})))}return r.length>=2&&"OperatorNode:multiply"===e.getIdentifier()&&e.implicit&&"auto"===t&&"hide"===n&&(i=r.map((function(e,t){var n="ParenthesisNode"===e.getIdentifier();return!(!i[t]&&!n)}))),i}return n.prototype=new t,n.prototype.type="OperatorNode",n.prototype.isOperatorNode=!0,n.prototype._compile=function(e,t){if("string"!=typeof this.fn||!JV(e,this.fn))throw e[this.fn]?new Error('No access to function "'+this.fn+'"'):new Error("Function "+this.fn+' missing in provided namespace "math"');var n=XV(e,this.fn),r=zV(this.args,(function(n){return n._compile(e,t)}));if(1===r.length){var a=r[0];return function(e,t,r){return n(a(e,t,r))}}if(2===r.length){var i=r[0],s=r[1];return function(e,t,r){return n(i(e,t,r),s(e,t,r))}}return function(e,t,a){return n.apply(null,zV(r,(function(n){return n(e,t,a)})))}},n.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},n.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new n(this.op,this.fn,t,this.implicit,this.isPercentage)},n.prototype.clone=function(){return new n(this.op,this.fn,this.args.slice(0),this.implicit,this.isPercentage)},n.prototype.isUnary=function(){return 1===this.args.length},n.prototype.isBinary=function(){return 2===this.args.length},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",a=this.args,i=r(this,t,n,a,!1);if(1===a.length){var s=J5(this,t),o=a[0].toString(e);i[0]&&(o="("+o+")");var u=/[a-zA-Z]+/.test(this.op);return"right"===s?this.op+(u?" ":"")+o:"left"===s?o+(u?" ":"")+this.op:o+this.op}if(2===a.length){var c=a[0].toString(e),l=a[1].toString(e);return i[0]&&(c="("+c+")"),i[1]&&(l="("+l+")"),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?c+" "+l:c+" "+this.op+" "+l}if(a.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var p=a.map((function(t,n){return t=t.toString(e),i[n]&&(t="("+t+")"),t}));return this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?p.join(" "):p.join(" "+this.op+" ")}return this.fn+"("+this.args.join(", ")+")"},n.prototype.toJSON=function(){return{mathjs:"OperatorNode",op:this.op,fn:this.fn,args:this.args,implicit:this.implicit,isPercentage:this.isPercentage}},n.fromJSON=function(e){return new n(e.op,e.fn,e.args,e.implicit,e.isPercentage)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",a=this.args,i=r(this,t,n,a,!1);if(1===a.length){var s=J5(this,t),o=a[0].toHTML(e);return i[0]&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>'),"right"===s?'<span class="math-operator math-unary-operator math-lefthand-unary-operator">'+xV(this.op)+"</span>"+o:o+'<span class="math-operator math-unary-operator math-righthand-unary-operator">'+xV(this.op)+"</span>"}if(2===a.length){var u=a[0].toHTML(e),c=a[1].toHTML(e);return i[0]&&(u='<span class="math-parenthesis math-round-parenthesis">(</span>'+u+'<span class="math-parenthesis math-round-parenthesis">)</span>'),i[1]&&(c='<span class="math-parenthesis math-round-parenthesis">(</span>'+c+'<span class="math-parenthesis math-round-parenthesis">)</span>'),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?u+'<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'+c:u+'<span class="math-operator math-binary-operator math-explicit-binary-operator">'+xV(this.op)+"</span>"+c}var l=a.map((function(t,n){return t=t.toHTML(e),i[n]&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t}));return a.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())?this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?l.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'):l.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">'+xV(this.op)+"</span>"):'<span class="math-function">'+xV(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+l.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'},n.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",a=this.args,i=r(this,t,n,a,!0),s=n6[this.fn];if(s=void 0===s?this.op:s,1===a.length){var o=J5(this,t),u=a[0].toTex(e);return i[0]&&(u="\\left(".concat(u,"\\right)")),"right"===o?s+u:u+s}if(2===a.length){var c=a[0],l=c.toTex(e);i[0]&&(l="\\left(".concat(l,"\\right)"));var p,d=a[1].toTex(e);switch(i[1]&&(d="\\left(".concat(d,"\\right)")),p="keep"===t?c.getIdentifier():c.getContent().getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return s+"{"+l+"}{"+d+"}";case"OperatorNode:pow":switch(l="{"+l+"}",d="{"+d+"}",p){case"ConditionalNode":case"OperatorNode:divide":l="\\left(".concat(l,"\\right)")}break;case"OperatorNode:multiply":if(this.implicit&&"hide"===n)return l+"~"+d}return l+s+d}if(a.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var h=a.map((function(t,n){return t=t.toTex(e),i[n]&&(t="\\left(".concat(t,"\\right)")),t}));return"OperatorNode:multiply"===this.getIdentifier()&&this.implicit?h.join("~"):h.join(s)}return"\\mathrm{"+this.fn+"}\\left("+a.map((function(t){return t.toTex(e)})).join(",")+"\\right)"},n.prototype.getIdentifier=function(){return this.type+":"+this.fn},n}),{isClass:!0,isNode:!0}),u6=iq("ParenthesisNode",["Node"],(e=>{var{Node:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!_U(e))throw new TypeError('Node expected for parameter "content"');this.content=e}return n.prototype=new t,n.prototype.type="ParenthesisNode",n.prototype.isParenthesisNode=!0,n.prototype._compile=function(e,t){return this.content._compile(e,t)},n.prototype.getContent=function(){return this.content.getContent()},n.prototype.forEach=function(e){e(this.content,"content",this)},n.prototype.map=function(e){return new n(e(this.content,"content",this))},n.prototype.clone=function(){return new n(this.content)},n.prototype._toString=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"("+this.content.toString(e)+")":this.content.toString(e)},n.prototype.toJSON=function(){return{mathjs:"ParenthesisNode",content:this.content}},n.fromJSON=function(e){return new n(e.content)},n.prototype.toHTML=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?'<span class="math-parenthesis math-round-parenthesis">(</span>'+this.content.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':this.content.toHTML(e)},n.prototype._toTex=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"\\left(".concat(this.content.toTex(e),"\\right)"):this.content.toTex(e)},n}),{isClass:!0,isNode:!0}),c6=iq("RelationalNode",["Node"],(e=>{var{Node:t}=e;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new TypeError("Parameter conditionals must be an array");if(!Array.isArray(t))throw new TypeError("Parameter params must be an array");if(e.length!==t.length-1)throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");this.conditionals=e,this.params=t}return n.prototype=new t,n.prototype.type="RelationalNode",n.prototype.isRelationalNode=!0,n.prototype._compile=function(e,t){var n=this,r=this.params.map((n=>n._compile(e,t)));return function(t,a,i){for(var s,o=r[0](t,a,i),u=0;u<n.conditionals.length;u++)if(s=o,o=r[u+1](t,a,i),!XV(e,n.conditionals[u])(s,o))return!1;return!0}},n.prototype.forEach=function(e){this.params.forEach(((t,n)=>e(t,"params["+n+"]",this)),this)},n.prototype.map=function(e){return new n(this.conditionals.slice(),this.params.map(((t,n)=>this._ifNode(e(t,"params["+n+"]",this))),this))},n.prototype.clone=function(){return new n(this.conditionals,this.params)},n.prototype._toString=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=Y5(this,t),r=this.params.map((function(r,a){var i=Y5(r,t);return"all"===t||null!==i&&i<=n?"("+r.toString(e)+")":r.toString(e)})),a={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},i=r[0],s=0;s<this.conditionals.length;s++)i+=" "+a[this.conditionals[s]]+" "+r[s+1];return i},n.prototype.toJSON=function(){return{mathjs:"RelationalNode",conditionals:this.conditionals,params:this.params}},n.fromJSON=function(e){return new n(e.conditionals,e.params)},n.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=Y5(this,t),r=this.params.map((function(r,a){var i=Y5(r,t);return"all"===t||null!==i&&i<=n?'<span class="math-parenthesis math-round-parenthesis">(</span>'+r.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':r.toHTML(e)})),a={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},i=r[0],s=0;s<this.conditionals.length;s++)i+='<span class="math-operator math-binary-operator math-explicit-binary-operator">'+xV(a[this.conditionals[s]])+"</span>"+r[s+1];return i},n.prototype._toTex=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=Y5(this,t),r=this.params.map((function(r,a){var i=Y5(r,t);return"all"===t||null!==i&&i<=n?"\\left("+r.toTex(e)+"\right)":r.toTex(e)})),a=r[0],i=0;i<this.conditionals.length;i++)a+=n6[this.conditionals[i]]+r[i+1];return a},n}),{isClass:!0,isNode:!0}),l6=iq("ArrayNode",["Node"],(e=>{var{Node:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(this.items=e||[],!Array.isArray(this.items)||!this.items.every(_U))throw new TypeError("Array containing Nodes expected")}return n.prototype=new t,n.prototype.type="ArrayNode",n.prototype.isArrayNode=!0,n.prototype._compile=function(e,t){var n=zV(this.items,(function(n){return n._compile(e,t)}));if("Array"!==e.config.matrix){var r=e.matrix;return function(e,t,a){return r(zV(n,(function(n){return n(e,t,a)})))}}return function(e,t,r){return zV(n,(function(n){return n(e,t,r)}))}},n.prototype.forEach=function(e){for(var t=0;t<this.items.length;t++)e(this.items[t],"items["+t+"]",this)},n.prototype.map=function(e){for(var t=[],r=0;r<this.items.length;r++)t[r]=this._ifNode(e(this.items[r],"items["+r+"]",this));return new n(t)},n.prototype.clone=function(){return new n(this.items.slice(0))},n.prototype._toString=function(e){return"["+this.items.map((function(t){return t.toString(e)})).join(", ")+"]"},n.prototype.toJSON=function(){return{mathjs:"ArrayNode",items:this.items}},n.fromJSON=function(e){return new n(e.items)},n.prototype.toHTML=function(e){return'<span class="math-parenthesis math-square-parenthesis">[</span>'+this.items.map((function(t){return t.toHTML(e)})).join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},n.prototype._toTex=function(e){return function t(n,r){var a=n.some(CU)&&!n.every(CU),i=r||a,s=i?"&":"\\\\",o=n.map((function(n){return n.items?t(n.items,!r):n.toTex(e)})).join(s);return a||!i||i&&!r?"\\begin{bmatrix}"+o+"\\end{bmatrix}":o}(this.items,!1)},n}),{isClass:!0,isNode:!0}),p6=iq("BlockNode",["ResultSet","Node"],(e=>{var{ResultSet:t,Node:n}=e;function r(e){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map((function(e){var t=e&&e.node,n=!e||void 0===e.visible||e.visible;if(!_U(t))throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof n)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:n}}))}return r.prototype=new n,r.prototype.type="BlockNode",r.prototype.isBlockNode=!0,r.prototype._compile=function(e,n){var r=zV(this.blocks,(function(t){return{evaluate:t.node._compile(e,n),visible:t.visible}}));return function(e,n,a){var i=[];return BV(r,(function(t){var r=t.evaluate(e,n,a);t.visible&&i.push(r)})),new t(i)}},r.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},r.prototype.map=function(e){for(var t=[],n=0;n<this.blocks.length;n++){var a=this.blocks[n],i=this._ifNode(e(a.node,"blocks["+n+"].node",this));t[n]={node:i,visible:a.visible}}return new r(t)},r.prototype.clone=function(){return new r(this.blocks.map((function(e){return{node:e.node,visible:e.visible}})))},r.prototype._toString=function(e){return this.blocks.map((function(t){return t.node.toString(e)+(t.visible?"":";")})).join("\n")},r.prototype.toJSON=function(){return{mathjs:"BlockNode",blocks:this.blocks}},r.fromJSON=function(e){return new r(e.blocks)},r.prototype.toHTML=function(e){return this.blocks.map((function(t){return t.node.toHTML(e)+(t.visible?"":'<span class="math-separator">;</span>')})).join('<span class="math-separator"><br /></span>')},r.prototype._toTex=function(e){return this.blocks.map((function(t){return t.node.toTex(e)+(t.visible?"":";")})).join("\\;\\;\n")},r}),{isClass:!0,isNode:!0}),d6=iq("ConditionalNode",["Node"],(e=>{var{Node:t}=e;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!_U(e))throw new TypeError("Parameter condition must be a Node");if(!_U(t))throw new TypeError("Parameter trueExpr must be a Node");if(!_U(r))throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n.prototype=new t,n.prototype.type="ConditionalNode",n.prototype.isConditionalNode=!0,n.prototype._compile=function(e,t){var n=this.condition._compile(e,t),r=this.trueExpr._compile(e,t),a=this.falseExpr._compile(e,t);return function(e,t,i){return function(e){if("number"==typeof e||"boolean"==typeof e||"string"==typeof e)return!!e;if(e){if(iU(e))return!e.isZero();if(sU(e))return!(!e.re&&!e.im);if(uU(e))return!!e.value}if(null==e)return!1;throw new TypeError('Unsupported type of condition "'+qU(e)+'"')}(n(e,t,i))?r(e,t,i):a(e,t,i)}},n.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},n.prototype.clone=function(){return new n(this.condition,this.trueExpr,this.falseExpr)},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=Y5(this,t),r=this.condition.toString(e),a=Y5(this.condition,t);("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=n)&&(r="("+r+")");var i=this.trueExpr.toString(e),s=Y5(this.trueExpr,t);("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=n)&&(i="("+i+")");var o=this.falseExpr.toString(e),u=Y5(this.falseExpr,t);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==u&&u<=n)&&(o="("+o+")"),r+" ? "+i+" : "+o},n.prototype.toJSON=function(){return{mathjs:"ConditionalNode",condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}},n.fromJSON=function(e){return new n(e.condition,e.trueExpr,e.falseExpr)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=Y5(this,t),r=this.condition.toHTML(e),a=Y5(this.condition,t);("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=n)&&(r='<span class="math-parenthesis math-round-parenthesis">(</span>'+r+'<span class="math-parenthesis math-round-parenthesis">)</span>');var i=this.trueExpr.toHTML(e),s=Y5(this.trueExpr,t);("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=n)&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>');var o=this.falseExpr.toHTML(e),u=Y5(this.falseExpr,t);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==u&&u<=n)&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>'),r+'<span class="math-operator math-conditional-operator">?</span>'+i+'<span class="math-operator math-conditional-operator">:</span>'+o},n.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},n}),{isClass:!0,isNode:!0}),h6=iq("ConstantNode",["Node"],(e=>{var{Node:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.value=e}return n.prototype=new t,n.prototype.type="ConstantNode",n.prototype.isConstantNode=!0,n.prototype._compile=function(e,t){var n=this.value;return function(){return n}},n.prototype.forEach=function(e){},n.prototype.map=function(e){return this.clone()},n.prototype.clone=function(){return new n(this.value)},n.prototype._toString=function(e){return gV(this.value,e)},n.prototype.toHTML=function(e){var t=this._toString(e);switch(qU(this.value)){case"number":case"BigNumber":case"Fraction":return'<span class="math-number">'+t+"</span>";case"string":return'<span class="math-string">'+t+"</span>";case"boolean":return'<span class="math-boolean">'+t+"</span>";case"null":return'<span class="math-null-symbol">'+t+"</span>";case"undefined":return'<span class="math-undefined">'+t+"</span>";default:return'<span class="math-symbol">'+t+"</span>"}},n.prototype.toJSON=function(){return{mathjs:"ConstantNode",value:this.value}},n.fromJSON=function(e){return new n(e.value)},n.prototype._toTex=function(e){var t=this._toString(e);switch(qU(this.value)){case"string":return"\\mathtt{"+i6(t)+"}";case"number":case"BigNumber":if(!isFinite(this.value))return this.value.valueOf()<0?"-\\infty":"\\infty";var n=t.toLowerCase().indexOf("e");return-1!==n?t.substring(0,n)+"\\cdot10^{"+t.substring(n+1)+"}":t;case"Fraction":return this.value.toLatex();default:return t}},n}),{isClass:!0,isNode:!0}),f6=iq("RangeNode",["Node"],(e=>{var{Node:t}=e;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!_U(e))throw new TypeError("Node expected");if(!_U(t))throw new TypeError("Node expected");if(r&&!_U(r))throw new TypeError("Node expected");if(arguments.length>3)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function r(e,t){var n=Y5(e,t),r={},a=Y5(e.start,t);if(r.start=null!==a&&a<=n||"all"===t,e.step){var i=Y5(e.step,t);r.step=null!==i&&i<=n||"all"===t}var s=Y5(e.end,t);return r.end=null!==s&&s<=n||"all"===t,r}return n.prototype=new t,n.prototype.type="RangeNode",n.prototype.isRangeNode=!0,n.prototype.needsEnd=function(){return this.filter((function(e){return PU(e)&&"end"===e.name})).length>0},n.prototype._compile=function(e,t){var n=e.range,r=this.start._compile(e,t),a=this.end._compile(e,t);if(this.step){var i=this.step._compile(e,t);return function(e,t,s){return n(r(e,t,s),a(e,t,s),i(e,t,s))}}return function(e,t,i){return n(r(e,t,i),a(e,t,i))}},n.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},n.prototype.clone=function(){return new n(this.start,this.end,this.step&&this.step)},n.prototype._toString=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:"keep"),a=this.start.toString(e);if(n.start&&(a="("+a+")"),t=a,this.step){var i=this.step.toString(e);n.step&&(i="("+i+")"),t+=":"+i}var s=this.end.toString(e);return n.end&&(s="("+s+")"),t+":"+s},n.prototype.toJSON=function(){return{mathjs:"RangeNode",start:this.start,end:this.end,step:this.step}},n.fromJSON=function(e){return new n(e.start,e.end,e.step)},n.prototype.toHTML=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:"keep"),a=this.start.toHTML(e);if(n.start&&(a='<span class="math-parenthesis math-round-parenthesis">(</span>'+a+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t=a,this.step){var i=this.step.toHTML(e);n.step&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+='<span class="math-operator math-range-operator">:</span>'+i}var s=this.end.toHTML(e);return n.end&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+'<span class="math-operator math-range-operator">:</span>'+s},n.prototype._toTex=function(e){var t=r(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e);if(t.start&&(n="\\left(".concat(n,"\\right)")),this.step){var a=this.step.toTex(e);t.step&&(a="\\left(".concat(a,"\\right)")),n+=":"+a}var i=this.end.toTex(e);return t.end&&(i="\\left(".concat(i,"\\right)")),n+":"+i},n}),{isClass:!0,isNode:!0}),m6=iq("reviver",["classes"],(e=>{var{classes:t}=e;return function(e,n){var r=t[n&&n.mathjs];return r&&"function"==typeof r.fromJSON?r.fromJSON(n):n}})),g6="chain",y6=iq(g6,["typed","Chain"],(e=>{var{typed:t,Chain:n}=e;return t(g6,{"":function(){return new n},any:function(e){return new n(e)}})})),x6=iq("FunctionAssignmentNode",["typed","Node"],(e=>{var{typed:t,Node:n}=e;function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t))throw new TypeError('Array containing strings or objects expected for parameter "params"');if(!_U(n))throw new TypeError('Node expected for parameter "expr"');if(H5.has(e))throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t.map((function(e){return e&&e.name||e})),this.types=t.map((function(e){return e&&e.type||"any"})),this.expr=n}function a(e,t){var n=Y5(e,t),r=Y5(e.expr,t);return"all"===t||null!==r&&r<=n}return r.prototype=new n,r.prototype.type="FunctionAssignmentNode",r.prototype.isFunctionAssignmentNode=!0,r.prototype._compile=function(e,n){var r=Object.create(n);BV(this.params,(function(e){r[e]=!0}));var a=this.expr._compile(e,r),i=this.name,s=this.params,o=UV(this.types,","),u=i+"("+UV(this.params,", ")+")";return function(e,n,r){var c={};c[o]=function(){for(var t=Object.create(n),i=0;i<s.length;i++)t[s[i]]=arguments[i];return a(e,t,r)};var l=t(i,c);return l.syntax=u,e.set(i,l),l}},r.prototype.forEach=function(e){e(this.expr,"expr",this)},r.prototype.map=function(e){var t=this._ifNode(e(this.expr,"expr",this));return new r(this.name,this.params.slice(0),t)},r.prototype.clone=function(){return new r(this.name,this.params.slice(0),this.expr)},r.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toString(e);return a(this,t)&&(n="("+n+")"),this.name+"("+this.params.join(", ")+") = "+n},r.prototype.toJSON=function(){var e=this.types;return{mathjs:"FunctionAssignmentNode",name:this.name,params:this.params.map((function(t,n){return{name:t,type:e[n]}})),expr:this.expr}},r.fromJSON=function(e){return new r(e.name,e.params,e.expr)},r.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=[],r=0;r<this.params.length;r++)n.push('<span class="math-symbol math-parameter">'+xV(this.params[r])+"</span>");var i=this.expr.toHTML(e);return a(this,t)&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),'<span class="math-function">'+xV(this.name)+'</span><span class="math-parenthesis math-round-parenthesis">(</span>'+n.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+i},r.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toTex(e);return a(this,t)&&(n="\\left(".concat(n,"\\right)")),"\\mathrm{"+this.name+"}\\left("+this.params.map(s6).join(",")+"\\right):="+n},r}),{isClass:!0,isNode:!0});function b6(e){return e&&e.isIndexError?new NV(e.index+1,e.min+1,void 0!==e.max?e.max+1:void 0):e}function v6(e){var{subset:t}=e;return function(e,n){try{if(Array.isArray(e))return t(e,n);if(e&&"function"==typeof e.subset)return e.subset(n);if("string"==typeof e)return t(e,n);if("object"==typeof e){if(!n.isObjectProperty())throw new TypeError("Cannot apply a numeric index as object property");return XV(e,n.getObjectProperty())}throw new TypeError("Cannot apply index: unsupported type of object")}catch(e){throw b6(e)}}}var w6=iq("AccessorNode",["subset","Node"],(e=>{var{subset:t,Node:n}=e,r=v6({subset:t});function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!_U(e))throw new TypeError('Node expected for parameter "object"');if(!RU(t))throw new TypeError('IndexNode expected for parameter "index"');this.object=e||null,this.index=t,Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}function i(e){return!(EU(e)||CU(e)||MU(e)||OU(e)||FU(e)||BU(e)||PU(e))}return a.prototype=new n,a.prototype.type="AccessorNode",a.prototype.isAccessorNode=!0,a.prototype._compile=function(e,t){var n=this.object._compile(e,t),a=this.index._compile(e,t);if(this.index.isObjectProperty()){var i=this.index.getObjectProperty();return function(e,t,r){return XV(n(e,t,r),i)}}return function(e,t,i){var s=n(e,t,i),o=a(e,t,s);return r(s,o)}},a.prototype.forEach=function(e){e(this.object,"object",this),e(this.index,"index",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.object,"object",this)),this._ifNode(e(this.index,"index",this)))},a.prototype.clone=function(){return new a(this.object,this.index)},a.prototype._toString=function(e){var t=this.object.toString(e);return i(this.object)&&(t="("+t+")"),t+this.index.toString(e)},a.prototype.toHTML=function(e){var t=this.object.toHTML(e);return i(this.object)&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+this.index.toHTML(e)},a.prototype._toTex=function(e){var t=this.object.toTex(e);return i(this.object)&&(t="\\left(' + object + '\\right)"),t+this.index.toTex(e)},a.prototype.toJSON=function(){return{mathjs:"AccessorNode",object:this.object,index:this.index}},a.fromJSON=function(e){return new a(e.object,e.index)},a}),{isClass:!0,isNode:!0}),N6=iq("AssignmentNode",["subset","?matrix","Node"],(e=>{var{subset:t,matrix:n,Node:r}=e,a=v6({subset:t}),i=function(e){var{subset:t,matrix:n}=e;return function(e,r,a){try{if(Array.isArray(e))return n(e).subset(r,a).valueOf();if(e&&"function"==typeof e.subset)return e.subset(r,a);if("string"==typeof e)return t(e,r,a);if("object"==typeof e){if(!r.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return ZV(e,r.getObjectProperty(),a),e}throw new TypeError("Cannot apply index: unsupported type of object")}catch(e){throw b6(e)}}}({subset:t,matrix:n});function s(e,t,n){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(this.object=e,this.index=n?t:null,this.value=n||t,!PU(e)&&!EU(e))throw new TypeError('SymbolNode or AccessorNode expected as "object"');if(PU(e)&&"end"===e.name)throw new Error('Cannot assign to symbol "end"');if(this.index&&!RU(this.index))throw new TypeError('IndexNode expected as "index"');if(!_U(this.value))throw new TypeError('Node expected as "value"');Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}function o(e,t){t||(t="keep");var n=Y5(e,t),r=Y5(e.value,t);return"all"===t||null!==r&&r<=n}return s.prototype=new r,s.prototype.type="AssignmentNode",s.prototype.isAssignmentNode=!0,s.prototype._compile=function(e,t){var n=this.object._compile(e,t),r=this.index?this.index._compile(e,t):null,s=this.value._compile(e,t),o=this.object.name;if(this.index){if(this.index.isObjectProperty()){var u=this.index.getObjectProperty();return function(e,t,r){var a=n(e,t,r),i=s(e,t,r);return ZV(a,u,i),i}}if(PU(this.object))return function(e,t,a){var u=n(e,t,a),c=s(e,t,a),l=r(e,t,u);return e.set(o,i(u,l,c)),c};var c=this.object.object._compile(e,t);if(this.object.index.isObjectProperty()){var l=this.object.index.getObjectProperty();return function(e,t,n){var a=c(e,t,n),o=XV(a,l),u=r(e,t,o),p=s(e,t,n);return ZV(a,l,i(o,u,p)),p}}var p=this.object.index._compile(e,t);return function(e,t,n){var o=c(e,t,n),u=p(e,t,o),l=a(o,u),d=r(e,t,l),h=s(e,t,n);return i(o,u,i(l,d,h)),h}}if(!PU(this.object))throw new TypeError("SymbolNode expected as object");return function(e,t,n){var r=s(e,t,n);return e.set(o,r),r}},s.prototype.forEach=function(e){e(this.object,"object",this),this.index&&e(this.index,"index",this),e(this.value,"value",this)},s.prototype.map=function(e){return new s(this._ifNode(e(this.object,"object",this)),this.index?this._ifNode(e(this.index,"index",this)):null,this._ifNode(e(this.value,"value",this)))},s.prototype.clone=function(){return new s(this.object,this.index,this.value)},s.prototype._toString=function(e){var t=this.object.toString(e),n=this.index?this.index.toString(e):"",r=this.value.toString(e);return o(this,e&&e.parenthesis)&&(r="("+r+")"),t+n+" = "+r},s.prototype.toJSON=function(){return{mathjs:"AssignmentNode",object:this.object,index:this.index,value:this.value}},s.fromJSON=function(e){return new s(e.object,e.index,e.value)},s.prototype.toHTML=function(e){var t=this.object.toHTML(e),n=this.index?this.index.toHTML(e):"",r=this.value.toHTML(e);return o(this,e&&e.parenthesis)&&(r='<span class="math-paranthesis math-round-parenthesis">(</span>'+r+'<span class="math-paranthesis math-round-parenthesis">)</span>'),t+n+'<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+r},s.prototype._toTex=function(e){var t=this.object.toTex(e),n=this.index?this.index.toTex(e):"",r=this.value.toTex(e);return o(this,e&&e.parenthesis)&&(r="\\left(".concat(r,"\\right)")),t+n+":="+r},s}),{isClass:!0,isNode:!0}),S6=iq("IndexNode",["Range","Node","size"],(e=>{var{Range:t,Node:n,size:r}=e;function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(this.dimensions=e,this.dotNotation=t||!1,!Array.isArray(e)||!e.every(_U))throw new TypeError('Array containing Nodes expected for parameter "dimensions"');if(this.dotNotation&&!this.isObjectProperty())throw new Error("dotNotation only applicable for object properties")}function i(e,n,r){return new t(iU(e)?e.toNumber():e,iU(n)?n.toNumber():n,iU(r)?r.toNumber():r)}return a.prototype=new n,a.prototype.type="IndexNode",a.prototype.isIndexNode=!0,a.prototype._compile=function(e,t){var n=zV(this.dimensions,(function(n,a){if(LU(n)){if(n.needsEnd()){var s=Object.create(t);s.end=!0;var o=n.start._compile(e,s),u=n.end._compile(e,s),c=n.step?n.step._compile(e,s):function(){return 1};return function(e,t,n){var s=r(n).valueOf(),l=Object.create(t);return l.end=s[a],i(o(e,l,n),u(e,l,n),c(e,l,n))}}var l=n.start._compile(e,t),p=n.end._compile(e,t),d=n.step?n.step._compile(e,t):function(){return 1};return function(e,t,n){return i(l(e,t,n),p(e,t,n),d(e,t,n))}}if(PU(n)&&"end"===n.name){var h=Object.create(t);h.end=!0;var f=n._compile(e,h);return function(e,t,n){var i=r(n).valueOf(),s=Object.create(t);return s.end=i[a],f(e,s,n)}}var m=n._compile(e,t);return function(e,t,n){return m(e,t,n)}})),a=XV(e,"index");return function(e,t,r){var i=zV(n,(function(n){return n(e,t,r)}));return a(...i)}},a.prototype.forEach=function(e){for(var t=0;t<this.dimensions.length;t++)e(this.dimensions[t],"dimensions["+t+"]",this)},a.prototype.map=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this._ifNode(e(this.dimensions[n],"dimensions["+n+"]",this));return new a(t,this.dotNotation)},a.prototype.clone=function(){return new a(this.dimensions.slice(0),this.dotNotation)},a.prototype.isObjectProperty=function(){return 1===this.dimensions.length&&MU(this.dimensions[0])&&"string"==typeof this.dimensions[0].value},a.prototype.getObjectProperty=function(){return this.isObjectProperty()?this.dimensions[0].value:null},a.prototype._toString=function(e){return this.dotNotation?"."+this.getObjectProperty():"["+this.dimensions.join(", ")+"]"},a.prototype.toJSON=function(){return{mathjs:"IndexNode",dimensions:this.dimensions,dotNotation:this.dotNotation}},a.fromJSON=function(e){return new a(e.dimensions,e.dotNotation)},a.prototype.toHTML=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this.dimensions[n].toHTML();return this.dotNotation?'<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">'+xV(this.getObjectProperty())+"</span>":'<span class="math-parenthesis math-square-parenthesis">[</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},a.prototype._toTex=function(e){var t=this.dimensions.map((function(t){return t.toTex(e)}));return this.dotNotation?"."+this.getObjectProperty():"_{"+t.join(",")+"}"},a}),{isClass:!0,isNode:!0}),k6=iq("SymbolNode",["math","?Unit","Node"],(e=>{var{math:t,Unit:n,Node:r}=e;function a(e){return!!n&&n.isValuelessUnit(e)}function i(e){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}return i.prototype=new r,i.prototype.type="SymbolNode",i.prototype.isSymbolNode=!0,i.prototype._compile=function(e,t){var r=this.name;if(!0===t[r])return function(e,t,n){return t[r]};if(r in e)return function(t,n,a){return t.has(r)?t.get(r):XV(e,r)};var s=a(r);return function(e,t,a){return e.has(r)?e.get(r):s?new n(null,r):i.onUndefinedSymbol(r)}},i.prototype.forEach=function(e){},i.prototype.map=function(e){return this.clone()},i.onUndefinedSymbol=function(e){throw new Error("Undefined symbol "+e)},i.prototype.clone=function(){return new i(this.name)},i.prototype._toString=function(e){return this.name},i.prototype.toHTML=function(e){var t=xV(this.name);return"true"===t||"false"===t?'<span class="math-symbol math-boolean">'+t+"</span>":"i"===t?'<span class="math-symbol math-imaginary-symbol">'+t+"</span>":"Infinity"===t?'<span class="math-symbol math-infinity-symbol">'+t+"</span>":"NaN"===t?'<span class="math-symbol math-nan-symbol">'+t+"</span>":"null"===t?'<span class="math-symbol math-null-symbol">'+t+"</span>":"undefined"===t?'<span class="math-symbol math-undefined-symbol">'+t+"</span>":'<span class="math-symbol">'+t+"</span>"},i.prototype.toJSON=function(){return{mathjs:"SymbolNode",name:this.name}},i.fromJSON=function(e){return new i(e.name)},i.prototype._toTex=function(e){var n=!1;void 0===t[this.name]&&a(this.name)&&(n=!0);var r=s6(this.name,n);return"\\"===r[0]?r:" "+r},i}),{isClass:!0,isNode:!0});function I6(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return"function"==typeof e.createSubScope?sj(e.createSubScope(),...n):sj(rj(),e,...n)}var E6=iq("FunctionNode",["math","Node","SymbolNode"],(e=>{var{math:t,Node:n,SymbolNode:r}=e;function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if("string"==typeof e&&(e=new r(e)),!_U(e))throw new TypeError('Node expected as parameter "fn"');if(!Array.isArray(t)||!t.every(_U))throw new TypeError('Array containing Nodes expected for parameter "args"');this.fn=e,this.args=t||[],Object.defineProperty(this,"name",{get:function(){return this.fn.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}a.prototype=new n,a.prototype.type="FunctionNode",a.prototype.isFunctionNode=!0,a.prototype._compile=function(e,t){if(!(this instanceof a))throw new TypeError("No valid FunctionNode");var n=this.args.map((n=>n._compile(e,t)));if(!PU(this.fn)){if(EU(this.fn)&&RU(this.fn.index)&&this.fn.index.isObjectProperty()){var r=this.fn.object._compile(e,t),i=this.fn.index.getObjectProperty(),s=this.args;return function(t,a,o){var u=r(t,a,o);if(function(e,t){if(!JV(e,t))throw new Error('No access to method "'+t+'"')}(u,i),u[i]&&u[i].rawArgs)return u[i](s,e,I6(t,a),t);var c=n.map((e=>e(t,a,o)));return u[i].apply(u,c)}}var o=this.fn._compile(e,t),u=this.args;return function(t,r,a){var i=o(t,r,a);if(i&&i.rawArgs)return i(u,e,I6(t,r),t);var s=n.map((e=>e(t,r,a)));return i.apply(i,s)}}var c=this.fn.name,l=c in e?XV(e,c):void 0,p="function"==typeof l&&!0===l.rawArgs,d=t=>t.has(c)?t.get(c):c in e?XV(e,c):a.onUndefinedFunction(c);if(p){var h=this.args;return function(t,n,r){return d(t)(h,e,I6(t,n),t)}}switch(n.length){case 0:return function(e,t,n){return d(e)()};case 1:return function(e,t,r){return d(e)((0,n[0])(e,t,r))};case 2:return function(e,t,r){var a=d(e),i=n[0],s=n[1];return a(i(e,t,r),s(e,t,r))};default:return function(e,t,r){return d(e)(...n.map((n=>n(e,t,r))))}}},a.prototype.forEach=function(e){e(this.fn,"fn",this);for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},a.prototype.map=function(e){for(var t=this._ifNode(e(this.fn,"fn",this)),n=[],r=0;r<this.args.length;r++)n[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new a(t,n)},a.prototype.clone=function(){return new a(this.fn,this.args.slice(0))},a.onUndefinedFunction=function(e){throw new Error("Undefined function "+e)};var i=a.prototype.toString;function s(e,t,n){for(var r,a="",i=/\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi,s=0;null!==(r=i.exec(e));)if(a+=e.substring(s,r.index),s=r.index,"$$"===r[0])a+="$",s++;else{s+=r[0].length;var o=t[r[1]];if(!o)throw new ReferenceError("Template: Property "+r[1]+" does not exist.");if(void 0===r[2])switch(typeof o){case"string":a+=o;break;case"object":if(_U(o))a+=o.toTex(n);else{if(!Array.isArray(o))throw new TypeError("Template: "+r[1]+" has to be a Node, String or array of Nodes");a+=o.map((function(e,t){if(_U(e))return e.toTex(n);throw new TypeError("Template: "+r[1]+"["+t+"] is not a Node.")})).join(",")}break;default:throw new TypeError("Template: "+r[1]+" has to be a Node, String or array of Nodes")}else{if(!_U(o[r[2]]&&o[r[2]]))throw new TypeError("Template: "+r[1]+"["+r[2]+"] is not a Node.");a+=o[r[2]].toTex(n)}}return a+e.slice(s)}a.prototype.toString=function(e){var t,n=this.fn.toString(e);return e&&"object"==typeof e.handler&&YU(e.handler,n)&&(t=e.handler[n](this,e)),void 0!==t?t:i.call(this,e)},a.prototype._toString=function(e){var t=this.args.map((function(t){return t.toString(e)}));return($U(this.fn)?"("+this.fn.toString(e)+")":this.fn.toString(e))+"("+t.join(", ")+")"},a.prototype.toJSON=function(){return{mathjs:"FunctionNode",fn:this.fn,args:this.args}},a.fromJSON=function(e){return new a(e.fn,e.args)},a.prototype.toHTML=function(e){var t=this.args.map((function(t){return t.toHTML(e)}));return'<span class="math-function">'+xV(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'};var o=a.prototype.toTex;return a.prototype.toTex=function(e){var t;return e&&"object"==typeof e.handler&&YU(e.handler,this.name)&&(t=e.handler[this.name](this,e)),void 0!==t?t:o.call(this,e)},a.prototype._toTex=function(e){var n,r,a=this.args.map((function(t){return t.toTex(e)}));switch(r6[this.name]&&(n=r6[this.name]),!t[this.name]||"function"!=typeof t[this.name].toTex&&"object"!=typeof t[this.name].toTex&&"string"!=typeof t[this.name].toTex||(n=t[this.name].toTex),typeof n){case"function":r=n(this,e);break;case"string":r=s(n,this,e);break;case"object":switch(typeof n[a.length]){case"function":r=n[a.length](this,e);break;case"string":r=s(n[a.length],this,e)}}return void 0!==r?r:s("\\mathrm{${name}}\\left(${args}\\right)",this,e)},a.prototype.getIdentifier=function(){return this.type+":"+this.name},a}),{isClass:!0,isNode:!0}),C6="parse",T6=iq(C6,["typed","numeric","config","AccessorNode","ArrayNode","AssignmentNode","BlockNode","ConditionalNode","ConstantNode","FunctionAssignmentNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","RangeNode","RelationalNode","SymbolNode"],(e=>{var{typed:t,numeric:n,config:r,AccessorNode:a,ArrayNode:i,AssignmentNode:s,BlockNode:o,ConditionalNode:u,ConstantNode:c,FunctionAssignmentNode:l,FunctionNode:p,IndexNode:d,ObjectNode:h,OperatorNode:f,ParenthesisNode:m,RangeNode:g,RelationalNode:y,SymbolNode:x}=e,b=t(C6,{string:function(e){return R(e,{})},"Array | Matrix":function(e){return v(e,{})},"string, Object":function(e,t){return R(e,void 0!==t.nodes?t.nodes:{})},"Array | Matrix, Object":v});function v(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=void 0!==t.nodes?t.nodes:{};return fj(e,(function(e){if("string"!=typeof e)throw new TypeError("String expected");return R(e,n)}))}var w={",":!0,"(":!0,")":!0,"[":!0,"]":!0,"{":!0,"}":!0,'"':!0,"'":!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},N={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},S={true:!0,false:!1,null:null,undefined:void 0},k=["NaN","Infinity"];function I(e,t){return e.expression.substr(e.index,t)}function E(e){return I(e,1)}function C(e){e.index++}function T(e){return e.expression.charAt(e.index-1)}function D(e){return e.expression.charAt(e.index+1)}function A(e){for(e.tokenType=0,e.token="",e.comment="";b.isWhitespace(E(e),e.nestingLevel);)C(e);if("#"===E(e))for(;"\n"!==E(e)&&""!==E(e);)e.comment+=E(e),C(e);if(""!==E(e)){if("\n"===E(e)&&!e.nestingLevel)return e.tokenType=1,e.token=E(e),void C(e);var t=E(e),n=I(e,2),r=I(e,3);if(3===r.length&&w[r])return e.tokenType=1,e.token=r,C(e),C(e),void C(e);if(2===n.length&&w[n])return e.tokenType=1,e.token=n,C(e),void C(e);if(w[t])return e.tokenType=1,e.token=t,void C(e);if(b.isDigitDot(t)){e.tokenType=2;var a=I(e,2);if("0b"===a||"0o"===a||"0x"===a){for(e.token+=E(e),C(e),e.token+=E(e),C(e);b.isHexDigit(E(e));)e.token+=E(e),C(e);if("."===E(e))for(e.token+=".",C(e);b.isHexDigit(E(e));)e.token+=E(e),C(e);else if("i"===E(e))for(e.token+="i",C(e);b.isDigit(E(e));)e.token+=E(e),C(e);return}if("."===E(e)){if(e.token+=E(e),C(e),!b.isDigit(E(e)))return void(e.tokenType=1)}else{for(;b.isDigit(E(e));)e.token+=E(e),C(e);b.isDecimalMark(E(e),D(e))&&(e.token+=E(e),C(e))}for(;b.isDigit(E(e));)e.token+=E(e),C(e);if("E"===E(e)||"e"===E(e))if(b.isDigit(D(e))||"-"===D(e)||"+"===D(e)){if(e.token+=E(e),C(e),"+"!==E(e)&&"-"!==E(e)||(e.token+=E(e),C(e)),!b.isDigit(E(e)))throw ne(e,'Digit expected, got "'+E(e)+'"');for(;b.isDigit(E(e));)e.token+=E(e),C(e);if(b.isDecimalMark(E(e),D(e)))throw ne(e,'Digit expected, got "'+E(e)+'"')}else if("."===D(e))throw C(e),ne(e,'Digit expected, got "'+E(e)+'"')}else{if(!b.isAlpha(E(e),T(e),D(e))){for(e.tokenType=4;""!==E(e);)e.token+=E(e),C(e);throw ne(e,'Syntax error in part "'+e.token+'"')}for(;b.isAlpha(E(e),T(e),D(e))||b.isDigit(E(e));)e.token+=E(e),C(e);YU(N,e.token)?e.tokenType=1:e.tokenType=3}}else e.tokenType=1}function M(e){do{A(e)}while("\n"===e.token)}function $(e){e.nestingLevel++}function O(e){e.nestingLevel--}function R(e,t){var n={extraNodes:{},expression:"",comment:"",index:0,token:"",tokenType:0,nestingLevel:0,conditionalLevel:null};nU(n,{expression:e,extraNodes:t}),A(n);var r=function(e){var t,n,r=[];for(""!==e.token&&"\n"!==e.token&&";"!==e.token&&((t=_(e)).comment=e.comment);"\n"===e.token||";"===e.token;)0===r.length&&t&&(n=";"!==e.token,r.push({node:t,visible:n})),A(e),"\n"!==e.token&&";"!==e.token&&""!==e.token&&((t=_(e)).comment=e.comment,n=";"!==e.token,r.push({node:t,visible:n}));return r.length>0?new o(r):(t||((t=new c(void 0)).comment=e.comment),t)}(n);if(""!==n.token)throw 1===n.tokenType?re(n,"Unexpected operator "+n.token):ne(n,'Unexpected part "'+n.token+'"');return r}function _(e){var t,n,r,a,i=function(e){for(var t=function(e){for(var t=F(e);"or"===e.token;)M(e),t=new f("or","or",[t,F(e)]);return t}(e);"?"===e.token;){var n=e.conditionalLevel;e.conditionalLevel=e.nestingLevel,M(e);var r=t,a=_(e);if(":"!==e.token)throw ne(e,"False part of conditional expression expected");e.conditionalLevel=null,M(e);var i=_(e);t=new u(r,a,i),e.conditionalLevel=n}return t}(e);if("="===e.token){if(PU(i))return t=i.name,M(e),r=_(e),new s(new x(t),r);if(EU(i))return M(e),r=_(e),new s(i.object,i.index,r);if(OU(i)&&PU(i.fn)&&(a=!0,n=[],t=i.name,i.args.forEach((function(e,t){PU(e)?n[t]=e.name:a=!1})),a))return M(e),r=_(e),new l(t,n,r);throw ne(e,"Invalid left hand side of assignment operator =")}return i}function F(e){for(var t=z(e);"xor"===e.token;)M(e),t=new f("xor","xor",[t,z(e)]);return t}function z(e){for(var t=B(e);"and"===e.token;)M(e),t=new f("and","and",[t,B(e)]);return t}function B(e){for(var t=L(e);"|"===e.token;)M(e),t=new f("|","bitOr",[t,L(e)]);return t}function L(e){for(var t=P(e);"^|"===e.token;)M(e),t=new f("^|","bitXor",[t,P(e)]);return t}function P(e){for(var t=U(e);"&"===e.token;)M(e),t=new f("&","bitAnd",[t,U(e)]);return t}function U(e){for(var t=[q(e)],n=[],r={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};YU(r,e.token);){var a={name:e.token,fn:r[e.token]};n.push(a),M(e),t.push(q(e))}return 1===t.length?t[0]:2===t.length?new f(n[0].name,n[0].fn,t):new y(n.map((e=>e.fn)),t)}function q(e){var t,n,r,a;t=W(e);for(var i={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};YU(i,e.token);)r=i[n=e.token],M(e),a=[t,W(e)],t=new f(n,r,a);return t}function W(e){var t,n,r,a;t=V(e);for(var i={to:"to",in:"to"};YU(i,e.token);)r=i[n=e.token],M(e),"in"===n&&""===e.token?t=new f("*","multiply",[t,new x("in")],!0):(a=[t,V(e)],t=new f(n,r,a));return t}function V(e){var t,n=[];if(t=":"===e.token?new c(1):j(e),":"===e.token&&e.conditionalLevel!==e.nestingLevel){for(n.push(t);":"===e.token&&n.length<3;)M(e),")"===e.token||"]"===e.token||","===e.token||""===e.token?n.push(new x("end")):n.push(j(e));t=3===n.length?new g(n[0],n[2],n[1]):new g(n[0],n[1])}return t}function j(e){var t,n,r,a;t=G(e);for(var i={"+":"add","-":"subtract"};YU(i,e.token);){r=i[n=e.token],M(e);var s=G(e);a=s.isPercentage?[t,new f("*","multiply",[t,s])]:[t,s],t=new f(n,r,a)}return t}function G(e){var t,n,r,a;n=t=H(e);for(var i={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide"};YU(i,e.token);)a=i[r=e.token],M(e),n=H(e),t=new f(r,a,[t,n]);return t}function H(e){var t,n;for(n=t=K(e);3===e.tokenType||"in"===e.token&&MU(t)||!(2!==e.tokenType||MU(n)||zU(n)&&"!"!==n.op)||"("===e.token;)n=K(e),t=new f("*","multiply",[t,n],!0);return t}function K(e){for(var t=X(e),n=t,r=[];"/"===e.token&&MU(n);){if(r.push(nU({},e)),M(e),2!==e.tokenType){nU(e,r.pop());break}if(r.push(nU({},e)),M(e),3!==e.tokenType&&"("!==e.token){r.pop(),nU(e,r.pop());break}nU(e,r.pop()),r.pop(),n=X(e),t=new f("/","divide",[t,n])}return t}function X(e){var t,n,r,a;t=Z(e);for(var i={"%":"mod",mod:"mod"};YU(i,e.token);)r=i[n=e.token],M(e),"%"===n&&1===e.tokenType&&"("!==e.token?t=new f("/","divide",[t,new c(100)],!1,!0):(a=[t,Z(e)],t=new f(n,r,a));return t}function Z(e){var t,a,s,o={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"};return YU(o,e.token)?(s=o[e.token],t=e.token,M(e),a=[Z(e)],new f(t,s,a)):function(e){var t,a,s,o;return t=function(e){var t,a,s;t=function(e){var t=[];if(3===e.tokenType&&YU(e.extraNodes,e.token)){var a=e.extraNodes[e.token];if(A(e),"("===e.token){if(t=[],$(e),A(e),")"!==e.token)for(t.push(_(e));","===e.token;)A(e),t.push(_(e));if(")"!==e.token)throw ne(e,"Parenthesis ) expected");O(e),A(e)}return new a(t)}return function(e){var t;return 3===e.tokenType||1===e.tokenType&&e.token in N?(t=e.token,A(e),Y(e,YU(S,t)?new c(S[t]):-1!==k.indexOf(t)?new c(n(t,"number")):new x(t))):function(e){var t;return'"'===e.token?(t=J(e),Y(e,new c(t))):function(e){var t;return"'"===e.token?(t=Q(e),Y(e,new c(t))):function(e){var t,a,s,o;if("["===e.token){if($(e),A(e),"]"!==e.token){var u=ee(e);if(";"===e.token){for(s=1,a=[u];";"===e.token;)A(e),a[s]=ee(e),s++;if("]"!==e.token)throw ne(e,"End of matrix ] expected");O(e),A(e),o=a[0].items.length;for(var l=1;l<s;l++)if(a[l].items.length!==o)throw re(e,"Column dimensions mismatch ("+a[l].items.length+" !== "+o+")");t=new i(a)}else{if("]"!==e.token)throw ne(e,"End of matrix ] expected");O(e),A(e),t=u}}else O(e),A(e),t=new i([]);return Y(e,t)}return function(e){if("{"===e.token){var t;$(e);var a={};do{if(A(e),"}"!==e.token){if('"'===e.token)t=J(e);else if("'"===e.token)t=Q(e);else{if(!(3===e.tokenType||1===e.tokenType&&e.token in N))throw ne(e,"Symbol or string expected as object key");t=e.token,A(e)}if(":"!==e.token)throw ne(e,"Colon : expected after object key");A(e),a[t]=_(e)}}while(","===e.token);if("}"!==e.token)throw ne(e,"Comma , or bracket } expected after object value");O(e),A(e);var i=new h(a);return Y(e,i)}return function(e){var t;return 2===e.tokenType?(t=e.token,A(e),new c(n(t,r.number))):function(e){var t;if("("===e.token){if($(e),A(e),t=_(e),")"!==e.token)throw ne(e,"Parenthesis ) expected");return O(e),A(e),Y(e,t=new m(t))}return function(e){throw""===e.token?ne(e,"Unexpected end of expression"):ne(e,"Value expected")}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e);for(var o={"!":"factorial","'":"ctranspose"};YU(o,e.token);)s=o[a=e.token],A(e),t=Y(e,t=new f(a,s,[t]));return t}(e),("^"===e.token||".^"===e.token)&&(s="^"===(a=e.token)?"pow":"dotPow",M(e),o=[t,Z(e)],t=new f(a,s,o)),t}(e)}function Y(e,t,n){for(var r;!("("!==e.token&&"["!==e.token&&"."!==e.token||n&&-1===n.indexOf(e.token));)if(r=[],"("===e.token){if(!PU(t)&&!EU(t))return t;if($(e),A(e),")"!==e.token)for(r.push(_(e));","===e.token;)A(e),r.push(_(e));if(")"!==e.token)throw ne(e,"Parenthesis ) expected");O(e),A(e),t=new p(t,r)}else if("["===e.token){if($(e),A(e),"]"!==e.token)for(r.push(_(e));","===e.token;)A(e),r.push(_(e));if("]"!==e.token)throw ne(e,"Parenthesis ] expected");O(e),A(e),t=new a(t,new d(r))}else{if(A(e),3!==e.tokenType)throw ne(e,"Property name expected after dot");r.push(new c(e.token)),A(e),t=new a(t,new d(r,!0))}return t}function J(e){for(var t="";""!==E(e)&&'"'!==E(e);)"\\"===E(e)&&(t+=E(e),C(e)),t+=E(e),C(e);if(A(e),'"'!==e.token)throw ne(e,'End of string " expected');return A(e),JSON.parse('"'+t+'"')}function Q(e){for(var t="";""!==E(e)&&"'"!==E(e);)"\\"===E(e)&&(t+=E(e),C(e)),t+=E(e),C(e);if(A(e),"'"!==e.token)throw ne(e,"End of string ' expected");return A(e),JSON.parse('"'+t+'"')}function ee(e){for(var t=[_(e)],n=1;","===e.token;)A(e),t[n]=_(e),n++;return new i(t)}function te(e){return e.index-e.token.length+1}function ne(e,t){var n=te(e),r=new SyntaxError(t+" (char "+n+")");return r.char=n,r}function re(e,t){var n=te(e),r=new SyntaxError(t+" (char "+n+")");return r.char=n,r}return b.isAlpha=function(e,t,n){return b.isValidLatinOrGreek(e)||b.isValidMathSymbol(e,n)||b.isValidMathSymbol(t,e)},b.isValidLatinOrGreek=function(e){return/^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(e)},b.isValidMathSymbol=function(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)},b.isWhitespace=function(e,t){return" "===e||"\t"===e||"\n"===e&&t>0},b.isDecimalMark=function(e,t){return"."===e&&"/"!==t&&"*"!==t&&"^"!==t},b.isDigitDot=function(e){return e>="0"&&e<="9"||"."===e},b.isDigit=function(e){return e>="0"&&e<="9"},b.isHexDigit=function(e){return e>="0"&&e<="9"||e>="a"&&e<="f"||e>="A"&&e<="F"},b})),D6="compile",A6=iq(D6,["typed","parse"],(e=>{var{typed:t,parse:n}=e;return t(D6,{string:function(e){return n(e).compile()},"Array | Matrix":function(e){return fj(e,(function(e){return n(e).compile()}))}})})),M6="evaluate",$6=iq(M6,["typed","parse"],(e=>{var{typed:t,parse:n}=e;return t(M6,{string:function(e){var t=rj();return n(e).compile().evaluate(t)},"string, Map | Object":function(e,t){return n(e).compile().evaluate(t)},"Array | Matrix":function(e){var t=rj();return fj(e,(function(e){return n(e).compile().evaluate(t)}))},"Array | Matrix, Map | Object":function(e,t){return fj(e,(function(e){return n(e).compile().evaluate(t)}))}})})),O6=iq("Help",["parse"],(e=>{var{parse:t}=e;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}return n.prototype.type="Help",n.prototype.isHelp=!0,n.prototype.toString=function(){var e=this.doc||{},n="\n";if(e.name&&(n+="Name: "+e.name+"\n\n"),e.category&&(n+="Category: "+e.category+"\n\n"),e.description&&(n+="Description:\n    "+e.description+"\n\n"),e.syntax&&(n+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){n+="Examples:\n";for(var r={},a=0;a<e.examples.length;a++){var i=e.examples[a];n+="    "+i+"\n";var s=void 0;try{s=t(i).compile().evaluate(r)}catch(e){s=e}void 0===s||bU(s)||(n+="        "+gV(s,{precision:14})+"\n")}n+="\n"}return e.seealso&&e.seealso.length&&(n+="See also: "+e.seealso.join(", ")+"\n"),n},n.prototype.toJSON=function(){var e=WU(this.doc);return e.mathjs="Help",e},n.fromJSON=function(e){var t={};return Object.keys(e).filter((e=>"mathjs"!==e)).forEach((n=>{t[n]=e[n]})),new n(t)},n.prototype.valueOf=n.prototype.toString,n}),{isClass:!0}),R6=iq("Parser",["evaluate"],(e=>{var{evaluate:t}=e;function n(){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");Object.defineProperty(this,"scope",{value:rj(),writable:!1})}return n.prototype.type="Parser",n.prototype.isParser=!0,n.prototype.evaluate=function(e){return t(e,this.scope)},n.prototype.get=function(e){if(this.scope.has(e))return this.scope.get(e)},n.prototype.getAll=function(){return function(e){if(e instanceof nj)return e.wrappedObject;var t={};for(var n of e.keys())ZV(t,n,e.get(n));return t}(this.scope)},n.prototype.getAllAsMap=function(){return this.scope},n.prototype.set=function(e,t){return this.scope.set(e,t),t},n.prototype.remove=function(e){this.scope.delete(e)},n.prototype.clear=function(){this.scope.clear()},n}),{isClass:!0}),_6="parser",F6=iq(_6,["typed","Parser"],(e=>{var{typed:t,Parser:n}=e;return t(_6,{"":function(){return new n}})})),z6=iq("simplifyUtil",["FunctionNode","OperatorNode","SymbolNode"],(e=>{var{FunctionNode:t,OperatorNode:n,SymbolNode:r}=e,a={add:!0,multiply:!0},i={add:!0,multiply:!0};function s(e,t){if(!zU(e))return!1;var n=e.fn.toString();return t&&YU(t,n)&&YU(t[n],"associative")?t[n].associative:i[n]||!1}function o(e){var t,n=[];return s(e)?(t=e.op,function e(r){for(var a=0;a<r.args.length;a++){var i=r.args[a];zU(i)&&t===i.op?e(i):n.push(i)}}(e),n):e.args}function u(e){return zU(e)?function(t){try{return new n(e.op,e.fn,t,e.implicit)}catch(e){return console.error(e),[]}}:function(n){return new t(new r(e.name),n)}}return{createMakeNodeFunction:u,isCommutative:function(e,t){if(!zU(e))return!0;var n=e.fn.toString();return t&&YU(t,n)&&YU(t[n],"commutative")?t[n].commutative:a[n]||!1},isAssociative:s,flatten:function e(t){if(!t.args||0===t.args.length)return t;t.args=o(t);for(var n=0;n<t.args.length;n++)e(t.args[n])},allChildren:o,unflattenr:function e(t){if(t.args&&0!==t.args.length){for(var n=u(t),r=t.args.length,a=0;a<r;a++)e(t.args[a]);if(r>2&&s(t)){for(var i=t.args.pop();t.args.length>0;)i=n([t.args.pop(),i]);t.args=i.args}}},unflattenl:function e(t){if(t.args&&0!==t.args.length){for(var n=u(t),r=t.args.length,a=0;a<r;a++)e(t.args[a]);if(r>2&&s(t)){for(var i=t.args.shift();t.args.length>0;)i=n([i,t.args.shift()]);t.args=i.args}}}}})),B6=iq("simplifyCore",["equal","isZero","add","subtract","multiply","divide","pow","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode"],(e=>{var{equal:t,isZero:n,add:r,subtract:a,multiply:i,divide:s,pow:o,AccessorNode:u,ArrayNode:c,ConstantNode:l,FunctionNode:p,IndexNode:d,ObjectNode:h,OperatorNode:f,ParenthesisNode:m}=e,g=new l(0),y=new l(1);function x(e){return e.map(b).map((function(e){return BU(e)?e.content:e}))}function b(e){if(zU(e)&&e.isUnary()){var v=b(e.args[0]);if("+"===e.op)return v;if("-"===e.op){if(zU(v)){if(v.isUnary()&&"-"===v.op)return v.args[0];if(v.isBinary()&&"subtract"===v.fn)return new f("-","subtract",[v.args[1],v.args[0]])}return new f(e.op,e.fn,[v])}}else if(zU(e)&&e.isBinary()){var w=b(e.args[0]),N=b(e.args[1]);if("+"===e.op){if(MU(w)){if(n(w.value))return N;if(MU(N))return new l(r(w.value,N.value))}return MU(N)&&n(N.value)?w:zU(N)&&N.isUnary()&&"-"===N.op?new f("-","subtract",[w,N.args[0]]):new f(e.op,e.fn,N?[w,N]:[w])}if("-"===e.op){if(MU(w)&&N){if(MU(N))return new l(a(w.value,N.value));if(n(w.value))return new f("-","unaryMinus",[N])}if("subtract"===e.fn)return MU(N)&&n(N.value)?w:zU(N)&&N.isUnary()&&"-"===N.op?b(new f("+","add",[w,N.args[0]])):new f(e.op,e.fn,[w,N])}else{if("*"===e.op){if(MU(w)){if(n(w.value))return g;if(t(w.value,1))return N;if(MU(N))return new l(i(w.value,N.value))}if(MU(N)){if(n(N.value))return g;if(t(N.value,1))return w;if(zU(w)&&w.isBinary()&&w.op===e.op){var S=w.args[0];if(MU(S)){var k=new l(i(S.value,N.value));return new f(e.op,e.fn,[k,w.args[1]],e.implicit)}}return new f(e.op,e.fn,[N,w],e.implicit)}return new f(e.op,e.fn,[w,N],e.implicit)}if("/"===e.op){if(MU(w)){if(n(w.value))return g;if(MU(N)&&(t(N.value,1)||t(N.value,2)||t(N.value,4)))return new l(s(w.value,N.value))}return new f(e.op,e.fn,[w,N])}if("^"===e.op){if(MU(N)){if(n(N.value))return y;if(t(N.value,1))return w;if(MU(w))return new l(o(w.value,N.value));if(zU(w)&&w.isBinary()&&"^"===w.op){var I=w.args[1];if(MU(I))return new f(e.op,e.fn,[w.args[0],new l(i(I.value,N.value))])}}return new f(e.op,e.fn,[w,N])}}}else{if(BU(e)){var E=b(e.content);return BU(E)||PU(E)||MU(E)?E:new m(E)}if(OU(e))return new p(b(e.fn),x(e.args));if(CU(e))return new c(x(e.items));if(EU(e)){var C=x(e.object);return BU(C)&&(C=C.content),new u(C,b(e.index))}if(RU(e))return new d(x(e.dimensions));if(FU(e)){var T={};for(var D in e.properties)T[D]=b(e.properties[D]);return new h(T)}}return e}return b})),L6=iq("simplifyConstant",["typed","config","mathWithTransform","matrix","?fraction","?bignumber","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode"],(e=>{var{typed:t,config:n,mathWithTransform:r,matrix:a,fraction:i,bignumber:s,AccessorNode:o,ArrayNode:u,ConstantNode:c,FunctionNode:l,IndexNode:p,ObjectNode:d,OperatorNode:h,SymbolNode:f}=e,{isCommutative:m,isAssociative:g,allChildren:y,createMakeNodeFunction:x}=z6({FunctionNode:l,OperatorNode:h,SymbolNode:f});function b(e,t){return S(T(e,t))}function v(e){return oU(e)?e.valueOf():e instanceof Array?e.map(v):pU(e)?a(v(e.valueOf())):e}function w(e,t,n){try{return r[e].apply(null,t)}catch(a){return t=t.map(v),I(r[e].apply(null,t),n)}}var N=t({Fraction:function(e){var t,n=e.s*e.n;return t=n<0?new h("-","unaryMinus",[new c(-n)]):new c(n),1===e.d?t:new h("/","divide",[t,new c(e.d)])},number:function(e){return e<0?E(new c(-e)):new c(e)},BigNumber:function(e){return e<0?E(new c(-e)):new c(e)},Complex:function(e){throw new Error("Cannot convert Complex number to Node")},string:function(e){return new c(e)},Matrix:function(e){return new u(e.valueOf().map((e=>N(e))))}});function S(e){return _U(e)?e:N(e)}function k(e,t){if(t&&!1!==t.exactFractions&&isFinite(e)&&i){var n=i(e),r=t&&"number"==typeof t.fractionsLimit?t.fractionsLimit:1/0;if(n.valueOf()===e&&n.n<r&&n.d<r)return n}return e}var I=t({"string, Object":function(e,t){return"BigNumber"===n.number?(void 0===s&&AX(),s(e)):"Fraction"===n.number?(void 0===i&&MX(),i(e)):k(parseFloat(e),t)},"Fraction, Object":function(e,t){return e},"BigNumber, Object":function(e,t){return e},"number, Object":function(e,t){return k(e,t)},"Complex, Object":function(e,t){return 0!==e.im?e:k(e.re,t)},"Matrix, Object":function(e,t){return a(k(e.valueOf()))},"Array, Object":function(e,t){return e.map(k)}});function E(e){return new h("-","unaryMinus",[e])}function C(e,t,n,r){return t.reduce((function(t,a){if(_U(t)||_U(a))_U(t)?_U(a)||(a=N(a)):t=N(t);else{try{return w(e,[t,a],r)}catch(e){}t=N(t),a=N(a)}return n([t,a])}))}function T(e,t){switch(e.type){case"SymbolNode":return e;case"ConstantNode":switch(typeof e.value){case"number":return I(e.value,t);case"string":return e.value;default:if(!isNaN(e.value))return I(e.value,t)}return e;case"FunctionNode":if(r[e.name]&&r[e.name].rawArgs)return e;if(-1===["add","multiply"].indexOf(e.name)){var n=e.args.map((e=>T(e,t)));if(!n.some(_U))try{return w(e.name,n,t)}catch(e){}if("size"===e.name&&1===n.length&&CU(n[0])){for(var i=[],s=n[0];CU(s);)i.push(s.items.length),s=s.items[0];return a(i)}return new l(e.name,n.map(S))}case"OperatorNode":var h,f,v=e.fn.toString(),N=x(e);if(zU(e)&&e.isUnary())f=_U((h=[T(e.args[0],t)])[0])?N(h):w(v,h,t);else if(g(e))if(h=(h=y(e)).map((e=>T(e,t))),m(v)){for(var k=[],E=[],D=0;D<h.length;D++)_U(h[D])?E.push(h[D]):k.push(h[D]);k.length>1?(f=C(v,k,N,t),E.unshift(f),f=C(v,E,N,t)):f=C(v,h,N,t)}else f=C(v,h,N,t);else h=e.args.map((e=>T(e,t))),f=C(v,h,N,t);return f;case"ParenthesisNode":return T(e.content,t);case"AccessorNode":return function(e,t,n){if(!RU(t))return new o(S(e),S(t));if(CU(e)||pU(e)){for(var r=Array.from(t.dimensions);r.length>0;)if(MU(r[0])&&"string"!=typeof r[0].value){var i=I(r.shift().value,n);CU(e)?e=e.items[i-1]:(e=e.valueOf()[i-1])instanceof Array&&(e=a(e))}else{if(!(r.length>1&&MU(r[1])&&"string"!=typeof r[1].value))break;var s=I(r[1].value,n),l=[],d=CU(e)?e.items:e.valueOf();for(var h of d)if(CU(h))l.push(h.items[s-1]);else{if(!pU(e))break;l.push(h[s-1])}if(l.length!==d.length)break;e=CU(e)?new u(l):a(l),r.splice(1,1)}return r.length===t.dimensions.length?new o(S(e),t):r.length>0?(t=new p(r),new o(S(e),t)):e}if(FU(e)&&1===t.dimensions.length&&MU(t.dimensions[0])){var f=t.dimensions[0].value;return f in e.properties?e.properties[f]:new c}return new o(S(e),t)}(T(e.object,t),T(e.index,t),t);case"ArrayNode":var A=e.items.map((e=>T(e,t)));return A.some(_U)?new u(A.map(S)):a(A);case"IndexNode":return new p(e.dimensions.map((e=>b(e,t))));case"ObjectNode":var M={};for(var $ in e.properties)M[$]=b(e.properties[$],t);return new d(M);default:throw new Error("Unimplemented node type in simplifyConstant: ".concat(e.type))}}return b})),P6=iq("resolve",["parse","FunctionNode","OperatorNode","ParenthesisNode"],(e=>{var{parse:t,FunctionNode:n,OperatorNode:r,ParenthesisNode:a}=e;return function e(i,s){if(!s)return i;if(ij(s)||(s=aj(s)),PU(i)){var o=s.get(i.name);if(_U(o))return e(o,s);if("number"==typeof o)return t(String(o))}else{if(zU(i)){var u=i.args.map((function(t){return e(t,s)}));return new r(i.op,i.fn,u,i.implicit)}if(BU(i))return new a(e(i.content,s));if(OU(i)){var c=i.args.map((function(t){return e(t,s)}));return new n(i.name,c)}}return i}})),U6=iq("simplify",["config","typed","parse","add","subtract","multiply","divide","pow","isZero","equal","?fraction","?bignumber","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","SymbolNode"],(e=>{var{config:t,typed:n,parse:r,add:a,subtract:i,multiply:s,divide:o,pow:u,isZero:c,equal:l,fraction:p,bignumber:d,mathWithTransform:h,matrix:f,AccessorNode:m,ArrayNode:g,ConstantNode:y,FunctionNode:x,IndexNode:b,ObjectNode:v,OperatorNode:w,ParenthesisNode:N,SymbolNode:S}=e,k=L6({typed:n,config:t,mathWithTransform:h,matrix:f,fraction:p,bignumber:d,AccessorNode:m,ArrayNode:g,ConstantNode:y,FunctionNode:x,IndexNode:b,ObjectNode:v,OperatorNode:w,SymbolNode:S}),I=B6({equal:l,isZero:c,add:a,subtract:i,multiply:s,divide:o,pow:u,AccessorNode:m,ArrayNode:g,ConstantNode:y,FunctionNode:x,IndexNode:b,ObjectNode:v,OperatorNode:w,ParenthesisNode:N}),E=P6({parse:r,FunctionNode:x,OperatorNode:w,ParenthesisNode:N}),{isCommutative:C,isAssociative:T,flatten:D,unflattenr:A,unflattenl:M,createMakeNodeFunction:$}=z6({FunctionNode:x,OperatorNode:w,SymbolNode:S}),O=n("simplify",{string:function(e){return this(r(e),this.rules,rj(),{})},"string, Map | Object":function(e,t){return this(r(e),this.rules,t,{})},"string, Map | Object, Object":function(e,t,n){return this(r(e),this.rules,t,n)},"string, Array":function(e,t){return this(r(e),t,rj(),{})},"string, Array, Map | Object":function(e,t,n){return this(r(e),t,n,{})},"string, Array, Map | Object, Object":function(e,t,n,a){return this(r(e),t,n,a)},"Node, Map | Object":function(e,t){return this(e,this.rules,t,{})},"Node, Map | Object, Object":function(e,t,n){return this(e,this.rules,t,n)},Node:function(e){return this(e,this.rules,rj(),{})},"Node, Array":function(e,t){return this(e,t,rj(),{})},"Node, Array, Map | Object":function(e,t,n){return this(e,t,n,{})},"Node, Array, Object, Object":function(e,t,n,r){return this(e,t,aj(n),r)},"Node, Array, Map, Object":function(e,t,n,a){var i=a.consoleDebug;t=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n],i=void 0,s=typeof a;switch(s){case"string":var o=a.split("->");if(2!==o.length)throw SyntaxError("Could not parse rule: "+a);a={l:o[0],r:o[1]};case"object":if(i={l:R(r(a.l)),r:R(r(a.r))},a.context&&(i.context=a.context),a.evaluate&&(i.evaluate=r(a.evaluate)),T(i.l)){var u=$(i.l),c=new S("_p"+F++);i.expanded={},i.expanded.l=u([i.l.clone(),c]),D(i.expanded.l),A(i.expanded.l),i.expanded.r=u([i.r,c])}break;case"function":i=a;break;default:throw TypeError("Unsupported type of rule: "+s)}t.push(i)}return t}(t);for(var s=E(e,n),o={},u=(s=R(s)).toString({parenthesis:"all"});!o[u];){o[u]=!0,F=0;var c=u;i&&console.log("Working on: ",u);for(var l=0;l<t.length;l++){var p="";if("function"==typeof t[l]?(s=t[l](s,a),i&&(p=t[l].name)):(D(s),s=B(s,t[l]),i&&(p="".concat(t[l].l.toString()," -> ").concat(t[l].r.toString()))),i){var d=s.toString({parenthesis:"all"});d!==c&&(console.log("Applying",p,"produced",d),c=d)}M(s)}u=s.toString({parenthesis:"all"})}return s}});function R(e){return e.transform((function(e,t,n){return BU(e)?R(e.content):e}))}O.simplifyCore=I,O.resolve=E;var _={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};O.rules=[I,{l:"log(e)",r:"1"},{l:"n-n1",r:"n+-n1"},{l:"-(c*v)",r:"v * (-c)"},{l:"-v",r:"v * (-1)"},{l:"n/n1^n2",r:"n*n1^-n2"},{l:"n/n1",r:"n*n1^-1"},k,{l:"(n ^ n1) ^ n2",r:"n ^ (n1 * n2)"},{l:"n*n",r:"n^2"},{l:"n * n^n1",r:"n^(n1+1)"},{l:"n^n1 * n^n2",r:"n^(n1+n2)"},{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},{l:"v*n + v",r:"v*(n+1)"},{l:"n3*n1 + n3*n2",r:"n3*(n1+n2)"},{l:"n*c + c",r:"(n+1)*c"},{l:"n1 + (n2 + n3)*(-1)",r:"n1 + n2*(-1) + n3*(-1)"},{l:"(-n)*n1",r:"-(n*n1)"},{l:"c+v",r:"v+c",context:{add:{commutative:!1}}},{l:"v*c",r:"c*v",context:{multiply:{commutative:!1}}},{l:"n+-n1",r:"n-n1"},{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"n-(n1+n2)",r:"n-n1-n2"},{l:"1*n",r:"n"},{l:"n1/(n2/n3)",r:"(n1*n3)/n2"},{l:"n1/(-n2)",r:"-n1/n2"}];var F=0;function z(e,t){if(e)for(var n=0;n<e.length;++n)e[n]=B(e[n],t)}var B=n("applyRule",{"Node, Object":function(e,t){var n=e;if(n instanceof w||n instanceof x)z(n.args,t);else if(n instanceof N)n.content&&(n.content=B(n.content,t));else if(n instanceof g)z(n.items,t);else if(n instanceof m)n.object&&(n.object=B(n.object,t)),n.index&&(n.index=B(n.index,t));else if(n instanceof b)z(n.dimensions,t);else if(n instanceof v)for(var r in n.properties)n.properties[r]=B(n.properties[r],t);var a=t.r,i=U(t.l,n)[0];if(!i&&t.expanded&&(a=t.expanded.r,i=U(t.expanded.l,n)[0]),i){var s=n.implicit;n=a.clone(),s&&"implicit"in a&&(n.implicit=!0),n=n.transform((function(e){return e.isSymbolNode&&YU(i.placeholders,e.name)?i.placeholders[e.name].clone():e}))}return n}});function L(e,t){var n={placeholders:{}};if(!e.placeholders&&!t.placeholders)return n;if(!e.placeholders)return t;if(!t.placeholders)return e;for(var r in e.placeholders)if(YU(e.placeholders,r)&&(n.placeholders[r]=e.placeholders[r],YU(t.placeholders,r)&&!q(e.placeholders[r],t.placeholders[r])))return null;for(var a in t.placeholders)YU(t.placeholders,a)&&(n.placeholders[a]=t.placeholders[a]);return n}function P(e,t){var n,r=[];if(0===e.length||0===t.length)return r;for(var a=0;a<e.length;a++)for(var i=0;i<t.length;i++)(n=L(e[a],t[i]))&&r.push(n);return r}function U(e,t,n){var r=[{placeholders:{}}];if(e instanceof w&&t instanceof w||e instanceof x&&t instanceof x){if(e instanceof w){if(e.op!==t.op||e.fn!==t.fn)return[]}else if(e instanceof x&&e.name!==t.name)return[];if(!(1===t.args.length&&1===e.args.length||!T(t)&&t.args.length===e.args.length||n)){if(t.args.length>=2&&2===e.args.length){for(var a=function(e,t){var n,r,a=[],i=$(e);if(C(e,t))for(var s=0;s<e.args.length;s++)(r=e.args.slice(0)).splice(s,1),n=1===r.length?r[0]:i(r),a.push(i([e.args[s],n]));else n=1===(r=e.args.slice(1)).length?r[0]:i(r),a.push(i([e.args[0],n]));return a}(t,e.context),i=[],s=0;s<a.length;s++){var o=U(e,a[s],!0);i=i.concat(o)}return i}if(e.args.length>2)throw Error("Unexpected non-binary associative function: "+e.toString());return[]}for(var u=[],c=0;c<e.args.length;c++){var p=U(e.args[c],t.args[c]);if(0===p.length)return[];u.push(p)}r=function(e){if(0===e.length)return e;for(var t=e.reduce(P),n=[],r={},a=0;a<t.length;a++){var i=JSON.stringify(t[a]);r[i]||(r[i]=!0,n.push(t[a]))}return n}(u)}else if(e instanceof S){if(0===e.name.length)throw new Error("Symbol in rule has 0 length...!?");if(_[e.name]){if(e.name!==t.name)return[]}else if("n"===e.name[0]||"_p"===e.name.substring(0,2))r[0].placeholders[e.name]=t;else if("v"===e.name[0]){if(MU(t))return[];r[0].placeholders[e.name]=t}else{if("c"!==e.name[0])throw new Error("Invalid symbol in rule: "+e.name);if(!(t instanceof y))return[];r[0].placeholders[e.name]=t}}else{if(!(e instanceof y))return[];if(!l(e.value,t.value))return[]}return r}function q(e,t){if(e instanceof y&&t instanceof y){if(!l(e.value,t.value))return!1}else if(e instanceof S&&t instanceof S){if(e.name!==t.name)return!1}else{if(!(e instanceof w&&t instanceof w||e instanceof x&&t instanceof x))return!1;if(e instanceof w){if(e.op!==t.op||e.fn!==t.fn)return!1}else if(e instanceof x&&e.name!==t.name)return!1;if(e.args.length!==t.args.length)return!1;for(var n=0;n<e.args.length;n++)if(!q(e.args[n],t.args[n]))return!1}return!0}return O})),q6=iq("derivative",["typed","config","parse","simplify","equal","isZero","numeric","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],(e=>{var{typed:t,config:n,parse:r,simplify:a,equal:i,isZero:s,numeric:o,ConstantNode:u,FunctionNode:c,OperatorNode:l,ParenthesisNode:p,SymbolNode:d}=e,h=t("derivative",{"Node, SymbolNode, Object":function(e,t,n){var r={};m(r,e,t.name);var i=g(e,r);return n.simplify?a(i):i},"Node, SymbolNode":function(e,t){return this(e,t,{simplify:!0})},"string, SymbolNode":function(e,t){return this(r(e),t)},"string, SymbolNode, Object":function(e,t,n){return this(r(e),t,n)},"string, string":function(e,t){return this(r(e),r(t))},"string, string, Object":function(e,t,n){return this(r(e),r(t),n)},"Node, string":function(e,t){return this(e,r(t))},"Node, string, Object":function(e,t,n){return this(e,r(t),n)}});h._simplify=!0,h.toTex=function(e){return f.apply(null,e.args)};var f=t("_derivTex",{"Node, SymbolNode":function(e,t){return MU(e)&&"string"===qU(e.value)?f(r(e.value).toString(),t.toString(),1):f(e.toString(),t.toString(),1)},"Node, ConstantNode":function(e,t){if("string"===qU(t.value))return f(e,r(t.value));throw new Error("The second parameter to 'derivative' is a non-string constant")},"Node, SymbolNode, ConstantNode":function(e,t,n){return f(e.toString(),t.name,n.value)},"string, string, number":function(e,t,n){return(1===n?"{d\\over d"+t+"}":"{d^{"+n+"}\\over d"+t+"^{"+n+"}}")+"\\left[".concat(e,"\\right]")}}),m=t("constTag",{"Object, ConstantNode, string":function(e,t){return e[t]=!0,!0},"Object, SymbolNode, string":function(e,t,n){return t.name!==n&&(e[t]=!0,!0)},"Object, ParenthesisNode, string":function(e,t,n){return m(e,t.content,n)},"Object, FunctionAssignmentNode, string":function(e,t,n){return-1===t.params.indexOf(n)?(e[t]=!0,!0):m(e,t.expr,n)},"Object, FunctionNode | OperatorNode, string":function(e,t,n){if(t.args.length>0){for(var r=m(e,t.args[0],n),a=1;a<t.args.length;++a)r=m(e,t.args[a],n)&&r;if(r)return e[t]=!0,!0}return!1}}),g=t("_derivative",{"ConstantNode, Object":function(e){return y(0)},"SymbolNode, Object":function(e,t){return void 0!==t[e]?y(0):y(1)},"ParenthesisNode, Object":function(e,t){return new p(g(e.content,t))},"FunctionAssignmentNode, Object":function(e,t){return void 0!==t[e]?y(0):g(e.expr,t)},"FunctionNode, Object":function(e,t){if(1!==e.args.length&&function(e){if("log"!==e.name&&"nthRoot"!==e.name&&"pow"!==e.name||2!==e.args.length){for(var t=0;t<e.args.length;++t)e.args[t]=y(0);throw e.compile().evaluate(),new Error("Expected TypeError, but none found")}}(e),void 0!==t[e])return y(0);var n,r,a,i,s=e.args[0],o=!1,u=!1;switch(e.name){case"cbrt":o=!0,r=new l("*","multiply",[y(3),new l("^","pow",[s,new l("/","divide",[y(2),y(3)])])]);break;case"sqrt":case"nthRoot":if(1===e.args.length)o=!0,r=new l("*","multiply",[y(2),new c("sqrt",[s])]);else if(2===e.args.length)return t[n=new l("/","divide",[y(1),e.args[1]])]=t[e.args[1]],g(new l("^","pow",[s,n]),t);break;case"log10":n=y(10);case"log":if(n||1!==e.args.length){if(1===e.args.length&&n||2===e.args.length&&void 0!==t[e.args[1]])r=new l("*","multiply",[s.clone(),new c("log",[n||e.args[1]])]),o=!0;else if(2===e.args.length)return g(new l("/","divide",[new c("log",[s]),new c("log",[e.args[1]])]),t)}else r=s.clone(),o=!0;break;case"pow":return t[n]=t[e.args[1]],g(new l("^","pow",[s,e.args[1]]),t);case"exp":r=new c("exp",[s.clone()]);break;case"sin":r=new c("cos",[s.clone()]);break;case"cos":r=new l("-","unaryMinus",[new c("sin",[s.clone()])]);break;case"tan":r=new l("^","pow",[new c("sec",[s.clone()]),y(2)]);break;case"sec":r=new l("*","multiply",[e,new c("tan",[s.clone()])]);break;case"csc":u=!0,r=new l("*","multiply",[e,new c("cot",[s.clone()])]);break;case"cot":u=!0,r=new l("^","pow",[new c("csc",[s.clone()]),y(2)]);break;case"asin":o=!0,r=new c("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[s.clone(),y(2)])])]);break;case"acos":o=!0,u=!0,r=new c("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[s.clone(),y(2)])])]);break;case"atan":o=!0,r=new l("+","add",[new l("^","pow",[s.clone(),y(2)]),y(1)]);break;case"asec":o=!0,r=new l("*","multiply",[new c("abs",[s.clone()]),new c("sqrt",[new l("-","subtract",[new l("^","pow",[s.clone(),y(2)]),y(1)])])]);break;case"acsc":o=!0,u=!0,r=new l("*","multiply",[new c("abs",[s.clone()]),new c("sqrt",[new l("-","subtract",[new l("^","pow",[s.clone(),y(2)]),y(1)])])]);break;case"acot":o=!0,u=!0,r=new l("+","add",[new l("^","pow",[s.clone(),y(2)]),y(1)]);break;case"sinh":r=new c("cosh",[s.clone()]);break;case"cosh":r=new c("sinh",[s.clone()]);break;case"tanh":r=new l("^","pow",[new c("sech",[s.clone()]),y(2)]);break;case"sech":u=!0,r=new l("*","multiply",[e,new c("tanh",[s.clone()])]);break;case"csch":u=!0,r=new l("*","multiply",[e,new c("coth",[s.clone()])]);break;case"coth":u=!0,r=new l("^","pow",[new c("csch",[s.clone()]),y(2)]);break;case"asinh":o=!0,r=new c("sqrt",[new l("+","add",[new l("^","pow",[s.clone(),y(2)]),y(1)])]);break;case"acosh":o=!0,r=new c("sqrt",[new l("-","subtract",[new l("^","pow",[s.clone(),y(2)]),y(1)])]);break;case"atanh":o=!0,r=new l("-","subtract",[y(1),new l("^","pow",[s.clone(),y(2)])]);break;case"asech":o=!0,u=!0,r=new l("*","multiply",[s.clone(),new c("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[s.clone(),y(2)])])])]);break;case"acsch":o=!0,u=!0,r=new l("*","multiply",[new c("abs",[s.clone()]),new c("sqrt",[new l("+","add",[new l("^","pow",[s.clone(),y(2)]),y(1)])])]);break;case"acoth":o=!0,u=!0,r=new l("-","subtract",[y(1),new l("^","pow",[s.clone(),y(2)])]);break;case"abs":r=new l("/","divide",[new c(new d("abs"),[s.clone()]),s.clone()]);break;default:throw new Error('Function "'+e.name+'" is not supported by derivative, or a wrong number of arguments is passed')}o?(a="/",i="divide"):(a="*",i="multiply");var p=g(s,t);return u&&(p=new l("-","unaryMinus",[p])),new l(a,i,[p,r])},"OperatorNode, Object":function(e,t){if(void 0!==t[e])return y(0);if("+"===e.op)return new l(e.op,e.fn,e.args.map((function(e){return g(e,t)})));if("-"===e.op){if(e.isUnary())return new l(e.op,e.fn,[g(e.args[0],t)]);if(e.isBinary())return new l(e.op,e.fn,[g(e.args[0],t),g(e.args[1],t)])}if("*"===e.op){var n=e.args.filter((function(e){return void 0!==t[e]}));if(n.length>0){var r=e.args.filter((function(e){return void 0===t[e]})),a=1===r.length?r[0]:new l("*","multiply",r),o=n.concat(g(a,t));return new l("*","multiply",o)}return new l("+","add",e.args.map((function(n){return new l("*","multiply",e.args.map((function(e){return e===n?g(e,t):e.clone()})))})))}if("/"===e.op&&e.isBinary()){var u=e.args[0],p=e.args[1];return void 0!==t[p]?new l("/","divide",[g(u,t),p]):void 0!==t[u]?new l("*","multiply",[new l("-","unaryMinus",[u]),new l("/","divide",[g(p,t),new l("^","pow",[p.clone(),y(2)])])]):new l("/","divide",[new l("-","subtract",[new l("*","multiply",[g(u,t),p.clone()]),new l("*","multiply",[u.clone(),g(p,t)])]),new l("^","pow",[p.clone(),y(2)])])}if("^"===e.op&&e.isBinary()){var d=e.args[0],h=e.args[1];if(void 0!==t[d])return MU(d)&&(s(d.value)||i(d.value,1))?y(0):new l("*","multiply",[e,new l("*","multiply",[new c("log",[d.clone()]),g(h.clone(),t)])]);if(void 0!==t[h]){if(MU(h)){if(s(h.value))return y(0);if(i(h.value,1))return g(d,t)}var f=new l("^","pow",[d.clone(),new l("-","subtract",[h,y(1)])]);return new l("*","multiply",[h.clone(),new l("*","multiply",[g(d,t),f])])}return new l("*","multiply",[new l("^","pow",[d.clone(),h.clone()]),new l("+","add",[new l("*","multiply",[g(d,t),new l("/","divide",[h.clone(),d.clone()])]),new l("*","multiply",[g(h,t),new c("log",[d.clone()])])])])}throw new Error('Operator "'+e.op+'" is not supported by derivative, or a wrong number of arguments is passed')}});function y(e,t){return new u(o(e,t||n.number))}return h})),W6={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]},V6={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]},j6={bignumber:{name:"bignumber",category:"Construction",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]},boolean:{name:"boolean",category:"Construction",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]},complex:{name:"complex",category:"Construction",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]},createUnit:{name:"createUnit",category:"Construction",syntax:["createUnit(definitions)","createUnit(name, definition)"],description:"Create a user-defined unit and register it with the Unit type.",examples:['createUnit("foo")','createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})','createUnit("mph", "1 mile/hour")'],seealso:["unit","splitUnit"]},fraction:{name:"fraction",category:"Construction",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]},index:{name:"index",category:"Construction",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]},matrix:{name:"matrix",category:"Construction",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]},number:{name:"number",category:"Construction",syntax:["x","number(x)","number(unit, valuelessUnit)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number(unit("52cm"), "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]},sparse:{name:"sparse",category:"Construction",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]},splitUnit:{name:"splitUnit",category:"Construction",syntax:["splitUnit(unit: Unit, parts: Unit[])"],description:"Split a unit in an array of units whose sum is equal to the original unit.",examples:['splitUnit(1 m, ["feet", "inch"])'],seealso:["unit","createUnit"]},string:{name:"string",category:"Construction",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]},unit:{name:"unit",category:"Construction",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]},e:V6,E:V6,false:{name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]},i:{name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]},Infinity:{name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]},LN2:{name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]},LN10:{name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]},LOG2E:{name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]},LOG10E:{name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]},NaN:{name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]},null:{name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]},pi:W6,PI:W6,phi:{name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["phi"],seealso:[]},SQRT1_2:{name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]},SQRT2:{name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]},tau:{name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]},true:{name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]},version:{name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]},speedOfLight:{description:"Speed of light in vacuum",examples:["speedOfLight"]},gravitationConstant:{description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},planckConstant:{description:"Planck constant",examples:["planckConstant"]},reducedPlanckConstant:{description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},magneticConstant:{description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},electricConstant:{description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},vacuumImpedance:{description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},coulomb:{description:"Coulomb's constant",examples:["coulomb"]},elementaryCharge:{description:"Elementary charge",examples:["elementaryCharge"]},bohrMagneton:{description:"Borh magneton",examples:["bohrMagneton"]},conductanceQuantum:{description:"Conductance quantum",examples:["conductanceQuantum"]},inverseConductanceQuantum:{description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},magneticFluxQuantum:{description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},nuclearMagneton:{description:"Nuclear magneton",examples:["nuclearMagneton"]},klitzing:{description:"Von Klitzing constant",examples:["klitzing"]},bohrRadius:{description:"Borh radius",examples:["bohrRadius"]},classicalElectronRadius:{description:"Classical electron radius",examples:["classicalElectronRadius"]},electronMass:{description:"Electron mass",examples:["electronMass"]},fermiCoupling:{description:"Fermi coupling constant",examples:["fermiCoupling"]},fineStructure:{description:"Fine-structure constant",examples:["fineStructure"]},hartreeEnergy:{description:"Hartree energy",examples:["hartreeEnergy"]},protonMass:{description:"Proton mass",examples:["protonMass"]},deuteronMass:{description:"Deuteron Mass",examples:["deuteronMass"]},neutronMass:{description:"Neutron mass",examples:["neutronMass"]},quantumOfCirculation:{description:"Quantum of circulation",examples:["quantumOfCirculation"]},rydberg:{description:"Rydberg constant",examples:["rydberg"]},thomsonCrossSection:{description:"Thomson cross section",examples:["thomsonCrossSection"]},weakMixingAngle:{description:"Weak mixing angle",examples:["weakMixingAngle"]},efimovFactor:{description:"Efimov factor",examples:["efimovFactor"]},atomicMass:{description:"Atomic mass constant",examples:["atomicMass"]},avogadro:{description:"Avogadro's number",examples:["avogadro"]},boltzmann:{description:"Boltzmann constant",examples:["boltzmann"]},faraday:{description:"Faraday constant",examples:["faraday"]},firstRadiation:{description:"First radiation constant",examples:["firstRadiation"]},loschmidt:{description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},gasConstant:{description:"Gas constant",examples:["gasConstant"]},molarPlanckConstant:{description:"Molar Planck constant",examples:["molarPlanckConstant"]},molarVolume:{description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},sackurTetrode:{description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},secondRadiation:{description:"Second radiation constant",examples:["secondRadiation"]},stefanBoltzmann:{description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},wienDisplacement:{description:"Wien displacement law constant",examples:["wienDisplacement"]},molarMass:{description:"Molar mass constant",examples:["molarMass"]},molarMassC12:{description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},gravity:{description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},planckLength:{description:"Planck length",examples:["planckLength"]},planckMass:{description:"Planck mass",examples:["planckMass"]},planckTime:{description:"Planck time",examples:["planckTime"]},planckCharge:{description:"Planck charge",examples:["planckCharge"]},planckTemperature:{description:"Planck temperature",examples:["planckTemperature"]},derivative:{name:"derivative",category:"Algebra",syntax:["derivative(expr, variable)","derivative(expr, variable, {simplify: boolean})"],description:"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",examples:['derivative("2x^3", "x")','derivative("2x^3", "x", {simplify: false})','derivative("2x^2 + 3x + 4", "x")','derivative("sin(2x)", "x")','f = parse("x^2 + x")','x = parse("x")',"df = derivative(f, x)","df.evaluate({x: 3})"],seealso:["simplify","parse","evaluate"]},lsolve:{name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolveAll","lup","lusolve","usolve","matrix","sparse"]},lsolveAll:{name:"lsolveAll",category:"Algebra",syntax:["x=lsolveAll(L, b)"],description:"Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolve","lup","lusolve","usolve","matrix","sparse"]},lup:{name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu","qr"]},lusolve:{name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]},simplify:{name:"simplify",category:"Algebra",syntax:["simplify(expr)","simplify(expr, rules)"],description:"Simplify an expression tree.",examples:['simplify("3 + 2 / 4")','simplify("2x + x")','f = parse("x * (x + 2 + x)")',"simplified = simplify(f)","simplified.evaluate({x: 2})"],seealso:["derivative","parse","evaluate"]},rationalize:{name:"rationalize",category:"Algebra",syntax:["rationalize(expr)","rationalize(expr, scope)","rationalize(expr, scope, detailed)"],description:"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",examples:['rationalize("2x/y - y/(x+1)")','rationalize("2x/y - y/(x+1)", true)'],seealso:["simplify"]},slu:{name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup","qr"]},usolve:{name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolveAll","lup","lusolve","lsolve","matrix","sparse"]},usolveAll:{name:"usolveAll",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolve","lup","lusolve","lsolve","matrix","sparse"]},qr:{name:"qr",category:"Algebra",syntax:["qr(A)"],description:"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",examples:["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],seealso:["lup","slu","matrix"]},abs:{name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]},add:{name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]},cbrt:{name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]},ceil:{name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]},cube:{name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]},divide:{name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]},dotDivide:{name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]},dotMultiply:{name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]},dotPow:{name:"dotPow",category:"Operators",syntax:["x .^ y","dotPow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]},exp:{name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["expm","expm1","pow","log"]},expm:{name:"expm",category:"Arithmetic",syntax:["exp(x)"],description:"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",examples:["expm([[0,2],[0,0]])"],seealso:["exp"]},expm1:{name:"expm1",category:"Arithmetic",syntax:["expm1(x)"],description:"Calculate the value of subtracting 1 from the exponential value.",examples:["expm1(2)","pow(e, 2) - 1","log(expm1(2) + 1)"],seealso:["exp","pow","log"]},fix:{name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]},floor:{name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]},gcd:{name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]},hypot:{name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]},lcm:{name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]},log:{name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log1p","log2","log10"]},log2:{name:"log2",category:"Arithmetic",syntax:["log2(x)"],description:"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",examples:["log2(0.03125)","log2(16)","log2(16) / log2(2)","pow(2, 4)"],seealso:["exp","log1p","log","log10"]},log1p:{name:"log1p",category:"Arithmetic",syntax:["log1p(x)","log1p(x, base)"],description:"Calculate the logarithm of a `value+1`",examples:["log1p(2.5)","exp(log1p(1.4))","pow(10, 4)","log1p(9999, 10)","log1p(9999) / log(10)"],seealso:["exp","log","log2","log10"]},log10:{name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]},mod:{name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]},multiply:{name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]},norm:{name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i)","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)",'norm([[1, 2], [3, 4]], "inf")','norm([[1, 2], [3, 4]], "fro")']},nthRoot:{name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["nthRoots","pow","sqrt"]},nthRoots:{name:"nthRoots",category:"Arithmetic",syntax:["nthRoots(A)","nthRoots(A, root)"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',examples:["nthRoots(1)","nthRoots(1, 3)"],seealso:["sqrt","pow","nthRoot"]},pow:{name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply","nthRoot","nthRoots","sqrt"]},round:{name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]},sign:{name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]},sqrt:{name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","sqrtm","multiply","nthRoot","nthRoots","pow"]},sqrtm:{name:"sqrtm",category:"Arithmetic",syntax:["sqrtm(x)"],description:"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",examples:["sqrtm([[1, 2], [3, 4]])"],seealso:["sqrt","abs","square","multiply"]},square:{name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]},subtract:{name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]},unaryMinus:{name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]},unaryPlus:{name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]},xgcd:{name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]},invmod:{name:"invmod",category:"Arithmetic",syntax:["invmod(a, b)"],description:"Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax ≣ 1 (mod b)",examples:["invmod(8, 12)=NaN","invmod(7, 13)=2","math.invmod(15151, 15122)=10429"],seealso:["gcd","xgcd"]},bitAnd:{name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitNot:{name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitOr:{name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]},bitXor:{name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]},leftShift:{name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]},rightArithShift:{name:"rightArithShift",category:"Bitwise",syntax:["x >> y","rightArithShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]},rightLogShift:{name:"rightLogShift",category:"Bitwise",syntax:["x >>> y","rightLogShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]},bellNumbers:{name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]},catalan:{name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]},composition:{name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]},stirlingS2:{name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]},config:{name:"config",category:"Core",syntax:["config()","config(options)"],description:"Get configuration or change configuration.",examples:["config()","1/3 + 1/4",'config({number: "Fraction"})',"1/3 + 1/4"],seealso:[]},import:{name:"import",category:"Core",syntax:["import(functions)","import(functions, options)"],description:"Import functions or constants from an object.",examples:["import({myFn: f(x)=x^2, myConstant: 32 })","myFn(2)","myConstant"],seealso:[]},typed:{name:"typed",category:"Core",syntax:["typed(signatures)","typed(name, signatures)"],description:"Create a typed function.",examples:['double = typed({ "number, number": f(x)=x+x })',"double(2)",'double("hello")'],seealso:[]},arg:{name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]},conj:{name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]},re:{name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]},im:{name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]},evaluate:{name:"evaluate",category:"Expression",syntax:["evaluate(expression)","evaluate([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['evaluate("2 + 3")','evaluate("sqrt(" + 4 + ")")'],seealso:[]},help:{name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]},distance:{name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2]])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]},intersect:{name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]},and:{name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]},not:{name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]},or:{name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]},xor:{name:"xor",category:"Logical",syntax:["x xor y","xor(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 xor 4"],seealso:["not","and","or"]},concat:{name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},count:{name:"count",category:"Matrix",syntax:["count(x)"],description:"Count the number of elements of a matrix, array or string.",examples:["a = [1, 2; 3, 4; 5, 6]","count(a)","size(a)",'count("hello world")'],seealso:["size"]},cross:{name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]},column:{name:"column",category:"Matrix",syntax:["column(x, index)"],description:"Return a column from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","column(A, 1)","column(A, 2)"],seealso:["row","matrixFromColumns"]},ctranspose:{name:"ctranspose",category:"Matrix",syntax:["x'","ctranspose(x)"],description:"Complex Conjugate and Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","ctranspose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},det:{name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diag:{name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diff:{name:"diff",category:"Matrix",syntax:["diff(arr)","diff(arr, dim)"],description:["Create a new matrix or array with the difference of the passed matrix or array.","Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference","If no dimension parameter is passed it is assumed as dimension 0","Dimension is zero-based in javascript and one-based in the parser","Arrays must be 'rectangular' meaning arrays like [1, 2]","If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],examples:["diff([1, 2, 4, 7, 0])","diff([1, 2, 4, 7, 0], 0)","diff(matrix([1, 2, 4, 7, 0]))","diff([[1, 2], [3, 4]])","diff([[1, 2], [3, 4]], 0)","diff([[1, 2], [3, 4]], 1)","diff([[1, 2], [3, 4]], bignumber(1))","diff(matrix([[1, 2], [3, 4]]), 1)","diff([[1, 2], matrix([3, 4])], 1)"],seealso:["subtract","partitionSelect"]},dot:{name:"dot",category:"Matrix",syntax:["dot(A, B)","A * B"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]},getMatrixDataType:{name:"getMatrixDataType",category:"Matrix",syntax:["getMatrixDataType(x)"],description:'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',examples:["getMatrixDataType([1, 2, 3])","getMatrixDataType([[5 cm], [2 inch]])",'getMatrixDataType([1, "text"])',"getMatrixDataType([1, bignumber(4)])"],seealso:["matrix","sparse","typeOf"]},identity:{name:"identity",category:"Matrix",syntax:["identity(n)","identity(m, n)","identity([m, n])"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["identity(3)","identity(3, 5)","a = [1, 2, 3; 4, 5, 6]","identity(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},filter:{name:"filter",category:"Matrix",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]},flatten:{name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]},forEach:{name:"forEach",category:"Matrix",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:[],seealso:["map","sort","filter"]},inv:{name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","identity","ones","range","size","squeeze","subset","trace","transpose","zeros"]},eigs:{name:"eigs",category:"Matrix",syntax:["eigs(x)"],description:"Calculate the eigenvalues and eigenvectors of a real symmetric matrix",examples:["eigs([[5, 2.3], [2.3, 1]])"],seealso:["inv"]},kron:{name:"kron",category:"Matrix",syntax:["kron(x, y)"],description:"Calculates the kronecker product of 2 matrices or vectors.",examples:["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])","kron([1,1], [2,3,4])"],seealso:["multiply","dot","cross"]},matrixFromFunction:{name:"matrixFromFunction",category:"Matrix",syntax:["math.matrixFromFunction(size, fn)","math.matrixFromFunction(size, fn, format)","math.matrixFromFunction(size, fn, format, datatype)","math.matrixFromFunction(size, format, fn)","math.matrixFromFunction(size, format, datatype, fn)"],description:"Create a matrix by evaluating a generating function at each index.",examples:["f(I) = I[1] - I[2]","matrixFromFunction([3,3], f)","g(I) = I[1] - I[2] == 1 ? 4 : 0",'matrixFromFunction([100, 100], "sparse", g)',"matrixFromFunction([5], random)"],seealso:["matrix","matrixFromRows","matrixFromColumns","zeros"]},matrixFromRows:{name:"matrixFromRows",category:"Matrix",syntax:["math.matrixFromRows(...arr)","math.matrixFromRows(row1, row2)","math.matrixFromRows(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual rows.",examples:["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromColumns","matrixFromFunction","zeros"]},matrixFromColumns:{name:"matrixFromColumns",category:"Matrix",syntax:["math.matrixFromColumns(...arr)","math.matrixFromColumns(row1, row2)","math.matrixFromColumns(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual columns.",examples:["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromRows","matrixFromFunction","zeros"]},map:{name:"map",category:"Matrix",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], square)"],seealso:["filter","forEach"]},ones:{name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","identity","inv","range","size","squeeze","subset","trace","transpose","zeros"]},partitionSelect:{name:"partitionSelect",category:"Matrix",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]},range:{name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","identity","inv","ones","size","squeeze","subset","trace","transpose","zeros"]},resize:{name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze","reshape"]},reshape:{name:"reshape",category:"Matrix",syntax:["reshape(x, sizes)"],description:"Reshape a multi dimensional array to fit the specified dimensions.",examples:["reshape([1, 2, 3, 4, 5, 6], [2, 3])","reshape([[1, 2], [3, 4]], [1, 4])","reshape([[1, 2], [3, 4]], [4])"],seealso:["size","squeeze","resize"]},rotate:{name:"rotate",category:"Matrix",syntax:["rotate(w, theta)","rotate(w, theta, v)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotate([1, 0], math.pi / 2)",'rotate(matrix([1, 0]), unit("35deg"))','rotate([1, 0, 0], unit("90deg"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],seealso:["matrix","rotationMatrix"]},rotationMatrix:{name:"rotationMatrix",category:"Matrix",syntax:["rotationMatrix(theta)","rotationMatrix(theta, v)","rotationMatrix(theta, v, format)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotationMatrix(pi / 2)",'rotationMatrix(unit("45deg"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],seealso:["cos","sin"]},row:{name:"row",category:"Matrix",syntax:["row(x, index)"],description:"Return a row from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","row(A, 1)","row(A, 2)"],seealso:["column","matrixFromRows"]},size:{name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","count","det","diag","identity","inv","ones","range","squeeze","subset","trace","transpose","zeros"]},sort:{name:"sort",category:"Matrix",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)','sort(["10", "1", "2"], "natural")'],seealso:["map","filter","forEach"]},squeeze:{name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","identity","inv","ones","range","size","subset","trace","transpose","zeros"]},subset:{name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","trace","transpose","zeros"]},trace:{name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","transpose","zeros"]},transpose:{name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},zeros:{name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose"]},combinations:{name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["combinationsWithRep","permutations","factorial"]},combinationsWithRep:{name:"combinationsWithRep",category:"Probability",syntax:["combinationsWithRep(n, k)"],description:"Compute the number of combinations of n items taken k at a time with replacements.",examples:["combinationsWithRep(7, 5)"],seealso:["combinations","permutations","factorial"]},factorial:{name:"factorial",category:"Probability",syntax:["n!","factorial(n)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","combinationsWithRep","permutations","gamma"]},gamma:{name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]},kldivergence:{name:"kldivergence",category:"Probability",syntax:["kldivergence(x, y)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]},multinomial:{name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]},permutations:{name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","combinationsWithRep","factorial"]},pickRandom:{name:"pickRandom",category:"Probability",syntax:["pickRandom(array)","pickRandom(array, number)","pickRandom(array, weights)","pickRandom(array, number, weights)","pickRandom(array, weights, number)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])","pickRandom([1, 3, 1, 6], 2)","pickRandom([1, 3, 1, 6], [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],seealso:["random","randomInt"]},random:{name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]},randomInt:{name:"randomInt",category:"Probability",syntax:["randomInt(max)","randomInt(min, max)","randomInt(size)","randomInt(size, max)","randomInt(size, min, max)"],description:"Return a random integer number",examples:["randomInt(10, 20)","randomInt([2, 3], 10)"],seealso:["pickRandom","random"]},compare:{name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compareNatural","compareText"]},compareNatural:{name:"compareNatural",category:"Relational",syntax:["compareNatural(x, y)"],description:"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compareNatural(2, 3)","compareNatural(3, 2)","compareNatural(2, 2)","compareNatural(5cm, 40mm)",'compareNatural("2", "10")',"compareNatural(2 + 3i, 2 + 4i)","compareNatural([1, 2, 4], [1, 2, 3])","compareNatural([1, 5], [1, 2, 3])","compareNatural([1, 2], [1, 2])","compareNatural({a: 2}, {a: 4})"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare","compareText"]},compareText:{name:"compareText",category:"Relational",syntax:["compareText(x, y)"],description:"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:['compareText("B", "A")','compareText("A", "B")','compareText("A", "A")','compareText("2", "10")','compare("2", "10")',"compare(2, 10)",'compareNatural("2", "10")','compareText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural"]},deepEqual:{name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["deepEqual([1,3,4], [1,3,4])","deepEqual([1,3,4], [1,3])"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]},equal:{name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual","equalText"]},equalText:{name:"equalText",category:"Relational",syntax:["equalText(x, y)"],description:"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",examples:['equalText("Hello", "Hello")','equalText("a", "A")','equal("2e3", "2000")','equalText("2e3", "2000")','equalText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural","compareText","equal"]},larger:{name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]},largerEq:{name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 >= 1+1","2 > 1+1","a = 3.2","b = 6-2.8","(a >= b)"],seealso:["equal","unequal","smallerEq","smaller","compare"]},smaller:{name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]},smallerEq:{name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 <= 1+1","2 < 1+1","a = 3.2","b = 6-2.8","(a <= b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]},unequal:{name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]},setCartesian:{name:"setCartesian",category:"Set",syntax:["setCartesian(set1, set2)"],description:"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",examples:["setCartesian([1, 2], [3, 4])"],seealso:["setUnion","setIntersect","setDifference","setPowerset"]},setDifference:{name:"setDifference",category:"Set",syntax:["setDifference(set1, set2)"],description:"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setDifference([1, 2, 3, 4], [3, 4, 5, 6])","setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setSymDifference"]},setDistinct:{name:"setDistinct",category:"Set",syntax:["setDistinct(set)"],description:"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setDistinct([1, 1, 1, 2, 2, 3])"],seealso:["setMultiplicity"]},setIntersect:{name:"setIntersect",category:"Set",syntax:["setIntersect(set1, set2)"],description:"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])","setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setDifference"]},setIsSubset:{name:"setIsSubset",category:"Set",syntax:["setIsSubset(set1, set2)"],description:"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIsSubset([1, 2], [3, 4, 5, 6])","setIsSubset([3, 4], [3, 4, 5, 6])"],seealso:["setUnion","setIntersect","setDifference"]},setMultiplicity:{name:"setMultiplicity",category:"Set",syntax:["setMultiplicity(element, set)"],description:"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setMultiplicity(1, [1, 2, 2, 4])","setMultiplicity(2, [1, 2, 2, 4])"],seealso:["setDistinct","setSize"]},setPowerset:{name:"setPowerset",category:"Set",syntax:["setPowerset(set)"],description:"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setPowerset([1, 2, 3])"],seealso:["setCartesian"]},setSize:{name:"setSize",category:"Set",syntax:["setSize(set)","setSize(set, unique)"],description:'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:["setSize([1, 2, 2, 4])","setSize([1, 2, 2, 4], true)"],seealso:["setUnion","setIntersect","setDifference"]},setSymDifference:{name:"setSymDifference",category:"Set",syntax:["setSymDifference(set1, set2)"],description:"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])","setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setDifference"]},setUnion:{name:"setUnion",category:"Set",syntax:["setUnion(set1, set2)"],description:"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setUnion([1, 2, 3, 4], [3, 4, 5, 6])","setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setIntersect","setDifference"]},erf:{name:"erf",category:"Special",syntax:["erf(x)"],description:"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",examples:["erf(0.2)","erf(-0.5)","erf(4)"],seealso:[]},mad:{name:"mad",category:"Statistics",syntax:["mad(a, b, c, ...)","mad(A)"],description:"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",examples:["mad(10, 20, 30)","mad([1, 2, 3])"],seealso:["mean","median","std","abs"]},max:{name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","variance"]},mean:{name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","variance"]},median:{name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","variance","quantileSeq"]},min:{name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","variance"]},mode:{name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(2, 1, 4, 3, 1)","mode([1, 2.7, 3.2, 4, 2.7])","mode(1, 4, 6, 1, 6)"],seealso:["max","mean","min","median","prod","std","sum","variance"]},prod:{name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","variance"]},quantileSeq:{name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","variance"]},std:{name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","prod","sum","variance"]},sum:{name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","variance"]},variance:{name:"variance",category:"Statistics",syntax:["variance(a, b, c, ...)","variance(A)","variance(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["variance(2, 4, 6)","variance([2, 4, 6, 8])",'variance([2, 4, 6, 8], "uncorrected")','variance([2, 4, 6, 8], "biased")',"variance([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]},acos:{name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]},acosh:{name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]},acot:{name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]},acoth:{name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(2)","acoth(0.5)"],seealso:["acsch","asech"]},acsc:{name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(2)","acsc(csc(0.5))","acsc(0.5)"],seealso:["csc","asin","asec"]},acsch:{name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]},asec:{name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]},asech:{name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]},asin:{name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(0.5))"],seealso:["sin","acos","atan"]},asinh:{name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]},atan:{name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(0.5))"],seealso:["tan","acos","asin"]},atanh:{name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]},atan2:{name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]},cos:{name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]},cosh:{name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]},cot:{name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]},coth:{name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]},csc:{name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]},csch:{name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]},sec:{name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]},sech:{name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]},sin:{name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]},sinh:{name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]},tan:{name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]},tanh:{name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]},to:{name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]},clone:{name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]},format:{name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]},bin:{name:"bin",category:"Utils",syntax:["bin(value)"],description:"Format a number as binary",examples:["bin(2)"],seealso:["oct","hex"]},oct:{name:"oct",category:"Utils",syntax:["oct(value)"],description:"Format a number as octal",examples:["oct(56)"],seealso:["bin","hex"]},hex:{name:"hex",category:"Utils",syntax:["hex(value)"],description:"Format a number as hexadecimal",examples:["hex(240)"],seealso:["bin","oct"]},isNaN:{name:"isNaN",category:"Utils",syntax:["isNaN(x)"],description:"Test whether a value is NaN (not a number)",examples:["isNaN(2)","isNaN(0 / 0)","isNaN(NaN)","isNaN(Infinity)"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isInteger:{name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isNegative:{name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]},isNumeric:{name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)",'isNumeric("2")','hasNumericValue("2")',"isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))","isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","hasNumericValue"]},hasNumericValue:{name:"hasNumericValue",category:"Utils",syntax:["hasNumericValue(x)"],description:"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",examples:["hasNumericValue(2)",'hasNumericValue("2")','isNumeric("2")',"hasNumericValue(0)","hasNumericValue(bignumber(500))","hasNumericValue(fraction(0.125))","hasNumericValue(2 + 3i)",'hasNumericValue([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","isNumeric"]},isPositive:{name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isPrime:{name:"isPrime",category:"Utils",syntax:["isPrime(x)"],description:"Test whether a value is prime: has no divisors other than itself and one.",examples:["isPrime(3)","isPrime(-2)","isPrime([2, 17, 100])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isZero:{name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]},print:{name:"print",category:"Utils",syntax:["print(template, values)","print(template, values, precision)"],description:"Interpolate values into a string template.",examples:['print("Lucy is $age years old", {age: 5})','print("The value of pi is $pi", {pi: pi}, 3)','print("Hello, $user.name!", {user: {name: "John"}})','print("Values: $0, $1, $2", [6, 9, 4])'],seealso:["format"]},typeOf:{name:"typeOf",category:"Utils",syntax:["typeOf(x)"],description:"Get the type of a variable.",examples:["typeOf(3.5)","typeOf(2 - 4i)","typeOf(45 deg)",'typeOf("hello world")'],seealso:["getMatrixDataType"]},numeric:{name:"numeric",category:"Utils",syntax:["numeric(x)"],description:"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",examples:['numeric("4")','numeric("4", "number")','numeric("4", "BigNumber")','numeric("4", "Fraction)','numeric(4, "Fraction")','numeric(fraction(2, 5), "number)'],seealso:["number","fraction","bignumber","string","format"]}},G6="help",H6=iq(G6,["typed","mathWithTransform","Help"],(e=>{var{typed:t,mathWithTransform:n,Help:r}=e;return t(G6,{any:function(e){var t,a=e;if("string"!=typeof e)for(t in n)if(YU(n,t)&&e===n[t]){a=t;break}var i=XV(j6,a);if(!i){var s="function"==typeof a?a.name:a;throw new Error('No documentation found on "'+s+'"')}return new r(i)}})})),K6="rationalize",X6=iq(K6,["config","typed","equal","isZero","add","subtract","multiply","divide","pow","parse","simplify","?bignumber","?fraction","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode","ParenthesisNode"],(e=>{var{config:t,typed:n,equal:r,isZero:a,add:i,subtract:s,multiply:o,divide:u,pow:c,parse:l,simplify:p,fraction:d,bignumber:h,mathWithTransform:f,matrix:m,AccessorNode:g,ArrayNode:y,ConstantNode:x,FunctionNode:b,IndexNode:v,ObjectNode:w,OperatorNode:N,SymbolNode:S,ParenthesisNode:k}=e,I=L6({typed:n,config:t,mathWithTransform:f,matrix:m,fraction:d,bignumber:h,AccessorNode:g,ArrayNode:y,ConstantNode:x,FunctionNode:b,IndexNode:v,ObjectNode:w,OperatorNode:N,SymbolNode:S}),E=B6({equal:r,isZero:a,add:i,subtract:s,multiply:o,divide:u,pow:c,AccessorNode:g,ArrayNode:y,ConstantNode:x,FunctionNode:b,IndexNode:v,ObjectNode:w,OperatorNode:N,ParenthesisNode:k});return n(K6,{string:function(e){return this(l(e),{},!1)},"string, boolean":function(e,t){return this(l(e),{},t)},"string, Object":function(e,t){return this(l(e),t,!1)},"string, Object, boolean":function(e,t,n){return this(l(e),t,n)},Node:function(e){return this(e,{},!1)},"Node, boolean":function(e,t){return this(e,{},t)},"Node, Object":function(e,t){return this(e,t,!1)},"Node, Object, boolean":function(e,t,n){var r=function(){var e=[E,{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},I,{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"1*n",r:"n"}],t=[{l:"(-n1)/(-n2)",r:"n1/n2"},{l:"(-n1)*(-n2)",r:"n1*n2"},{l:"n1--n2",r:"n1+n2"},{l:"n1-n2",r:"n1+(-n2)"},{l:"(n1+n2)*n3",r:"(n1*n3 + n2*n3)"},{l:"n1*(n2+n3)",r:"(n1*n2+n1*n3)"},{l:"c1*n + c2*n",r:"(c1+c2)*n"},{l:"c1*n + n",r:"(c1+1)*n"},{l:"c1*n - c2*n",r:"(c1-c2)*n"},{l:"c1*n - n",r:"(c1-1)*n"},{l:"v/c",r:"(1/c)*v"},{l:"v/-c",r:"-(1/c)*v"},{l:"-v*-c",r:"c*v"},{l:"-v*c",r:"-c*v"},{l:"v*-c",r:"-c*v"},{l:"v*c",r:"c*v"},{l:"-(-n1*n2)",r:"(n1*n2)"},{l:"-(n1*n2)",r:"(-n1*n2)"},{l:"-(-n1+n2)",r:"(n1-n2)"},{l:"-(n1+n2)",r:"(-n1-n2)"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"},{l:"-(-n1/n2)",r:"(n1/n2)"},{l:"-(n1/n2)",r:"(-n1/n2)"}],n=[{l:"(n1/(n2/n3))",r:"((n1*n3)/n2)"},{l:"(n1/n2/n3)",r:"(n1/(n2*n3))"}],r={};return r.firstRules=e.concat(t,n),r.distrDivRules=[{l:"(n1/n2 + n3/n4)",r:"((n1*n4 + n3*n2)/(n2*n4))"},{l:"(n1/n2 + n3)",r:"((n1 + n3*n2)/n2)"},{l:"(n1 + n2/n3)",r:"((n1*n3 + n2)/n3)"}],r.sucDivRules=n,r.firstRulesAgain=e.concat(t),r.finalRules=[E,{l:"n*-n",r:"-n^2"},{l:"n*n",r:"n^2"},I,{l:"n*-n^n1",r:"-n^(n1+1)"},{l:"n*n^n1",r:"n^(n1+1)"},{l:"n^n1*-n^n2",r:"-n^(n1+n2)"},{l:"n^n1*n^n2",r:"n^(n1+n2)"},{l:"n^n1*-n",r:"-n^(n1+1)"},{l:"n^n1*n",r:"n^(n1+1)"},{l:"n^n1/-n",r:"-n^(n1-1)"},{l:"n^n1/n",r:"n^(n1-1)"},{l:"n/-n^n1",r:"-n^(1-n1)"},{l:"n/n^n1",r:"n^(1-n1)"},{l:"n^n1/-n^n2",r:"n^(n1-n2)"},{l:"n^n1/n^n2",r:"n^(n1-n2)"},{l:"n1+(-n2*n3)",r:"n1-n2*n3"},{l:"v*(-c)",r:"-c*v"},{l:"n1+-n2",r:"n1-n2"},{l:"v*c",r:"c*v"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"}],r}(),a=function(e,t,n,r){var a=[],i=p(e,r,t,{exactFractions:!1}),s="+-*"+((n=!!n)?"/":"");!function e(t){var n=t.type;if("FunctionNode"===n)throw new Error("There is an unsolved function call");if("OperatorNode"===n)if("^"===t.op){if("ConstantNode"!==t.args[1].type||!lq(parseFloat(t.args[1].value)))throw new Error("There is a non-integer exponent");e(t.args[0])}else{if(-1===s.indexOf(t.op))throw new Error("Operator "+t.op+" invalid in polynomial expression");for(var r=0;r<t.args.length;r++)e(t.args[r])}else if("SymbolNode"===n){var i=t.name;-1===a.indexOf(i)&&a.push(i)}else if("ParenthesisNode"===n)e(t.content);else if("ConstantNode"!==n)throw new Error("type "+n+" is not allowed in polynomial expression")}(i);var o={};return o.expression=i,o.variables=a,o}(e,t,!0,r.firstRules),i=a.variables.length;if(e=a.expression,i>=1){var s,o;e=C(e);var u,c=!0,l=!1;for(e=p(e,r.firstRules,{},{exactFractions:!1});o=c?r.distrDivRules:r.sucDivRules,c=!c,(u=(e=p(e,o)).toString())!==s;)l=!0,s=u;l&&(e=p(e,r.firstRulesAgain,{},{exactFractions:!1})),e=p(e,r.finalRules,{},{exactFractions:!1})}var d=[],h={};return"OperatorNode"===e.type&&e.isBinary()&&"/"===e.op?(1===i&&(e.args[0]=T(e.args[0],d),e.args[1]=T(e.args[1])),n&&(h.numerator=e.args[0],h.denominator=e.args[1])):(1===i&&(e=T(e,d)),n&&(h.numerator=e,h.denominator=null)),n?(h.coefficients=d,h.variables=a.variables,h.expression=e,h):e}});function C(e,t,n){var r=e.type,a=arguments.length>1;if("OperatorNode"===r&&e.isBinary()){var i,s=!1;if("^"===e.op&&("ParenthesisNode"!==e.args[0].type&&"OperatorNode"!==e.args[0].type||"ConstantNode"!==e.args[1].type||(s=(i=parseFloat(e.args[1].value))>=2&&lq(i))),s){if(i>2){var o=e.args[0],u=new N("^","pow",[e.args[0].cloneDeep(),new x(i-1)]);e=new N("*","multiply",[o,u])}else e=new N("*","multiply",[e.args[0],e.args[0].cloneDeep()]);a&&("content"===n?t.content=e:t.args[n]=e)}}if("ParenthesisNode"===r)C(e.content,e,"content");else if("ConstantNode"!==r&&"SymbolNode"!==r)for(var c=0;c<e.args.length;c++)C(e.args[c],e,c);if(!a)return e}function T(e,t){void 0===t&&(t=[]),t[0]=0;var n=0,r="";!function e(a,i,s){var o=a.type;if("FunctionNode"===o)throw new Error("There is an unsolved function call");if("OperatorNode"===o){if(-1==="+-*^".indexOf(a.op))throw new Error("Operator "+a.op+" invalid");if(null!==i){if(("unaryMinus"===a.fn||"pow"===a.fn)&&"add"!==i.fn&&"subtract"!==i.fn&&"multiply"!==i.fn)throw new Error("Invalid "+a.op+" placing");if(("subtract"===a.fn||"add"===a.fn||"multiply"===a.fn)&&"add"!==i.fn&&"subtract"!==i.fn)throw new Error("Invalid "+a.op+" placing");if(("subtract"===a.fn||"add"===a.fn||"unaryMinus"===a.fn)&&0!==s.noFil)throw new Error("Invalid "+a.op+" placing")}"^"!==a.op&&"*"!==a.op||(s.fire=a.op);for(var u=0;u<a.args.length;u++)"unaryMinus"===a.fn&&(s.oper="-"),"+"!==a.op&&"subtract"!==a.fn||(s.fire="",s.cte=1,s.oper=0===u?"+":a.op),s.noFil=u,e(a.args[u],a,s)}else if("SymbolNode"===o){if(a.name!==r&&""!==r)throw new Error("There is more than one variable");if(r=a.name,null===i)return void(t[1]=1);if("^"===i.op&&0!==s.noFil)throw new Error("In power the variable should be the first parameter");if("*"===i.op&&1!==s.noFil)throw new Error("In multiply the variable should be the second parameter");""!==s.fire&&"*"!==s.fire||(n<1&&(t[1]=0),t[1]+=s.cte*("+"===s.oper?1:-1),n=Math.max(1,n))}else{if("ConstantNode"!==o)throw new Error("Type "+o+" is not allowed");var c=parseFloat(a.value);if(null===i)return void(t[0]=c);if("^"===i.op){if(1!==s.noFil)throw new Error("Constant cannot be powered");if(!lq(c)||c<=0)throw new Error("Non-integer exponent is not allowed");for(var l=n+1;l<c;l++)t[l]=0;return c>n&&(t[c]=0),t[c]+=s.cte*("+"===s.oper?1:-1),void(n=Math.max(c,n))}s.cte=c,""===s.fire&&(t[0]+=s.cte*("+"===s.oper?1:-1))}}(e,null,{cte:1,oper:"+",fire:""});for(var a,i=!0,s=n=t.length-1;s>=0;s--)if(0!==t[s]){var o=new x(i?t[s]:Math.abs(t[s])),u=t[s]<0?"-":"+";if(s>0){var c=new S(r);if(s>1){var l=new x(s);c=new N("^","pow",[c,l])}o=-1===t[s]&&i?new N("-","unaryMinus",[c]):1===Math.abs(t[s])?c:new N("*","multiply",[o,c])}a=i?o:"+"===u?new N("+","add",[a,o]):new N("-","subtract",[a,o]),i=!1}return i?new x(0):a}}));function Z6(e,t,n){var r=e.filter((function(e){return PU(e)&&!(e.name in t)&&!n.has(e.name)}))[0];if(!r)throw new Error('No undefined variable found in inline expression "'+e+'"');var a=r.name,i=I6(n),s=e.compile();return function(e){return i.set(a,e),s.evaluate(i)}}var Y6=iq("filter",["typed"],(e=>{var{typed:t}=e;function n(e,t,n){var a,i;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(i=PU(e[1])||$U(e[1])?e[1].compile().evaluate(n):Z6(e[1],t,n)),r(a,i)}n.rawArgs=!0;var r=t("filter",{"Array, function":J6,"Matrix, function":function(e,t){return e.create(J6(e.toArray(),t))},"Array, RegExp":PV,"Matrix, RegExp":function(e,t){return e.create(PV(e.toArray(),t))}});return n}),{isTransformFunction:!0});function J6(e,t){var n=_q(t);return LV(e,(function(e,r,a){return 1===n?t(e):2===n?t(e,[r+1]):t(e,[r+1],a)}))}var Q6=iq("forEach",["typed"],(e=>{var{typed:t}=e;function n(e,t,n){var a,i;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(i=PU(e[1])||$U(e[1])?e[1].compile().evaluate(n):Z6(e[1],t,n)),r(a,i)}n.rawArgs=!0;var r=t("forEach",{"Array | Matrix, function":function(e,t){var n=_q(t);!function r(a,i){Array.isArray(a)?BV(a,(function(e,t){r(e,i.concat(t+1))})):1===n?t(a):2===n?t(a,i):t(a,i,e)}(e.valueOf(),[])}});return n}),{isTransformFunction:!0}),e7=iq("map",["typed"],(e=>{var{typed:t}=e;function n(e,t,n){var a,i;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(i=PU(e[1])||$U(e[1])?e[1].compile().evaluate(n):Z6(e[1],t,n)),r(a,i)}n.rawArgs=!0;var r=t("map",{"Array, function":function(e,t){return t7(e,t,e)},"Matrix, function":function(e,t){return e.create(t7(e.valueOf(),t,e))}});return n}),{isTransformFunction:!0});function t7(e,t,n){var r=_q(t);return function e(a,i){return Array.isArray(a)?zV(a,(function(t,n){return e(t,i.concat(n+1))})):1===r?t(a):2===r?t(a,i):t(a,i,n)}(e,[])}var n7=iq("apply",["typed","isInteger"],(e=>{var{typed:t,isInteger:n}=e,r=_K({typed:t,isInteger:n});return t("apply",{"...any":function(e){var t=e[1];aU(t)?e[1]=t-1:iU(t)&&(e[1]=t.minus(1));try{return r.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0});function r7(e){if(2===e.length&&dU(e[0])){var t=(e=e.slice())[1];aU(t)?e[1]=t-1:iU(t)&&(e[1]=t.minus(1))}return e}var a7="diff",i7=iq(a7,["typed","matrix","subtract","number","bignumber"],(e=>{var{typed:t,matrix:n,subtract:r,number:a,bignumber:i}=e,s=WY({typed:t,matrix:n,subtract:r,number:a,bignumber:i});return t(a7,{"...any":function(e){e=r7(e);try{return s.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),s7=iq("index",["Index"],(e=>{var{Index:t}=e;return function(){for(var e=[],n=0,r=arguments.length;n<r;n++){var a=arguments[n];if(mU(a))a.start--,a.end-=a.step>0?0:2;else if(a&&!0===a.isSet)a=a.map((function(e){return e-1}));else if(lU(a)||pU(a))a=a.map((function(e){return e-1}));else if(aU(a))a--;else if(iU(a))a=a.toNumber()-1;else if("string"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");e[n]=a}var i=new t;return t.apply(i,e),i}}),{isTransformFunction:!0}),o7=iq("subset",["typed","matrix"],(e=>{var{typed:t,matrix:n}=e,r=KX({typed:t,matrix:n});return t("subset",{"...any":function(e){try{return r.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),u7=iq("concat",["typed","matrix","isInteger"],(e=>{var{typed:t,matrix:n,isInteger:r}=e,a=wZ({typed:t,matrix:n,isInteger:r});return t("concat",{"...any":function(e){var t=e.length-1,n=e[t];aU(n)?e[t]=n-1:iU(n)&&(e[t]=n.minus(1));try{return a.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),c7=iq("max",["typed","config","numeric","larger"],(e=>{var{typed:t,config:n,numeric:r,larger:a}=e,i=uQ({typed:t,config:n,numeric:r,larger:a});return t("max",{"...any":function(e){e=r7(e);try{return i.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),l7=iq("min",["typed","config","numeric","smaller"],(e=>{var{typed:t,config:n,numeric:r,smaller:a}=e,i=rY({typed:t,config:n,numeric:r,smaller:a});return t("min",{"...any":function(e){e=r7(e);try{return i.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),p7=iq("range",["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],(e=>{var{typed:t,config:n,matrix:r,bignumber:a,smaller:i,smallerEq:s,larger:o,largerEq:u}=e,c=lJ({typed:t,config:n,matrix:r,bignumber:a,smaller:i,smallerEq:s,larger:o,largerEq:u});return t("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),c.apply(null,e)}})}),{isTransformFunction:!0}),d7=iq("row",["typed","Index","matrix","range"],(e=>{var{typed:t,Index:n,matrix:r,range:a}=e,i=hJ({typed:t,Index:n,matrix:r,range:a});return t("row",{"...any":function(e){var t=e.length-1,n=e[t];aU(n)&&(e[t]=n-1);try{return i.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),h7=iq("sum",["typed","config","add","numeric"],(e=>{var{typed:t,config:n,add:r,numeric:a}=e,i=_J({typed:t,config:n,add:r,numeric:a});return t("sum",{"...any":function(e){e=r7(e);try{return i.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),f7=iq("column",["typed","Index","matrix","range"],(e=>{var{typed:t,Index:n,matrix:r,range:a}=e,i=WJ({typed:t,Index:n,matrix:r,range:a});return t("column",{"...any":function(e){var t=e.length-1,n=e[t];aU(n)&&(e[t]=n-1);try{return i.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),m7=iq("mean",["typed","add","divide"],(e=>{var{typed:t,add:n,divide:r}=e,a=s0({typed:t,add:n,divide:r});return t("mean",{"...any":function(e){e=r7(e);try{return a.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),g7="variance",y7=iq(g7,["typed","add","subtract","multiply","divide","apply","isNaN"],(e=>{var{typed:t,add:n,subtract:r,multiply:a,divide:i,apply:s,isNaN:o}=e,u=p0({typed:t,add:n,subtract:r,multiply:a,divide:i,apply:s,isNaN:o});return t(g7,{"...any":function(e){e=r7(e);try{return u.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),x7=iq("std",["typed","sqrt","variance"],(e=>{var{typed:t,sqrt:n,variance:r}=e,a=d0({typed:t,sqrt:n,variance:r});return t("std",{"...any":function(e){e=r7(e);try{return a.apply(null,e)}catch(e){throw b6(e)}}})}),{isTransformFunction:!0}),b7={},v7={},w7={},N7=G5({math:b7}),S7=K5({mathWithTransform:v7}),k7=X5({Node:S7}),I7=o6({Node:S7}),E7=u6({Node:S7}),C7=c6({Node:S7}),T7=l6({Node:S7}),D7=p6({Node:S7,ResultSet:V0}),A7=d6({Node:S7}),M7=h6({Node:S7}),$7=f6({Node:S7}),O7=m6({classes:w7}),R7=y6({Chain:N7,typed:n1}),_7=x6({Node:S7,typed:n1}),F7=w6({Node:S7,subset:L2}),z7=N6({matrix:T2,Node:S7,subset:L2}),B7=S6({Node:S7,Range:W0,size:F2}),L7=k6({Unit:w4,Node:S7,math:b7}),P7=E6({Node:S7,SymbolNode:L7,math:b7}),U7=T6({AccessorNode:F7,ArrayNode:T7,AssignmentNode:z7,BlockNode:D7,ConditionalNode:A7,ConstantNode:M7,FunctionAssignmentNode:_7,FunctionNode:P7,IndexNode:B7,ObjectNode:k7,OperatorNode:I7,ParenthesisNode:E7,RangeNode:$7,RelationalNode:C7,SymbolNode:L7,config:rq,numeric:$2,typed:n1}),q7=A6({parse:U7,typed:n1}),W7=$6({parse:U7,typed:n1}),V7=O6({parse:U7}),j7=R6({evaluate:W7}),G7=F6({Parser:j7,typed:n1}),H7=U6({bignumber:m1,fraction:E2,AccessorNode:F7,ArrayNode:T7,ConstantNode:M7,FunctionNode:P7,IndexNode:B7,ObjectNode:k7,OperatorNode:I7,ParenthesisNode:E7,SymbolNode:L7,add:C3,config:rq,divide:$5,equal:r3,isZero:L1,mathWithTransform:v7,matrix:T2,multiply:W3,parse:U7,pow:V3,subtract:P2,typed:n1}),K7=q6({ConstantNode:M7,FunctionNode:P7,OperatorNode:I7,ParenthesisNode:E7,SymbolNode:L7,config:rq,equal:r3,isZero:L1,numeric:$2,parse:U7,simplify:H7,typed:n1}),X7=H6({Help:V7,mathWithTransform:v7,typed:n1}),Z7=X6({bignumber:m1,fraction:E2,AccessorNode:F7,ArrayNode:T7,ConstantNode:M7,FunctionNode:P7,IndexNode:B7,ObjectNode:k7,OperatorNode:I7,ParenthesisNode:E7,SymbolNode:L7,add:C3,config:rq,divide:$5,equal:r3,isZero:L1,mathWithTransform:v7,matrix:T2,multiply:W3,parse:U7,pow:V3,simplify:H7,subtract:P2,typed:n1});nU(b7,{e:M0,false:$0,fineStructure:O0,i:_0,Infinity:F0,LN10:z0,LOG10E:B0,NaN:P0,null:U0,phi:q0,SQRT1_2:j0,sackurTetrode:G0,tau:H0,true:K0,E:M0,version:X0,efimovFactor:Y0,LN2:J0,pi:Q0,replacer:e1,reviver:O7,SQRT2:t1,typed:n1,unaryPlus:r1,PI:Q0,weakMixingAngle:a1,abs:i1,acos:s1,acot:o1,acsc:u1,addScalar:c1,arg:l1,asech:p1,asinh:d1,atan:h1,atanh:f1,bignumber:m1,bitNot:g1,boolean:y1,chain:R7,clone:x1,combinations:b1,complex:v1,conj:w1,cosh:N1,coth:S1,csc:k1,cube:I1,equalScalar:E1,erf:C1,exp:T1,expm1:D1,filter:A1,forEach:M1,format:$1,getMatrixDataType:O1,hex:R1,im:_1,isInteger:F1,isNegative:z1,isPositive:B1,isZero:L1,LOG2E:P1,log10:U1,log2:q1,map:W1,multiplyScalar:V1,not:j1,number:G1,oct:H1,pickRandom:K1,print:X1,random:Z1,re:Y1,sec:J1,sign:Q1,sin:e2,splitUnit:n2,square:r2,string:a2,tan:i2,typeOf:s2,acosh:o2,acsch:u2,apply:c2,asec:l2,bin:p2,combinationsWithRep:d2,cos:h2,csch:f2,isNaN:m2,isPrime:g2,randomInt:y2,sech:x2,sinh:b2,sparse:v2,sqrt:w2,tanh:N2,unaryMinus:S2,acoth:k2,cot:I2,fraction:E2,isNumeric:C2,matrix:T2,matrixFromFunction:D2,mod:A2,nthRoot:M2,numeric:$2,or:O2,prod:R2,reshape:_2,size:F2,smaller:z2,squeeze:B2,subset:L2,subtract:P2,to:U2,transpose:q2,xgcd:W2,zeros:V2,and:j2,bitAnd:G2,bitXor:H2,cbrt:K2,compare:X2,compareText:Z2,concat:Y2,count:J2,ctranspose:Q2,diag:e3,divideScalar:t3,dotDivide:n3,equal:r3,flatten:a3,gcd:i3,hasNumericValue:s3,hypot:o3,kron:l3,largerEq:p3,leftShift:d3,lsolve:h3,matrixFromColumns:f3,min:m3,mode:g3,nthRoots:y3,ones:x3,partitionSelect:b3,resize:v3,rightLogShift:w3,round:N3,smallerEq:S3,unequal:k3,usolve:I3,xor:E3,add:C3,atan2:T3,bitOr:D3,catalan:A3,compareNatural:M3,deepEqual:$3,diff:O3,dot:R3,equalText:_3,floor:F3,identity:z3,invmod:B3,larger:L3,log:P3,lsolveAll:U3,matrixFromRows:q3,multiply:W3,pow:V3,qr:j3,range:G3,rightArithShift:H3,row:K3,setCartesian:X3,setDistinct:Z3,setIsSubset:Y3,setPowerset:J3,slu:Q3,sum:e4,trace:t4,usolveAll:n4,asin:r4,ceil:a4,column:i4,composition:s4,cross:o4,distance:u4,dotMultiply:c4,fix:p4,gamma:d4,index:h4,lcm:f4,max:m4,quantileSeq:g4,setDifference:y4,setMultiplicity:x4,setSymDifference:b4,sort:v4,vacuumImpedance:N4,wienDisplacement:S4,atomicMass:k4,bohrMagneton:I4,boltzmann:E4,conductanceQuantum:C4,createUnit:T4,deuteronMass:D4,dotPow:A4,electricConstant:M4,elementaryCharge:$4,factorial:O4,fermiCoupling:R4,gasConstant:_4,gravity:F4,intersect:z4,inverseConductanceQuantum:B4,klitzing:L4,loschmidt:P4,magneticConstant:U4,molarMass:q4,molarPlanckConstant:W4,neutronMass:V4,nuclearMagneton:j4,permutations:G4,planckConstant:H4,planckMass:K4,planckTime:X4,quantumOfCirculation:Z4,reducedPlanckConstant:Y4,rydberg:J4,setIntersect:Q4,setUnion:e5,stefanBoltzmann:n5,unit:r5,avogadro:a5,bohrRadius:i5,coulomb:s5,electronMass:o5,faraday:u5,hartreeEnergy:c5,log1p:l5,magneticFluxQuantum:d5,molarMassC12:h5,parse:U7,planckCharge:f5,planckTemperature:m5,secondRadiation:g5,speedOfLight:y5,stirlingS2:x5,bellNumbers:b5,compile:q7,evaluate:W7,firstRadiation:v5,lup:w5,molarVolume:N5,protonMass:S5,setSize:k5,thomsonCrossSection:I5,classicalElectronRadius:E5,det:C5,gravitationConstant:T5,inv:D5,lusolve:A5,parser:G7,sqrtm:M5,divide:$5,expm:O5,kldivergence:R5,mean:_5,median:F5,planckLength:z5,simplify:H7,variance:B5,derivative:K7,help:X7,rationalize:Z7,std:L5,eigs:P5,multinomial:U5,mad:q5,norm:W5,rotationMatrix:V5,rotate:j5,config:rq}),nU(v7,b7,{filter:Y6({typed:n1}),forEach:Q6({typed:n1}),map:e7({typed:n1}),apply:n7({isInteger:F1,typed:n1}),diff:i7({bignumber:m1,matrix:T2,number:G1,subtract:P2,typed:n1}),index:s7({Index:c3}),subset:o7({matrix:T2,typed:n1}),concat:u7({isInteger:F1,matrix:T2,typed:n1}),max:c7({config:rq,larger:L3,numeric:$2,typed:n1}),min:l7({config:rq,numeric:$2,smaller:z2,typed:n1}),range:p7({bignumber:m1,matrix:T2,config:rq,larger:L3,largerEq:p3,smaller:z2,smallerEq:S3,typed:n1}),row:d7({Index:c3,matrix:T2,range:G3,typed:n1}),sum:h7({add:C3,config:rq,numeric:$2,typed:n1}),column:f7({Index:c3,matrix:T2,range:G3,typed:n1}),mean:m7({add:C3,divide:$5,typed:n1}),variance:y7({add:C3,apply:c2,divide:$5,isNaN:m2,multiply:W3,subtract:P2,typed:n1}),std:x7({sqrt:w2,typed:n1,variance:B5})}),nU(w7,{BigNumber:D0,Chain:N7,Complex:A0,Fraction:R0,Matrix:L0,Node:S7,ObjectNode:k7,OperatorNode:I7,ParenthesisNode:E7,Range:W0,RelationalNode:C7,ResultSet:V0,ArrayNode:T7,BlockNode:D7,ConditionalNode:A7,ConstantNode:M7,DenseMatrix:Z0,RangeNode:$7,FunctionAssignmentNode:_7,SparseMatrix:t2,AccessorNode:F7,AssignmentNode:z7,ImmutableDenseMatrix:u3,Index:c3,IndexNode:B7,FibonacciHeap:l4,Unit:w4,Spa:t5,SymbolNode:L7,FunctionNode:P7,Help:V7,Parser:j7}),N7.createProxy(b7);var Y7={createBigNumberClass:uq},J7={createComplexClass:$q},Q7={createMatrixClass:lV},e9={MatrixDependencies:Q7,createDenseMatrixClass:GV},t9={createFractionClass:cV},n9={BigNumberDependencies:Y7,ComplexDependencies:J7,DenseMatrixDependencies:e9,FractionDependencies:t9,createTyped:uj},r9={typedDependencies:n9,createAbs:Vj},a9={createNode:K5},i9={typedDependencies:n9,createEqualScalar:cH},s9={MatrixDependencies:Q7,equalScalarDependencies:i9,typedDependencies:n9,createSparseMatrixClass:vK},o9={DenseMatrixDependencies:e9,MatrixDependencies:Q7,SparseMatrixDependencies:s9,typedDependencies:n9,createMatrix:mX},u9={matrixDependencies:o9,typedDependencies:n9,createSubset:KX},c9={NodeDependencies:a9,subsetDependencies:u9,createAccessorNode:w6},l9={ComplexDependencies:J7,typedDependencies:n9,createAcos:Gj},p9={ComplexDependencies:J7,typedDependencies:n9,createAcosh:MK},d9={BigNumberDependencies:Y7,typedDependencies:n9,createAcot:pG},h9={BigNumberDependencies:Y7,ComplexDependencies:J7,typedDependencies:n9,createAcoth:cX},f9={BigNumberDependencies:Y7,ComplexDependencies:J7,typedDependencies:n9,createAcsc:hG},m9={BigNumberDependencies:Y7,typedDependencies:n9,createAcsch:OK},g9={typedDependencies:n9,createAddScalar:mG},y9={DenseMatrixDependencies:e9,SparseMatrixDependencies:s9,addScalarDependencies:g9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createAdd:DY},x9={typedDependencies:n9,createNot:tK},b9={BigNumberDependencies:Y7,matrixDependencies:o9,typedDependencies:n9,createZeros:uZ},v9={equalScalarDependencies:i9,matrixDependencies:o9,notDependencies:x9,typedDependencies:n9,zerosDependencies:b9,createAnd:cZ},w9={typedDependencies:n9,createIsInteger:MH},N9={isIntegerDependencies:w9,typedDependencies:n9,createApply:_K},S9={isIntegerDependencies:w9,typedDependencies:n9,createApplyTransform:n7},k9={typedDependencies:n9,createArg:gG},I9={NodeDependencies:a9,createArrayNode:l6},E9={BigNumberDependencies:Y7,ComplexDependencies:J7,typedDependencies:n9,createAsec:BK},C9={BigNumberDependencies:Y7,ComplexDependencies:J7,typedDependencies:n9,createAsech:xG},T9={ComplexDependencies:J7,typedDependencies:n9,createAsin:PJ},D9={typedDependencies:n9,createAsinh:bG},A9={matrixDependencies:o9,NodeDependencies:a9,subsetDependencies:u9,createAssignmentNode:N6},M9={typedDependencies:n9,createAtan:vG},$9={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createAtan2:$Y},O9={ComplexDependencies:J7,typedDependencies:n9,createAtanh:NG},R9={BigNumberDependencies:Y7,typedDependencies:n9,createBignumber:SG},_9={FractionDependencies:t9,typedDependencies:n9,createFraction:pX},F9={typedDependencies:n9,createNumber:nK},z9={bignumberDependencies:R9,fractionDependencies:_9,numberDependencies:F9,createNumeric:OX},B9={numericDependencies:z9,typedDependencies:n9,createDivideScalar:AZ},L9={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createEqual:RZ},P9={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,zerosDependencies:b9,createRound:vY},U9={equalScalarDependencies:i9,matrixDependencies:o9,roundDependencies:P9,typedDependencies:n9,createCeil:UJ},q9={equalScalarDependencies:i9,matrixDependencies:o9,roundDependencies:P9,typedDependencies:n9,createFloor:HY},W9={ComplexDependencies:J7,ceilDependencies:U9,floorDependencies:q9,matrixDependencies:o9,typedDependencies:n9,createFix:QJ},V9={typedDependencies:n9,createFormat:IH},j9={typedDependencies:n9,createIsNumeric:hX},G9={typedDependencies:n9,createMultiplyScalar:XH},H9={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,SparseMatrixDependencies:s9,matrixDependencies:o9,typedDependencies:n9,createIdentity:XY},K9={typedDependencies:n9,createConj:QG},X9={matrixDependencies:o9,typedDependencies:n9,createSize:UX},Z9={addScalarDependencies:g9,conjDependencies:K9,multiplyScalarDependencies:G9,sizeDependencies:X9,typedDependencies:n9,createDot:VY},Y9={addScalarDependencies:g9,dotDependencies:Z9,equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,typedDependencies:n9,createMultiply:sJ},J9={ComplexDependencies:J7,fractionDependencies:_9,identityDependencies:H9,matrixDependencies:o9,multiplyDependencies:Y9,numberDependencies:F9,typedDependencies:n9,createPow:oJ},Q9={typedDependencies:n9,createUnaryMinus:oX},e8={DenseMatrixDependencies:e9,addScalarDependencies:g9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,unaryMinusDependencies:Q9,createSubtract:tZ},t8={BigNumberDependencies:Y7,ComplexDependencies:J7,FractionDependencies:t9,absDependencies:r9,addScalarDependencies:g9,divideScalarDependencies:B9,equalDependencies:L9,fixDependencies:W9,formatDependencies:V9,isNumericDependencies:j9,multiplyScalarDependencies:G9,numberDependencies:F9,powDependencies:J9,roundDependencies:P9,subtractDependencies:e8,createUnitClass:vQ},n8={BigNumberDependencies:Y7,UnitDependencies:t8,createAtomicMass:LW},r8={BigNumberDependencies:Y7,UnitDependencies:t8,createAvogadro:PW},a8={typedDependencies:n9,createIsNegative:BH},i8={typedDependencies:n9,createCombinations:XG},s8={BigNumberDependencies:Y7,ComplexDependencies:J7,multiplyScalarDependencies:G9,powDependencies:J9,typedDependencies:n9,createGamma:aQ},o8={gammaDependencies:s8,typedDependencies:n9,createFactorial:EQ},u8={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createLarger:QY},c8={addScalarDependencies:g9,combinationsDependencies:i8,divideScalarDependencies:B9,factorialDependencies:o8,isIntegerDependencies:w9,isNegativeDependencies:a8,largerDependencies:u8,multiplyScalarDependencies:G9,powDependencies:J9,subtractDependencies:e8,typedDependencies:n9,createStirlingS2:UQ},l8={addScalarDependencies:g9,isIntegerDependencies:w9,isNegativeDependencies:a8,stirlingS2Dependencies:c8,typedDependencies:n9,createBellNumbers:WQ},p8={formatDependencies:V9,typedDependencies:n9,createBin:LK},d8={equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createBitAnd:pZ},h8={typedDependencies:n9,createBitNot:UG},f8={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createBitOr:RY},m8={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createBitXor:hZ},g8={createResultSet:dV},y8={NodeDependencies:a9,ResultSetDependencies:g8,createBlockNode:p6},x8={BigNumberDependencies:Y7,UnitDependencies:t8,createBohrMagneton:bW},b8={BigNumberDependencies:Y7,UnitDependencies:t8,createBohrRadius:IW},v8={BigNumberDependencies:Y7,UnitDependencies:t8,createBoltzmann:UW},w8={typedDependencies:n9,createBoolean:WG},N8={addScalarDependencies:g9,combinationsDependencies:i8,divideScalarDependencies:B9,isIntegerDependencies:w9,isNegativeDependencies:a8,multiplyScalarDependencies:G9,typedDependencies:n9,createCatalan:FY},S8={BigNumberDependencies:Y7,ComplexDependencies:J7,FractionDependencies:t9,isNegativeDependencies:a8,matrixDependencies:o9,typedDependencies:n9,unaryMinusDependencies:Q9,createCbrt:mZ},k8={createChainClass:G5},I8={ChainDependencies:k8,typedDependencies:n9,createChain:y6},E8={BigNumberDependencies:Y7,UnitDependencies:t8,createClassicalElectronRadius:EW},C8={typedDependencies:n9,createClone:jG},T8={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createSmaller:VX},D8={DenseMatrixDependencies:e9,smallerDependencies:T8,createImmutableDenseMatrixClass:WZ},A8={ImmutableDenseMatrixDependencies:D8,createIndexClass:VZ},M8={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createLargerEq:KZ},$8={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createSmallerEq:SY},O8={bignumberDependencies:R9,matrixDependencies:o9,largerDependencies:u8,largerEqDependencies:M8,smallerDependencies:T8,smallerEqDependencies:$8,typedDependencies:n9,createRange:lJ},R8={IndexDependencies:A8,matrixDependencies:o9,rangeDependencies:O8,typedDependencies:n9,createColumn:WJ},_8={IndexDependencies:A8,matrixDependencies:o9,rangeDependencies:O8,typedDependencies:n9,createColumnTransform:f7},F8={typedDependencies:n9,createCombinationsWithRep:UK},z8={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,FractionDependencies:t9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createCompare:yZ},B8={compareDependencies:z8,typedDependencies:n9,createCompareNatural:LY},L8={matrixDependencies:o9,typedDependencies:n9,createCompareText:bZ},P8={NodeDependencies:a9,createConditionalNode:d6},U8={NodeDependencies:a9,createConstantNode:h6},q8={NodeDependencies:a9,typedDependencies:n9,createFunctionAssignmentNode:x6},W8={UnitDependencies:t8,NodeDependencies:a9,createSymbolNode:k6},V8={NodeDependencies:a9,SymbolNodeDependencies:W8,createFunctionNode:E6},j8={createRangeClass:pV},G8={NodeDependencies:a9,RangeDependencies:j8,sizeDependencies:X9,createIndexNode:S6},H8={NodeDependencies:a9,createObjectNode:X5},K8={NodeDependencies:a9,createOperatorNode:o6},X8={NodeDependencies:a9,createParenthesisNode:u6},Z8={NodeDependencies:a9,createRangeNode:f6},Y8={NodeDependencies:a9,createRelationalNode:c6},J8={AccessorNodeDependencies:c9,ArrayNodeDependencies:I9,AssignmentNodeDependencies:A9,BlockNodeDependencies:y8,ConditionalNodeDependencies:P8,ConstantNodeDependencies:U8,FunctionAssignmentNodeDependencies:q8,FunctionNodeDependencies:V8,IndexNodeDependencies:G8,ObjectNodeDependencies:H8,OperatorNodeDependencies:K8,ParenthesisNodeDependencies:X8,RangeNodeDependencies:Z8,RelationalNodeDependencies:Y8,SymbolNodeDependencies:W8,numericDependencies:z9,typedDependencies:n9,createParse:T6},Q8={parseDependencies:J8,typedDependencies:n9,createCompile:A6},eee={ComplexDependencies:J7,typedDependencies:n9,createComplex:YG},tee={typedDependencies:n9,createIsPositive:PH},nee={addScalarDependencies:g9,combinationsDependencies:i8,isIntegerDependencies:w9,isNegativeDependencies:a8,isPositiveDependencies:tee,largerDependencies:u8,typedDependencies:n9,createComposition:jJ},ree={isIntegerDependencies:w9,matrixDependencies:o9,typedDependencies:n9,createConcat:wZ},aee={isIntegerDependencies:w9,matrixDependencies:o9,typedDependencies:n9,createConcatTransform:u7},iee={BigNumberDependencies:Y7,UnitDependencies:t8,createConductanceQuantum:vW},see={typedDependencies:n9,createCos:WK},oee={typedDependencies:n9,createCosh:tH},uee={BigNumberDependencies:Y7,typedDependencies:n9,createCot:lX},cee={BigNumberDependencies:Y7,typedDependencies:n9,createCoth:rH},lee={BigNumberDependencies:Y7,UnitDependencies:t8,createCoulomb:yW},pee={multiplyScalarDependencies:G9,numericDependencies:z9,typedDependencies:n9,createProd:zX},dee={prodDependencies:pee,sizeDependencies:X9,typedDependencies:n9,createCount:kZ},hee={UnitDependencies:t8,typedDependencies:n9,createCreateUnit:NQ},fee={matrixDependencies:o9,multiplyDependencies:Y9,subtractDependencies:e8,typedDependencies:n9,createCross:HJ},mee={BigNumberDependencies:Y7,typedDependencies:n9,createCsc:aH},gee={BigNumberDependencies:Y7,typedDependencies:n9,createCsch:jK},yee={matrixDependencies:o9,typedDependencies:n9,createTranspose:aZ},xee={conjDependencies:K9,transposeDependencies:yee,typedDependencies:n9,createCtranspose:EZ},bee={typedDependencies:n9,createCube:sH},vee={equalDependencies:L9,typedDependencies:n9,createDeepEqual:UY},wee={typedDependencies:n9,createIsZero:qH},Nee={largerDependencies:u8,smallerDependencies:T8,createFibonacciHeapClass:JJ},See={FibonacciHeapDependencies:Nee,addScalarDependencies:g9,equalScalarDependencies:i9,createSpaClass:_Q},kee={DenseMatrixDependencies:e9,SpaDependencies:See,SparseMatrixDependencies:s9,absDependencies:r9,addScalarDependencies:g9,divideScalarDependencies:B9,equalScalarDependencies:i9,largerDependencies:u8,matrixDependencies:o9,multiplyScalarDependencies:G9,subtractDependencies:e8,typedDependencies:n9,unaryMinusDependencies:Q9,createLup:VQ},Iee={lupDependencies:kee,matrixDependencies:o9,multiplyDependencies:Y9,subtractDependencies:e8,typedDependencies:n9,unaryMinusDependencies:Q9,createDet:HQ},Eee={absDependencies:r9,addScalarDependencies:g9,detDependencies:Iee,divideScalarDependencies:B9,identityDependencies:H9,matrixDependencies:o9,multiplyDependencies:Y9,typedDependencies:n9,unaryMinusDependencies:Q9,createInv:KQ},Cee={divideScalarDependencies:B9,equalScalarDependencies:i9,invDependencies:Eee,matrixDependencies:o9,multiplyDependencies:Y9,typedDependencies:n9,createDivide:e0},Tee={bignumberDependencies:R9,fractionDependencies:_9,AccessorNodeDependencies:c9,ArrayNodeDependencies:I9,ConstantNodeDependencies:U8,FunctionNodeDependencies:V8,IndexNodeDependencies:G8,ObjectNodeDependencies:H8,OperatorNodeDependencies:K8,ParenthesisNodeDependencies:X8,SymbolNodeDependencies:W8,addDependencies:y9,divideDependencies:Cee,equalDependencies:L9,isZeroDependencies:wee,matrixDependencies:o9,multiplyDependencies:Y9,parseDependencies:J8,powDependencies:J9,subtractDependencies:e8,typedDependencies:n9,createSimplify:U6},Dee={ConstantNodeDependencies:U8,FunctionNodeDependencies:V8,OperatorNodeDependencies:K8,ParenthesisNodeDependencies:X8,SymbolNodeDependencies:W8,equalDependencies:L9,isZeroDependencies:wee,numericDependencies:z9,parseDependencies:J8,simplifyDependencies:Tee,typedDependencies:n9,createDerivative:q6},Aee={BigNumberDependencies:Y7,UnitDependencies:t8,createDeuteronMass:$W},Mee={DenseMatrixDependencies:e9,SparseMatrixDependencies:s9,matrixDependencies:o9,typedDependencies:n9,createDiag:TZ},$ee={matrixDependencies:o9,numberDependencies:F9,subtractDependencies:e8,typedDependencies:n9,createDiff:WY},Oee={bignumberDependencies:R9,matrixDependencies:o9,numberDependencies:F9,subtractDependencies:e8,typedDependencies:n9,createDiffTransform:i7},Ree={ComplexDependencies:J7,typedDependencies:n9,createSqrt:aX},_ee={absDependencies:r9,addScalarDependencies:g9,divideScalarDependencies:B9,multiplyScalarDependencies:G9,sqrtDependencies:Ree,subtractDependencies:e8,typedDependencies:n9,unaryMinusDependencies:Q9,createDistance:XJ},Fee={DenseMatrixDependencies:e9,divideScalarDependencies:B9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createDotDivide:$Z},zee={equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,typedDependencies:n9,createDotMultiply:YJ},Bee={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,powDependencies:J9,typedDependencies:n9,createDotPow:kQ},Lee={BigNumberDependencies:Y7,createE:Yq},Pee={BigNumberDependencies:Y7,createEfimovFactor:BW},Uee={matrixDependencies:o9,typedDependencies:n9,createFlatten:FZ},qee={typedDependencies:n9,createIm:DH},Wee={flattenDependencies:Uee,matrixDependencies:o9,sizeDependencies:X9,typedDependencies:n9,createMatrixFromColumns:nY},Vee={BigNumberDependencies:Y7,FractionDependencies:t9,complexDependencies:eee,typedDependencies:n9,createSign:xK},jee={addScalarDependencies:g9,complexDependencies:eee,conjDependencies:K9,divideScalarDependencies:B9,equalDependencies:L9,identityDependencies:H9,isZeroDependencies:wee,matrixDependencies:o9,multiplyScalarDependencies:G9,signDependencies:Vee,sqrtDependencies:Ree,subtractDependencies:e8,typedDependencies:n9,unaryMinusDependencies:Q9,zerosDependencies:b9,createQr:uJ},Gee={typedDependencies:n9,createRe:mK},Hee={typedDependencies:n9,createSin:bK},Kee={DenseMatrixDependencies:e9,divideScalarDependencies:B9,equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,subtractDependencies:e8,typedDependencies:n9,createUsolve:CY},Xee={DenseMatrixDependencies:e9,divideScalarDependencies:B9,equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,subtractDependencies:e8,typedDependencies:n9,createUsolveAll:BJ},Zee={absDependencies:r9,addDependencies:y9,addScalarDependencies:g9,atanDependencies:M9,bignumberDependencies:R9,columnDependencies:R8,complexDependencies:eee,cosDependencies:see,diagDependencies:Mee,divideScalarDependencies:B9,dotDependencies:Z9,equalDependencies:L9,flattenDependencies:Uee,imDependencies:qee,invDependencies:Eee,largerDependencies:u8,matrixDependencies:o9,matrixFromColumnsDependencies:Wee,multiplyDependencies:Y9,multiplyScalarDependencies:G9,numberDependencies:F9,qrDependencies:jee,reDependencies:Gee,sinDependencies:Hee,smallerDependencies:T8,sqrtDependencies:Ree,subtractDependencies:e8,typedDependencies:n9,usolveDependencies:Kee,usolveAllDependencies:Xee,createEigs:f0},Yee={BigNumberDependencies:Y7,UnitDependencies:t8,createElectricConstant:mW},Jee={BigNumberDependencies:Y7,UnitDependencies:t8,createElectronMass:CW},Qee={BigNumberDependencies:Y7,UnitDependencies:t8,createElementaryCharge:xW},ete={compareTextDependencies:L8,isZeroDependencies:wee,typedDependencies:n9,createEqualText:GY},tte={typedDependencies:n9,createErf:lH},nte={parseDependencies:J8,typedDependencies:n9,createEvaluate:$6},rte={typedDependencies:n9,createExp:gH},ate={absDependencies:r9,addDependencies:y9,identityDependencies:H9,invDependencies:Eee,multiplyDependencies:Y9,typedDependencies:n9,createExpm:n0},ite={ComplexDependencies:J7,typedDependencies:n9,createExpm1:xH},ste={createFalse:jq},ote={BigNumberDependencies:Y7,UnitDependencies:t8,createFaraday:qW},ute={BigNumberDependencies:Y7,UnitDependencies:t8,createFermiCoupling:TW},cte={typedDependencies:n9,createFilter:bH},lte={typedDependencies:n9,createFilterTransform:Y6},pte={BigNumberDependencies:Y7,createFineStructure:DW},dte={BigNumberDependencies:Y7,UnitDependencies:t8,createFirstRadiation:WW},hte={typedDependencies:n9,createForEach:NH},fte={typedDependencies:n9,createForEachTransform:Q6},mte={BigNumberDependencies:Y7,UnitDependencies:t8,createGasConstant:jW},gte={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createGcd:BZ},yte={typedDependencies:n9,createGetMatrixDataType:CH},xte={BigNumberDependencies:Y7,UnitDependencies:t8,createGravitationConstant:pW},bte={BigNumberDependencies:Y7,UnitDependencies:t8,createGravity:eV},vte={BigNumberDependencies:Y7,UnitDependencies:t8,createHartreeEnergy:AW},wte={isNumericDependencies:j9,typedDependencies:n9,createHasNumericValue:PZ},Nte={parseDependencies:J8,createHelpClass:O6},Ste={HelpDependencies:Nte,typedDependencies:n9,createHelp:H6},kte={formatDependencies:V9,typedDependencies:n9,createHex:TH},Ite={absDependencies:r9,addScalarDependencies:g9,divideScalarDependencies:B9,isPositiveDependencies:tee,multiplyScalarDependencies:G9,smallerDependencies:T8,sqrtDependencies:Ree,typedDependencies:n9,createHypot:qZ},Ete={ComplexDependencies:J7,createI:iW},Cte={IndexDependencies:A8,typedDependencies:n9,createIndex:sQ},Tte={IndexDependencies:A8,createIndexTransform:s7},Dte={BigNumberDependencies:Y7,createInfinity:Hq},Ate={absDependencies:r9,addDependencies:y9,addScalarDependencies:g9,divideScalarDependencies:B9,equalScalarDependencies:i9,flattenDependencies:Uee,isNumericDependencies:j9,isZeroDependencies:wee,matrixDependencies:o9,multiplyDependencies:Y9,multiplyScalarDependencies:G9,smallerDependencies:T8,subtractDependencies:e8,typedDependencies:n9,createIntersect:CQ},Mte={BigNumberDependencies:Y7,UnitDependencies:t8,createInverseConductanceQuantum:wW},$te={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createMod:IX},Ote={BigNumberDependencies:Y7,matrixDependencies:o9,typedDependencies:n9,createXgcd:sZ},Rte={BigNumberDependencies:Y7,addDependencies:y9,equalDependencies:L9,isIntegerDependencies:w9,modDependencies:$te,smallerDependencies:T8,typedDependencies:n9,xgcdDependencies:Ote,createInvmod:YY},_te={typedDependencies:n9,createIsNaN:HK},Fte={typedDependencies:n9,createIsPrime:XK},zte={ComplexDependencies:J7,divideScalarDependencies:B9,typedDependencies:n9,createLog:eJ},Bte={addDependencies:y9,numericDependencies:z9,typedDependencies:n9,createSum:_J},Lte={divideDependencies:Cee,dotDivideDependencies:Fee,isNumericDependencies:j9,logDependencies:zte,matrixDependencies:o9,multiplyDependencies:Y9,sumDependencies:Bte,typedDependencies:n9,createKldivergence:a0},Pte={BigNumberDependencies:Y7,UnitDependencies:t8,createKlitzing:kW},Ute={matrixDependencies:o9,multiplyScalarDependencies:G9,typedDependencies:n9,createKron:GZ},qte={BigNumberDependencies:Y7,createLN10:eW},Wte={BigNumberDependencies:Y7,createLN2:Qq},Vte={BigNumberDependencies:Y7,createLOG10E:nW},jte={BigNumberDependencies:Y7,createLOG2E:tW},Gte={equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createLcm:oQ},Hte={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,zerosDependencies:b9,createLeftShift:YZ},Kte={ComplexDependencies:J7,typedDependencies:n9,createLog10:VH},Xte={ComplexDependencies:J7,divideScalarDependencies:B9,logDependencies:zte,typedDependencies:n9,createLog1p:LQ},Zte={ComplexDependencies:J7,typedDependencies:n9,createLog2:GH},Yte={BigNumberDependencies:Y7,UnitDependencies:t8,createLoschmidt:VW},Jte={DenseMatrixDependencies:e9,divideScalarDependencies:B9,equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,subtractDependencies:e8,typedDependencies:n9,createLsolve:eY},Qte={DenseMatrixDependencies:e9,divideScalarDependencies:B9,equalScalarDependencies:i9,matrixDependencies:o9,multiplyScalarDependencies:G9,subtractDependencies:e8,typedDependencies:n9,createLsolveAll:nJ},ene={SparseMatrixDependencies:s9,absDependencies:r9,addDependencies:y9,divideScalarDependencies:B9,largerDependencies:u8,largerEqDependencies:M8,multiplyDependencies:Y9,subtractDependencies:e8,transposeDependencies:yee,typedDependencies:n9,createSlu:RJ},tne={DenseMatrixDependencies:e9,lsolveDependencies:Jte,lupDependencies:kee,matrixDependencies:o9,sluDependencies:ene,typedDependencies:n9,usolveDependencies:Kee,createLusolve:YQ},nne={typedDependencies:n9,createMap:HH},rne={compareDependencies:z8,isNaNDependencies:_te,isNumericDependencies:j9,typedDependencies:n9,createPartitionSelect:lY},ane={addDependencies:y9,compareDependencies:z8,divideDependencies:Cee,partitionSelectDependencies:rne,typedDependencies:n9,createMedian:u0},ine={absDependencies:r9,mapDependencies:nne,medianDependencies:ane,subtractDependencies:e8,typedDependencies:n9,createMad:b0},sne={BigNumberDependencies:Y7,UnitDependencies:t8,createMagneticConstant:fW},one={BigNumberDependencies:Y7,UnitDependencies:t8,createMagneticFluxQuantum:NW},une={typedDependencies:n9,createMapTransform:e7},cne={isZeroDependencies:wee,matrixDependencies:o9,typedDependencies:n9,createMatrixFromFunction:yX},lne={flattenDependencies:Uee,matrixDependencies:o9,sizeDependencies:X9,typedDependencies:n9,createMatrixFromRows:aJ},pne={largerDependencies:u8,numericDependencies:z9,typedDependencies:n9,createMax:uQ},dne={largerDependencies:u8,numericDependencies:z9,typedDependencies:n9,createMaxTransform:c7},hne={addDependencies:y9,divideDependencies:Cee,typedDependencies:n9,createMean:s0},fne={addDependencies:y9,divideDependencies:Cee,typedDependencies:n9,createMeanTransform:m7},mne={numericDependencies:z9,smallerDependencies:T8,typedDependencies:n9,createMin:rY},gne={numericDependencies:z9,smallerDependencies:T8,typedDependencies:n9,createMinTransform:l7},yne={isNaNDependencies:_te,isNumericDependencies:j9,typedDependencies:n9,createMode:iY},xne={BigNumberDependencies:Y7,UnitDependencies:t8,createMolarMass:JW},bne={BigNumberDependencies:Y7,UnitDependencies:t8,createMolarMassC12:QW},vne={BigNumberDependencies:Y7,UnitDependencies:t8,createMolarPlanckConstant:GW},wne={BigNumberDependencies:Y7,UnitDependencies:t8,createMolarVolume:HW},Nne={addDependencies:y9,divideDependencies:Cee,factorialDependencies:o8,isIntegerDependencies:w9,isPositiveDependencies:tee,multiplyDependencies:Y9,typedDependencies:n9,createMultinomial:y0},Sne={BigNumberDependencies:Y7,createNaN:Kq},kne={BigNumberDependencies:Y7,UnitDependencies:t8,createNeutronMass:OW},Ine={absDependencies:r9,addDependencies:y9,conjDependencies:K9,ctransposeDependencies:xee,eigsDependencies:Zee,equalScalarDependencies:i9,largerDependencies:u8,matrixDependencies:o9,multiplyDependencies:Y9,powDependencies:J9,smallerDependencies:T8,sqrtDependencies:Ree,typedDependencies:n9,createNorm:N0},Ene={BigNumberDependencies:Y7,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createNthRoot:DX},Cne={ComplexDependencies:J7,divideScalarDependencies:B9,typedDependencies:n9,createNthRoots:oY},Tne={BigNumberDependencies:Y7,UnitDependencies:t8,createNuclearMagneton:SW},Dne={createNull:Gq},Ane={formatDependencies:V9,typedDependencies:n9,createOct:rK},Mne={BigNumberDependencies:Y7,matrixDependencies:o9,typedDependencies:n9,createOnes:uY},$ne={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createOr:RX},One={evaluateDependencies:nte,createParserClass:R6},Rne={ParserDependencies:One,typedDependencies:n9,createParser:F6},_ne={factorialDependencies:o8,typedDependencies:n9,createPermutations:DQ},Fne={BigNumberDependencies:Y7,createPhi:Jq},zne={BigNumberDependencies:Y7,createPi:Xq},Bne={typedDependencies:n9,createPickRandom:uK},Lne={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckCharge:aV},Pne={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckConstant:dW},Une={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckLength:tV},qne={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckMass:nV},Wne={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckTemperature:iV},Vne={BigNumberDependencies:Y7,UnitDependencies:t8,createPlanckTime:rV},jne={typedDependencies:n9,createPrint:lK},Gne={BigNumberDependencies:Y7,UnitDependencies:t8,createProtonMass:MW},Hne={addDependencies:y9,compareDependencies:z8,multiplyDependencies:Y9,partitionSelectDependencies:rne,typedDependencies:n9,createQuantileSeq:cQ},Kne={BigNumberDependencies:Y7,UnitDependencies:t8,createQuantumOfCirculation:RW},Xne={typedDependencies:n9,createRandom:fK},Zne={typedDependencies:n9,createRandomInt:YK},Yne={bignumberDependencies:R9,matrixDependencies:o9,largerDependencies:u8,largerEqDependencies:M8,smallerDependencies:T8,smallerEqDependencies:$8,typedDependencies:n9,createRangeTransform:p7},Jne={bignumberDependencies:R9,fractionDependencies:_9,AccessorNodeDependencies:c9,ArrayNodeDependencies:I9,ConstantNodeDependencies:U8,FunctionNodeDependencies:V8,IndexNodeDependencies:G8,ObjectNodeDependencies:H8,OperatorNodeDependencies:K8,ParenthesisNodeDependencies:X8,SymbolNodeDependencies:W8,addDependencies:y9,divideDependencies:Cee,equalDependencies:L9,isZeroDependencies:wee,matrixDependencies:o9,multiplyDependencies:Y9,parseDependencies:J8,powDependencies:J9,simplifyDependencies:Tee,subtractDependencies:e8,typedDependencies:n9,createRationalize:X6},Qne={BigNumberDependencies:Y7,UnitDependencies:t8,createReducedPlanckConstant:hW},ere={createReplacer:HV},tre={isIntegerDependencies:w9,matrixDependencies:o9,typedDependencies:n9,createReshape:LX},nre={matrixDependencies:o9,createResize:dY},rre={createReviver:m6},are={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,zerosDependencies:b9,createRightArithShift:dJ},ire={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,zerosDependencies:b9,createRightLogShift:fY},sre={BigNumberDependencies:Y7,DenseMatrixDependencies:e9,SparseMatrixDependencies:s9,addScalarDependencies:g9,cosDependencies:see,matrixDependencies:o9,multiplyScalarDependencies:G9,normDependencies:Ine,sinDependencies:Hee,typedDependencies:n9,unaryMinusDependencies:Q9,createRotationMatrix:I0},ore={multiplyDependencies:Y9,rotationMatrixDependencies:sre,typedDependencies:n9,createRotate:T0},ure={IndexDependencies:A8,matrixDependencies:o9,rangeDependencies:O8,typedDependencies:n9,createRow:hJ},cre={IndexDependencies:A8,matrixDependencies:o9,rangeDependencies:O8,typedDependencies:n9,createRowTransform:d7},lre={BigNumberDependencies:Y7,UnitDependencies:t8,createRydberg:_W},pre={BigNumberDependencies:Y7,createSQRT1_2:rW},dre={BigNumberDependencies:Y7,createSQRT2:aW},hre={BigNumberDependencies:Y7,createSackurTetrode:KW},fre={BigNumberDependencies:Y7,typedDependencies:n9,createSec:gK},mre={BigNumberDependencies:Y7,typedDependencies:n9,createSech:QK},gre={BigNumberDependencies:Y7,UnitDependencies:t8,createSecondRadiation:XW},yre={DenseMatrixDependencies:e9,IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetCartesian:mJ},xre={DenseMatrixDependencies:e9,IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetDifference:pQ},bre={DenseMatrixDependencies:e9,IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetDistinct:yJ},vre={DenseMatrixDependencies:e9,IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetIntersect:$Q},wre={IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetIsSubset:bJ},Nre={IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetMultiplicity:hQ},Sre={IndexDependencies:A8,compareNaturalDependencies:B8,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetPowerset:wJ},kre={compareNaturalDependencies:B8,typedDependencies:n9,createSetSize:GQ},Ire={IndexDependencies:A8,concatDependencies:ree,setDifferenceDependencies:xre,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetSymDifference:mQ},Ere={IndexDependencies:A8,concatDependencies:ree,setIntersectDependencies:vre,setSymDifferenceDependencies:Ire,sizeDependencies:X9,subsetDependencies:u9,typedDependencies:n9,createSetUnion:RQ},Cre={typedDependencies:n9,createSinh:tX},Tre={compareDependencies:z8,compareNaturalDependencies:B8,matrixDependencies:o9,typedDependencies:n9,createSort:yQ},Dre={SparseMatrixDependencies:s9,typedDependencies:n9,createSparse:rX},Are={BigNumberDependencies:Y7,UnitDependencies:t8,createSpeedOfLight:lW},Mre={typedDependencies:n9,createSplitUnit:NK},$re={absDependencies:r9,addDependencies:y9,identityDependencies:H9,invDependencies:Eee,maxDependencies:pne,multiplyDependencies:Y9,sizeDependencies:X9,sqrtDependencies:Ree,subtractDependencies:e8,typedDependencies:n9,createSqrtm:QQ},Ore={typedDependencies:n9,createSquare:kK},Rre={matrixDependencies:o9,typedDependencies:n9,createSqueeze:GX},_re={addDependencies:y9,applyDependencies:N9,divideDependencies:Cee,isNaNDependencies:_te,multiplyDependencies:Y9,subtractDependencies:e8,typedDependencies:n9,createVariance:p0},Fre={sqrtDependencies:Ree,typedDependencies:n9,varianceDependencies:_re,createStd:d0},zre={sqrtDependencies:Ree,typedDependencies:n9,varianceDependencies:_re,createStdTransform:x7},Bre={BigNumberDependencies:Y7,UnitDependencies:t8,createStefanBoltzmann:ZW},Lre={typedDependencies:n9,createString:EK},Pre={matrixDependencies:o9,typedDependencies:n9,createSubsetTransform:o7},Ure={addDependencies:y9,numericDependencies:z9,typedDependencies:n9,createSumTransform:h7},qre={typedDependencies:n9,createTan:CK},Wre={typedDependencies:n9,createTanh:iX},Vre={BigNumberDependencies:Y7,createTau:Zq},jre={BigNumberDependencies:Y7,UnitDependencies:t8,createThomsonCrossSection:FW},Gre={matrixDependencies:o9,typedDependencies:n9,createTo:rZ},Hre={addDependencies:y9,matrixDependencies:o9,typedDependencies:n9,createTrace:FJ},Kre={createTrue:Vq},Xre={typedDependencies:n9,createTypeOf:DK},Zre={BigNumberDependencies:Y7,typedDependencies:n9,createUnaryPlus:Wj},Yre={DenseMatrixDependencies:e9,equalScalarDependencies:i9,matrixDependencies:o9,typedDependencies:n9,createUnequal:IY},Jre={UnitDependencies:t8,typedDependencies:n9,createUnitFunction:zQ},Qre={eDependencies:Lee,createUppercaseE:oW},eae={piDependencies:zne,createUppercasePi:sW},tae={BigNumberDependencies:Y7,UnitDependencies:t8,createVacuumImpedance:gW},nae={addDependencies:y9,applyDependencies:N9,divideDependencies:Cee,isNaNDependencies:_te,multiplyDependencies:Y9,subtractDependencies:e8,typedDependencies:n9,createVarianceTransform:y7},rae={createVersion:uW},aae={BigNumberDependencies:Y7,createWeakMixingAngle:zW},iae={BigNumberDependencies:Y7,UnitDependencies:t8,createWienDisplacement:YW},sae={DenseMatrixDependencies:e9,matrixDependencies:o9,typedDependencies:n9,createXor:TY},oae=G,uae=n(279);function cae(e,t){var n=nU({},rU,t);if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var r,a,i=(r={isNumber:aU,isComplex:sU,isBigNumber:iU,isFraction:oU,isUnit:uU,isString:cU,isArray:lU,isMatrix:pU,isCollection:dU,isDenseMatrix:hU,isSparseMatrix:fU,isRange:mU,isIndex:gU,isBoolean:yU,isResultSet:xU,isHelp:bU,isFunction:vU,isDate:wU,isRegExp:NU,isObject:SU,isNull:kU,isUndefined:IU,isAccessorNode:EU,isArrayNode:CU,isAssignmentNode:TU,isBlockNode:DU,isConditionalNode:AU,isConstantNode:MU,isFunctionAssignmentNode:$U,isFunctionNode:OU,isIndexNode:RU,isNode:_U,isObjectNode:FU,isOperatorNode:zU,isParenthesisNode:BU,isRangeNode:LU,isSymbolNode:PU,isChain:UU},a=new uae,r.on=a.on.bind(a),r.off=a.off.bind(a),r.once=a.once.bind(a),r.emit=a.emit.bind(a),r);i.config=tq(n,i.emit),i.expression={transform:{},mathWithTransform:{config:i.config}};var s={},o=function(e,t,n,r){function a(t,a,s){if(s.wrap&&"function"==typeof a&&(u=function(){for(var e=[],t=0,r=arguments.length;t<r;t++){var a=arguments[t];e[t]=a&&a.valueOf()}return o.apply(n,e)},(o=a).transform&&(u.transform=o.transform),a=u),function(e){return"function"==typeof e&&"string"==typeof e.signature}(a)&&(a=e(t,{[a.signature]:a})),c(n[t])&&c(a))return a=s.override?e(t,a.signatures):e(n[t],a),n[t]=a,delete r[t],i(t,a),void n.emit("import",t,(function(){return a}));var o,u;if(void 0===n[t]||s.override)return n[t]=a,delete r[t],i(t,a),void n.emit("import",t,(function(){return a}));if(!s.silent)throw new Error('Cannot import "'+t+'": already exists')}function i(e,t){t&&"function"==typeof t.transform?(n.expression.transform[e]=t.transform,l(e)&&(n.expression.mathWithTransform[e]=t.transform)):(delete n.expression.transform[e],l(e)&&(n.expression.mathWithTransform[e]=t))}function s(e){delete n.expression.transform[e],l(e)?n.expression.mathWithTransform[e]=n[e]:delete n.expression.mathWithTransform[e]}function o(t,a){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.fn;if(jV(i,"."))throw new Error("Factory name should not contain a nested path. Name: "+JSON.stringify(i));var o=d(t)?n.expression.transform:n,u=i in n.expression.transform,l=YU(o,i)?o[i]:void 0,h=function(){var r={};t.dependencies.map(oq).forEach((e=>{if(jV(e,"."))throw new Error("Factory dependency should not contain a nested path. Name: "+JSON.stringify(e));"math"===e?r.math=n:"mathWithTransform"===e?r.mathWithTransform=n.expression.mathWithTransform:"classes"===e?r.classes=n:r[e]=n[e]}));var s=t(r);if(s&&"function"==typeof s.transform)throw new Error('Transforms cannot be attached to factory functions. Please create a separate function for it with exports.path="expression.transform"');if(void 0===l||a.override)return s;if(c(l)&&c(s))return e(l,s);if(a.silent)return l;throw new Error('Cannot import "'+i+'": already exists')};t.meta&&!1===t.meta.lazy?(o[i]=h(),l&&u?s(i):(d(t)||p(t))&&ZU(n.expression.mathWithTransform,i,(()=>o[i]))):(ZU(o,i,h),l&&u?s(i):(d(t)||p(t))&&ZU(n.expression.mathWithTransform,i,(()=>o[i]))),r[i]=t,n.emit("import",i,h)}function u(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||uU(e)||sU(e)||iU(e)||oU(e)||pU(e)||Array.isArray(e)}function c(e){return"function"==typeof e&&"object"==typeof e.signatures}function l(e){return!YU(h,e)}function p(e){return!(-1!==e.fn.indexOf(".")||YU(h,e.fn)||e.meta&&e.meta.isClass)}function d(e){return void 0!==e&&void 0!==e.meta&&!0===e.meta.isTransformFunction||!1}var h={expression:!0,type:!0,docs:!0,error:!0,json:!0,chain:!0};return function(e,t){var n=arguments.length;if(1!==n&&2!==n)throw new pY("import",n,1,2);function r(e,n,a){if(Array.isArray(n))n.forEach((t=>r(e,t)));else if("object"==typeof n)for(var i in n)YU(n,i)&&r(e,n[i],i);else if(sq(n)||void 0!==a){var s=sq(n)?d(n)?n.fn+".transform":n.fn:a;if(YU(e,s)&&e[s]!==n&&!t.silent)throw new Error('Cannot import "'+s+'" twice');e[s]=n}else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}t||(t={});var i={};for(var s in r(i,e),i)if(YU(i,s)){var c=i[s];if(sq(c))o(c,t);else if(u(c))a(s,c,t);else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}}}((function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return i.typed.apply(i.typed,t)}),0,i,s);return i.import=o,i.on("config",(()=>{JU(s).forEach((e=>{e&&e.meta&&e.meta.recreateOnConfigChange&&o(e,{override:!0})}))})),i.create=cae.bind(null,e),i.factory=iq,i.import(JU(KU(e))),i.ArgumentsError=pY,i.DimensionError=wV,i.IndexError=NV,i}class lae{constructor(e){this.pInst=e,this.turtle={},this.home()}home(){this.turtle.x=this.pInst.width/2,this.turtle.y=this.pInst.height/2,this.turtle.angle=0,this.turtle.pen=!0,this.turtle.pencolor="black",this.turtle.penwidth=1}pencolor(e){this.turtle.pencolor=e}pensize(e){this.turtle.penwidth=e}pendown(){this.turtle.pen=!0}penup(){this.turtle.pen=!1}setposition(e,t){this.turtle.x=e,this.turtle.y=t}position(){return[this.turtle.x,this.turtle.y]}left(e){this.turtle.angle-=e}right(e){this.turtle.angle+=e}setheading(e){this.turtle.angle=e}heading(){return this.turtle.angle}forward(e){const t=this._angleMode;this.pInst.angleMode(this.pInst.DEGREES);const n=this.turtle.x+e*this.pInst.cos(this.turtle.angle-90),r=this.turtle.y+e*this.pInst.sin(this.turtle.angle-90);this.pInst.angleMode(t),this.turtle.pen&&(this.pInst.push(),this.pInst.strokeWeight(this.turtle.penwidth),this.pInst.stroke(this.turtle.pencolor),this.pInst.line(this.turtle.x,this.turtle.y,n,r),this.pInst.pop()),this.turtle.x=n,this.turtle.y=r}back(e){this.forward(-e)}circle(e){this.turtle.pen&&(this.pInst.push(),this.pInst.strokeWeight(this.turtle.penwidth),this.pInst.stroke(this.turtle.pencolor),this.pInst.circle(this.turtle.x,this.turtle.y,2*e),this.pInst.pop())}}const pae=p5.prototype.circle;p5.prototype.circle=function(){pae&&(1!==arguments.length?pae.call(this,...arguments):this.getDefaultTurtle().circle(arguments[0]))},p5.prototype.createTurtle=function(){return new lae(this)},p5.prototype.getDefaultTurtle=function(){return this.defaultTurtle||(this.defaultTurtle=this.createTurtle()),this.defaultTurtle},p5.prototype.home=function(){this.getDefaultTurtle().home()},p5.prototype.pencolor=function(e){this.getDefaultTurtle().pencolor(e)},p5.prototype.pensize=function(e){this.getDefaultTurtle().pensize(e)},p5.prototype.pendown=function(){this.getDefaultTurtle().pendown()},p5.prototype.penup=function(){this.getDefaultTurtle().penup()},p5.prototype.setposition=function(e,t){this.getDefaultTurtle().setposition(e,t)},p5.prototype.position=function(){return this.getDefaultTurtle().position()},p5.prototype.left=function(e){this.getDefaultTurtle().left(e)},p5.prototype.right=function(e){this.getDefaultTurtle().right(e)},p5.prototype.setheading=function(e){this.getDefaultTurtle().setheading(e)},p5.prototype.heading=function(){return this.getDefaultTurtle().heading()},p5.prototype.forward=function(e){this.getDefaultTurtle().forward(e)},p5.prototype.back=function(e){this.getDefaultTurtle().back(e)};var dae=q7,hae=K7,fae=W7,mae=U7,gae=H7;const yae=p5;var xae=yae.prototype.createVector,bae=function(){function e(t){if(this.isComplex=!1,"number"==typeof t)this.tensor=ku(t);else if(t instanceof Array)this.tensor=Mi(t);else if(t instanceof yae.Vector){var n=t.array();this.tensor=Mi(n)}else if(t instanceof e)this.tensor=t.tensor;else{if(!(t instanceof Xa))throw new Error("Tensors must be created from Numbers, Arrays, or p5.Vectors.");this.tensor=t}this.shape=this.tensor.shape}return e.prototype.toString=function(){return this.tensor.toString()},e.prototype.print=function(){this.tensor.print()},e.prototype.array=function(){return function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}u((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){return function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}(this,(function(e){switch(e.label){case 0:return[4,this.tensor.array()];case 1:return[2,e.sent()]}}))}))},e.prototype.arraySync=function(){return this.tensor.arraySync()},e.prototype.toVector=function(){var e=JSON.stringify(this.shape);if("[2]"===e||"[3]"===e){var t=this.arraySync();return xae().set(t)}throw new Error("Tensor cannot be represented as a 3D vector.")},e.prototype.toScalar=function(){switch(JSON.stringify(this.shape)){case"[]":return this.arraySync();case"[1]":return this.arraySync()[0];default:throw new Error("Tensor cannot be represented as a scalar.")}},e.prototype.dispose=function(){this.tensor.dispose()},e.prototype.equals=function(t){var n=this;if(t instanceof e){if(t.isComplex&&this.isComplex)return this.complexEquals(t);if(t.isComplex||this.isComplex)throw new Error("Both tensors must be either real or complex.")}var r=!1;return Yo((function(){var a=new e(t);if(n.tensor.rank!==a.tensor.rank)throw new Error("Both tensors must have the same rank.");1===qu(n.tensor.equal(a.tensor)).arraySync()&&(r=!0)})),r},e.prototype.real=function(){var t=this;if(!this.isComplex)throw new Error("Tensor must be complex to use this method.");return new e(Yo((function(){return wp(t.tensor)})))},e.prototype.imag=function(){var t=this;if(!this.isComplex)throw new Error("Tensor must be complex to use this method.");return new e(Yo((function(){return ll(t.tensor)})))},e.prototype.complexEquals=function(e){var t=this,n=!1;return Yo((function(){var r=t.real().equals(e.real()),a=t.imag().equals(e.imag());r&&a&&(n=!0)})),n},e.prototype.add=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.add(r.tensor)})),a=new e(r);return t instanceof e&&this.isComplex&&t.isComplex&&(a.isComplex=!0),a},e.prototype.sub=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.sub(r.tensor)})),a=new e(r);return t instanceof e&&this.isComplex&&t.isComplex&&(a.isComplex=!0),a},e.prototype.mult=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.mul(r.tensor)})),a=new e(r);return t instanceof e&&this.isComplex&&t.isComplex&&(a.isComplex=!0),a},e.prototype.div=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.div(r.tensor)})),a=new e(r);return t instanceof e&&this.isComplex&&t.isComplex&&(a.isComplex=!0),a},e.prototype.dot=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.dot(r.tensor)}));return new e(r)},e.prototype.abs=function(){var t=this;return new e(Yo((function(){return t.tensor.abs()})))},e.prototype.ceil=function(){var t=this;return new e(Yo((function(){return t.tensor.ceil()})))},e.prototype.constrain=function(t,n){var r=this;return new e(Yo((function(){return r.tensor.clipByValue(t,n)})))},e.prototype.exp=function(){var t=this;return new e(Yo((function(){return t.tensor.exp()})))},e.prototype.floor=function(){var t=this;return new e(Yo((function(){return t.tensor.floor()})))},e.prototype.log=function(){var t=this;return new e(Yo((function(){return t.tensor.log()})))},e.prototype.max=function(){var e,t=this;return Yo((function(){var n=kl(t.tensor);e=n.arraySync()})),e},e.prototype.min=function(){var e,t=this;return Yo((function(){var n=Hl(t.tensor);e=n.arraySync()})),e},e.prototype.mod=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.mod(r.tensor)}));return new e(r)},e.prototype.pow=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.pow(r.tensor)}));return new e(r)},e.prototype.round=function(){var t=this;return new e(Yo((function(){return t.tensor.round()})))},e.prototype.sq=function(){var t=this;return new e(Yo((function(){return t.tensor.square()})))},e.prototype.sqrt=function(){var t=this;return new e(Yo((function(){return t.tensor.sqrt()})))},e.prototype.fft=function(){if(this.isComplex){var t=new e(this.tensor.fft());return t.isComplex=!0,t}throw new Error("Tensor must be complex to compute FFT.")},e.prototype.sum=function(t){var n=this;return new e(Yo((function(){return n.tensor.sum(t)})))},e.prototype.acos=function(){var t=this;return new e(Yo((function(){return t.tensor.acos()})))},e.prototype.asin=function(){var t=this;return new e(Yo((function(){return t.tensor.asin()})))},e.prototype.atan=function(){var t=this;return new e(Yo((function(){return t.tensor.atan()})))},e.prototype.atan2=function(t){var n=this,r=Yo((function(){var r=new e(t);return n.tensor.atan2(r.tensor)}));return new e(r)},e.prototype.cos=function(){var t=this;return new e(Yo((function(){return t.tensor.cos()})))},e.prototype.sin=function(){var t=this;return new e(Yo((function(){return t.tensor.sin()})))},e.prototype.tan=function(){var t=this;return new e(Yo((function(){return t.tensor.tan()})))},e.complex=function(t,n){var r=Yo((function(){var r,a;if("number"==typeof t&&"number"==typeof n||t instanceof Array&&n instanceof Array)r=Mi(t),a=Mi(n);else{if(!(t instanceof e&&n instanceof e))throw new Error("Components must be either Numbers, Arrays, or Tensors");r=Ts(t.tensor),a=Ts(n.tensor)}return Di(r,a)})),a=new e(r);return a.isComplex=!0,a},e.prototype.copy=function(){var t=this;return new e(Yo((function(){return t.tensor.clone()})))},e.eye=function(t,n){return new e(Yo((function(){return il(t,n)})))},e.fill=function(t,n){return new e(Yo((function(){return Cu(t,n)})))},e.linspace=function(t,n,r){return new e(Yo((function(){return yl(t,n,r)})))},e.ones=function(t){return new e(Yo((function(){return jl(t)})))},e.random=function(t){return new e(Yo((function(){return bp(t)})))},e.randomGaussian=function(t,n,r){return new e(Yo((function(){return xp(t,n,r)})))},e.range=function(t,n,r){return new e(Yo((function(){return vp(t,n,r)})))},e.zeros=function(t){return new e(Yo((function(){return Vl(t)})))},e.prototype.flatten=function(){var t=this;return new e(Yo((function(){return t.tensor.flatten()})))},e.prototype.pad=function(t,n){var r=this;return new e(Yo((function(){return r.tensor.pad(t,n)})))},e.prototype.reshape=function(t){var n=this;return new e(Yo((function(){return n.tensor.reshape(t)})))},e.prototype.concat=function(t,n){var r=this;return new e(Yo((function(){var a=[r.tensor];if(t instanceof e)a.push(t.tensor);else if(Array.isArray(t)){var i=t.map((function(e){return e.tensor}));Array.prototype.push.apply(a,i)}return fc(a,n)})))},e.prototype.reverse=function(t){var n=this;return new e(Yo((function(){return n.tensor.reverse(t)})))},e.prototype.slice=function(t,n){var r=this;return new e(Yo((function(){return r.tensor.slice(t,n)})))},e.prototype.split=function(t,n){var r=this,a=Yo((function(){return r.tensor.split(t,n)})).map((function(t){return new e(t)}));return a},e.stack=function(t,n){var r=Yo((function(){for(var e=new Array(t.length),r=0;r<t.length;r+=1)e[r]=t[r].tensor;return Zp(e,n)}));return new e(r)},e.prototype.unstack=function(t){var n=this,r=Yo((function(){return n.tensor.unstack(t)})).map((function(t){return new e(t)}));return r},e.prototype.addRows=function(t,n,r){var a=this;return void 0===r&&(r=1),new e(Yo((function(){if(2!==a.shape.length)throw new Error("Elementary row operations are only defined on matrices.");var e=a.tensor.slice(0,t),i=a.tensor.slice(t,1),s=a.tensor.slice(n,1),o=a.tensor.slice(t+1,a.shape[0]-t-1);return i=i.add(s.mul(r)),e.concat([i,o])})))},e.prototype.subRows=function(t,n,r){var a=this;return void 0===r&&(r=1),new e(Yo((function(){if(2!==a.shape.length)throw new Error("Elementary row operations are only defined on matrices.");var e=a.tensor.slice(0,t),i=a.tensor.slice(t,1),s=a.tensor.slice(n,1),o=a.tensor.slice(t+1,a.shape[0]-t-1);return i=i.sub(s.mul(r)),e.concat([i,o])})))},e.prototype.swapRows=function(t,n){var r=this,a=Math.min(t,n),i=Math.max(t,n);return new e(Yo((function(){if(2!==r.shape.length)throw new Error("Elementary row operations are only defined on matrices.");var e=r.tensor.slice(0,a),t=r.tensor.slice(a,1),n=r.tensor.slice(a+1,i-a-1),s=r.tensor.slice(i,1),o=r.tensor.slice(i+1,r.shape[0]-i-1);return e.concat([s,n,t,o])})))},e.prototype.mulRow=function(t,n){var r=this;return new e(Yo((function(){if(2!==r.shape.length)throw new Error("Elementary row operations are only defined on matrices.");var e=r.tensor.slice(0,t),a=r.tensor.slice(t,1),i=r.tensor.slice(t+1,r.shape[0]-t-1);return a=a.mul(n),e.concat([a,i])})))},e}(),vae=function(e){return new bae(e)},wae=function(e,t){return e.add(t)},Nae=function(e,t){return e.sub(t)},Sae=function(e,t){return e.mult(t)},kae=function(e,t){return e.div(t)},Iae=function(e,t){return e.dot(t)},Eae=function(e){return e.abs()},Cae=function(e){return e.ceil()},Tae=function(e,t,n){return e.constrain(t,n)},Dae=function(e){return e.exp()},Aae=function(e){return e.floor()},Mae=function(e){return e.log()},$ae=function(e){return e.max()},Oae=function(e){return e.min()},Rae=function(e,t){return e.mod(t)},_ae=function(e,t){return e.pow(t)},Fae=function(e){return e.round()},zae=function(e){return e.sq()},Bae=function(e){return e.sqrt()},Lae=function(e,t){return e.sum(t)},Pae=function(e){return e.acos()},Uae=function(e){return e.asin()},qae=function(e){return e.atan()},Wae=function(e,t){return e.atan2(t)},Vae=function(e){return e.cos()},jae=function(e){return e.sin()},Gae=function(e){return e.tan()},Hae=function(e,t){return bae.complex(e,t)},Kae=function(e){return e.copy()},Xae=function(e,t){return bae.eye(e,t)},Zae=function(e,t){return bae.fill(e,t)},Yae=function(e,t,n){return bae.linspace(e,t,n)},Jae=function(e){return bae.ones(e)},Qae=function(e){return bae.random(e)},eie=function(e,t,n){return bae.randomGaussian(e,t,n)},tie=function(e,t,n){return bae.range(e,t,n)},nie=function(e){return bae.zeros(e)},rie=function(e){return e.flatten()},aie=function(e,t,n){return e.pad(t,n)},iie=function(e,t){return e.reshape(t)},sie=function(e,t){if(e.length<2)throw new Error("Two or more tensors must be provided.");var n=e[0],r=e.slice(1);return n.concat(r,t)},oie=function(e,t){return e.reverse(t)},uie=function(e,t,n){return e.slice(t,n)},cie=function(e,t,n){return e.split(t,n)},lie=function(e,t){return bae.stack(e,t)},pie=function(e,t){return e.unstack(t)},die=function(e){var t=e.shape[e.shape.length-1],n=e.tensor.topk(t,!0),r=n.values;return n.indices.dispose(),new bae(r)},hie=function(e){return e.fft()},fie=Xo,mie=Yo,gie=function(){return Ko().startScope()},yie=function(){return Ko().endScope()},xie=function(e){e instanceof bae?Qo(e.tensor):e instanceof Array&&e.forEach((function(e){return Qo(e.tensor)}))},bie=function(e){e instanceof bae?e.dispose():e instanceof Array&&e.forEach((function(e){return e.dispose()}))},vie=yae.prototype.createImage,wie=function(e,t){return vae(io(e.canvas,t))},Nie=function(e){var t=e.tensor.shape,n=t[0],r=t[1],a=t[2],i=vie(r,n),s=e.tensor.toInt(),o=s.as3D(n,r,a);return ao(o,i.canvas).then((function(){return s.dispose(),o.dispose(),i}))},Sie=function(e){return e.max()-e.min()},kie=function(e,t){var n=Sie(e);if(t instanceof Array){var r=[];return t.forEach((function(e){if(e<0||e>100)throw new Error("Percentile must be in the range [0, 100].");r.push(n*(e/100))})),r}if(t<0||t>100)throw new Error("Percentile must be in the range [0, 100].");return n*(t/100)},Iie=function(e,t){var n=Sie(e);if(t instanceof Array){var r=[];return t.forEach((function(e){if(e<0||e>1)throw new Error("Quantile must be in the range [0, 1].");r.push(n*e)})),r}if(t<0||t>1)throw new Error("Quantile must be in the range [0, 1].");return n*t},Eie=function(e,t,n){var r=e.tensor.mean(t,n);return new bae(r)},Cie=function(e,t){if(t instanceof bae){var n=e.mult(t),r=n.sum(),a=t.sum(),i=r.div(a);return n.dispose(),r.dispose(),a.dispose(),i}return Eie(e)},Tie=function(e){var t=Yo((function(){var t=Eie(e),n=e.sub(t).sq().sum(),r=e.shape.reduce((function(e,t){return e*t}));return n.div(r).sqrt().tensor}));return new bae(t)},Die=function(e){var t=Tie(e),n=t.sq();return t.dispose(),n},Aie=yae.prototype,Mie=Aie.min,$ie=Aie.max,Oie=Aie.map,Rie=function(e){e.push();var t=e.width-50,n=e.height-50;return e.stroke("black"),e.strokeWeight(1),e.fill("white"),e.rect(40,10,t,n),e.pop(),{ox:40,oy:10,width:t,height:n,bigPad:40,littlePad:10}},_ie=function(e,t,n,r,a,i,s){void 0===i&&(i=7),void 0===s&&(s=20),e.push(),e.translate(t,n),e.push(),e.stroke("black"),e.strokeWeight(1),e.line(0,0,r,0),e.line(0,0,0,a),e.pop(),e.push(),e.stroke("black"),e.strokeWeight(1);for(var o=(r-2*s)/(i-1),u=0;u<i;u+=1){var c=s+u*o;e.line(c,0,c,5)}e.pop(),e.push(),e.stroke("black"),e.strokeWeight(1);var l=(a-2*s)/(i-1);for(u=0;u<i;u+=1){var p=s+u*l;e.line(0,p,5,p)}e.pop(),e.pop()},Fie=function(e,t,n,r){void 0===r&&(r=7);var a=e.figure(),i=a.ox,s=a.oy,o=a.width,u=a.height,c=a.bigPad,l=a.littlePad;e.push(),e.scale(1,-1),e.translate(0,-e.height-l+c);var p=20;e.axes(i,s,o,u,r,p),e.pop();var d=Mie(t),h=$ie(t),f=h-d,m=Mie(n),g=$ie(n),y=g-m,x=i+p,b=s+p;e.push(),e.textAlign(e.CENTER,e.CENTER),e.noStroke(),e.fill("black"),e.translate(x,s+u+p);for(var v=(o-40)/(r-1),w=0;w<r;w+=1){var N=d+w/(r-1)*f;N=e.abs(N)<1?e.nf(N,1,2):e.abs(N)<10?e.nf(N,1,1):e.round(N),e.text(N,w*v,0)}e.pop(),e.push(),e.textAlign(e.CENTER,e.CENTER),e.noStroke(),e.fill("black"),e.translate(i-p,b);var S=(u-40)/(r-1);for(w=0;w<r;w+=1)N=g-w/(r-1)*y,N=e.abs(N)<1?e.nf(N,1,2):e.abs(N)<10?e.nf(N,1,1):e.round(N),e.text(N,0,w*S);return e.pop(),{xmin:d,xmax:h,ymin:m,ymax:g,pad:c+p,width:o-40,height:u-40}},zie=function(e,t,n,r){if(void 0===r&&(r=7),!(t instanceof Array&&n instanceof Array))throw new Error("plots must be created from Arrays.");if(t.length!==n.length)throw new Error("x and y Arrays must be the same length.");var a=e.basePlot(t,n,r),i=a.xmin,s=a.xmax,o=a.ymin,u=a.ymax,c=a.pad,l=a.width,p=a.height;e.push(),e.scale(1,-1),e.translate(c,-e.height+c);for(var d=0;d<t.length-1;d+=1){var h=Oie(t[d],i,s,0,l),f=Oie(n[d],o,u,0,p),m=Oie(t[d+1],i,s,0,l),g=Oie(n[d+1],o,u,0,p);e.line(h,f,m,g)}e.pop()},Bie=function(e,t,n,r){if(void 0===r&&(r=7),!(t instanceof Array&&n instanceof Array))throw new Error("plots must be created from Arrays.");if(t.length!==n.length)throw new Error("x and y Arrays must be the same length.");var a=e.basePlot(t,n,r),i=a.xmin,s=a.xmax,o=a.ymin,u=a.ymax,c=a.pad,l=a.width,p=a.height;e.push(),e.scale(1,-1),e.translate(c,-e.height+c);for(var d=0;d<t.length;d+=1){var h=Oie(t[d],i,s,0,l),f=Oie(n[d],o,u,0,p);e.point(h,f)}e.pop()},Lie=function(e,t,n){if(n||2===arguments.length)for(var r,a=0,i=t.length;a<i;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))},Pie=function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})).filter((function(e){return e})).length;r.setNum(t,n)})),n}return e.getColumn(t).map((function(e){return parseFloat(e)})).filter((function(e){return e})).length},Uie=function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})),a=_5(n);r.setNum(t,a)})),n}var a=e.getColumn(t).map((function(e){return parseFloat(e)}));return _5(a)},qie=function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})),a=m4(n);r.setNum(t,a)})),n}var a=e.getColumn(t).map((function(e){return parseFloat(e)}));return m4(a)},Wie=function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})),a=m3(n);r.setNum(t,a)})),n}var a=e.getColumn(t).map((function(e){return parseFloat(e)}));return m3(a)},Vie=function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})),a=L5(n);r.setNum(t,a)})),n}var a=e.getColumn(t).map((function(e){return parseFloat(e)}));return L5(a)};p5.prototype.createTensor=vae,p5.prototype.registerMethod("init",gie),p5.prototype.registerMethod("pre",gie),p5.prototype.registerMethod("post",yie),p5.prototype.registerMethod("remove",yie);var jie=tu,Gie=ru;p5.prototype.figure=function(){return Rie(this)},p5.prototype.axes=function(e,t,n,r,a){void 0===a&&(a=7),_ie(this,e,t,n,r,a)},p5.prototype.basePlot=function(e,t,n){return void 0===n&&(n=7),Fie(this,e,t,n)},p5.prototype.plot=function(e,t,n){void 0===n&&(n=7),zie(this,e,t,n)},p5.prototype.scatter=function(e,t,n){void 0===n&&(n=7),Bie(this,e,t,n)},p5.Table.prototype.count=function(e){return Pie(this,e)},p5.Table.prototype.mean=function(e){return Uie(this,e)},p5.Table.prototype.median=function(e){return function(e,t){if(void 0===t){var n=new yae.Table;n.columns=e.columns;var r=n.addRow();return e.columns.forEach((function(t){var n=e.getColumn(t).map((function(e){return parseFloat(e)})),a=F5(n);r.setNum(t,a)})),n}var a=e.getColumn(t).map((function(e){return parseFloat(e)}));return F5(a)}(this,e)},p5.Table.prototype.max=function(e){return qie(this,e)},p5.Table.prototype.min=function(e){return Wie(this,e)},p5.Table.prototype.sd=function(e){return Vie(this,e)},p5.Table.prototype.describe=function(){return function(e){var t=new yae.Table;t.columns=e.columns;var n=t.addRow(),r=Pie(e),a=t.addRow(),i=Uie(e),s=t.addRow(),o=Vie(e),u=t.addRow(),c=Wie(e),l=t.addRow(),p=qie(e);t.columns.forEach((function(e){n.set(e,r.get(0,e)),a.set(e,i.get(0,e)),s.set(e,o.get(0,e)),u.set(e,c.get(0,e)),l.set(e,p.get(0,e))}));var d=t.addRow(),h=t.addRow(),f=t.addRow();return t.columns.forEach((function(e){var n=t.getNum(3,e),r=t.getNum(4,e)-n;d.set(e,n+.25*r),h.set(e,n+.5*r),f.set(e,n+.75*r)})),t}(this)},p5.Table.prototype.concat=function(e,t){return void 0===t&&(t=0),function(e,t,n){if(void 0===n&&(n=0),0===n){var r=new yae.Table,a=e.columns.every((function(e,n){return e===t.columns[n]}));if(a)r.columns=e.columns.slice(),e.rows.forEach((function(e){return r.addRow(e)})),t.rows.forEach((function(e){return r.addRow(e)}));else{var i=[];e.columns.forEach((function(e){return i.push(e)})),t.columns.forEach((function(e){i.indexOf(e)<0&&i.push(e)})),r.columns=i,e.rows.forEach((function(e){var t=r.addRow();r.columns.forEach((function(n){return t.set(n,e.get(n))}))})),t.rows.forEach((function(e){var t=r.addRow();r.columns.forEach((function(n){return t.set(n,e.get(n))}))})),e.clearRows(),e.columns.slice().forEach((function(t){return e.removeColumn(t)})),r.columns.forEach((function(t){return e.addColumn(t)})),r.rows.forEach((function(t){return e.addRow(t)}))}return r}if(1===n){var s=new yae.Table,o=[];e.columns.forEach((function(e){return o.push(e)})),t.columns.forEach((function(e){return o.push(e)})),s.columns=o;var u={},c=void 0,l=void 0;e.rows.length>t.rows.length?(c="t2",u[l="t1"]=e,u[c]=t):(l="t2",u[c="t1"]=e,u[l]=t);for(var p=u[c].rows.length,d=u[l].rows.length,h=function(e){var t=s.addRow(),n=u[l].rows[e];if(u[l].columns.forEach((function(e){t.set(e,n.get(e))})),e<p){var r=u[c].rows[e];u[c].columns.forEach((function(e){t.set(e,r.get(e))}))}},f=0;f<d;f+=1)h(f);return e.clearRows(),e.columns.slice().forEach((function(t){return e.removeColumn(t)})),s.columns.forEach((function(t){return e.addColumn(t)})),s.rows.forEach((function(t){return e.addRow(t)})),s}throw new Error("axis argument must be 0 or 1.")}(this,e,t)},p5.Table.prototype.map=function(e){return function(e,t){var n=new yae.Table;return n.columns=e.columns,e.rows.forEach((function(e){var r=n.addRow();n.columns.forEach((function(n){r.set(n,t(e.get(n)))}))})),n}(this,e)},p5.Table.prototype.merge=function(e,t){return function(e,t,n){var r=e.columns.indexOf(n)>=0,a=t.columns.indexOf(n)>=0;if(!r||!a)throw new Error("Both tables must have the same key.");var i=new yae.Table,s=e.columns.filter((function(e){return e!==n})),o=t.columns.filter((function(e){return e!==n}));return i.columns=Lie(Lie([n],s,!0),o,!0),e.rows.forEach((function(e){var r=e.get(n);t.rows.forEach((function(t){var a=t.get(n);if(r===a){var u=i.addRow(),c=e.get(n);u.set(n,c),s.forEach((function(t){c=e.get(t),u.set(t,c)})),o.forEach((function(e){c=t.get(e),u.set(e,c)}))}}))})),i}(this,e,t)},p5.Table.prototype.isin=function(e){return function(e,t){var n=new yae.Table;return n.columns=e.columns,e.rows.forEach((function(e){var r=n.addRow();n.columns.forEach((function(n){r.set(n,!1);var a=e.get(n);t.every((function(e){return a!==e||(r.set(n,!0),!1)}))}))})),n}(this,e)}})(),num=r})();